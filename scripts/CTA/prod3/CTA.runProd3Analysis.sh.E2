#!/bin/sh
#
# analysis submission for production 3 analysis 
#
# this script is optimized for the DESY analysis 
#
##############################################


if [ $# -lt 3 ] 
then
   echo 
   echo "./CTA.runProd3Analysis.sh <South: S.20deg, S.40deg, S.HB8, North: N.N,N.F, N.IN, N.IF> <run mode> <recid> [min number of LSTs] [min number of MSTs] min number of SSTs]"
   echo
   echo "  South array: S.20deg, S.40deg, S.HB8, S.HB89. S.HB8RF, S.HB89RF, S.HB89TS"
   echo "  North array: N.N=NectarCam / N.F=FlashCam / N.IN / N.IF"
   echo
   echo "  possible run modes are EVNDISP MAKETABLES ANATABLES TRAIN ANGRES QC CUTS PHYS "
   echo
   echo "  <recids>: 0 = all telescopes, 1 = LSTs, 2 = MSTs, 3 = SSTs, 4 = MSTs+SSTs"
   echo
   exit
fi

# site
P2="$1"
# run mode
RUN="$2"
# reconstruction IDs
RECID=$3
# list of subarrays
SUBARRAY="1 2 3 4 5"
SUBARRAY="5"
# multiplicity
NIMAGESMIN="2"
LST=2
if [ -n $4 ]
then
   LST=$4
fi
MST=2
if [ -n $5 ]
then
   MST=$5
fi
SST=2
if [ -n $6 ]
then
   SST=$6
fi

# should be either onSource or cone
OFFAXIS="onSource"

#####################################
# qsub options (priorities)
#   _M_ = -; _X_ = " "
QSUBOPT="_M_P_X_cta_high"
QSUBOPT="_M_js_X_9"
QSUBOPT="_M_P_X_cta_high_X__M_js_X_8"

#####################################
# output directory for script parameter files
PDIR="$CTA_USER_LOG_DIR/tempRunParameterDir/"
mkdir -p $PDIR

#####################################
# analysis dates and table dates

TDATE="d20161026"
DATE="d20161026"
# disp100 Tel and dispEnergy
TMVADATE="d20160423"
EFFDATE="d20160423"
# disp4Tel and no dispEnergy
TMVADATE="d20161120"
EFFDATE="d20161120"
# updated disp method (disp100 Tel and dispEnergy)
TMVADATE="d20161124"
EFFDATE="d20161124"
# updated disp method (disp100 Tel, disp error, and LT Energy)
TMVADATE="d20161127LTE"
EFFDATE="d20161127LTE"

#####
# default as of January 2017
# updated disp method (disp100 Tel, disp error, and dispEnergy)
ANADATE="d20161127"
TMVADATE="d20161128"
EFFDATE="d20170120"

TMVAVERSION="V2"

#####################################
# shower directions
#
# _180deg = south
# _0deg = north
MCAZ=( "_180deg" )
MCAZ=( "_180deg" "_0deg" "" )

#####################################
# sites & sub array lists

##########################################################
#### SOUTH
 
# SOUTH 20deg 
if [[ $P2 == "S.20deg" ]]
then
   TDATE="d20160304"
   TMVADATE="d20160304"
   ARRAY="subArray.prod3S.HB1.list"
   OFFAXIS="cone"
   SITE=( "prod3-paranal" )
   EDM=( "p05-NN" )
# SOUTH 20deg, multiplicity tests
elif [[ $P2 == *"S.20degq05"* ]]
then
   SUBARRAY="5"
   TDATE="d20160304"
   TMVADATE="d20160304"
   ARRAY="subArray.prod3S.HB1-NG.list" 
   OFFAXIS="cone"
   SITE=( "prod3-paranal" )
   PPROD="${P2: -1}"
   EDM=( "${PPROD}05-NN" )
   #################
   # DISP TESTS
    DATE="d20160609"
    TMVADATE="d20160609"
    EFFDATE="d20160609"
   # DISP TESTS
   #################
# SOUTH 20deg, HB8 and HF8 arrays
elif [[ $P2 == "S.HB8" ]]
then
   SUBARRAY="1"
   TDATE="d20160304"
   TMVADATE="d20160304"
   ARRAY="subArray.prod3S.HB8.list"
   OFFAXIS="cone"
   SITE=( "prod3-paranal" )
   EDM=( "p05-NN" )
# SOUTH 20deg, HB89
elif [[ $P2 == "S.HB89" ]]
then
   SUBARRAY="1"
   TDATE="d20160304"
   TMVADATE="d20160304"
   ARRAY="subArray.prod3S.HB89.list"
   OFFAXIS="cone"
   SITE=( "prod3-paranal" )
   EDM=( "p05-NN" )
# SOUTH 20deg, HB8 and HF8 staging and reference arrays
elif [[ $P2 == "S.HB89TS" ]]
then
   SUBARRAY="1"
   TDATE="d20160304"
   TMVADATE="d20160304"
   ARRAY="subArray.prod3S.HB89TS.list"
   OFFAXIS="cone"
   SITE=( "prod3-paranal" )
   EDM=( "p05-NN" )
# SOUTH 20deg, HB2/HB3/HB4
elif [[ $P2 == "S.HB" ]]
then
   SUBARRAY="1 2 3 4 5"
   TDATE="d20160304"
   TMVADATE="d20160304"
   ARRAY="subArray.prod3S.HB.list"
   OFFAXIS="cone"
   SITE=( "prod3-paranal" )
   EDM=( "p05-NN" )
###
# SOUTH 40deg 
###
# SOUTH 40deg 
elif [[ $P2 == "S.40deg" ]]
then
   SUBARRAY="1 2 3 4 5"
   SUBARRAY="5"
   TDATE="d20160224"
   TMVADATE="d20160304"
   ARRAY="subArray.prod3S.HB89.list"
   ARRAY="subArray.prod3S.HB140deg.list"
   OFFAXIS="cone"
   SITE=( "prod3-paranalp05-40deg-NN" )
   EDM=( "" )
elif [[ $P2 == "S.40degq05" ]]
then
   SUBARRAY="1 2 3 4 5"
   SUBARRAY="5"
   TDATE="d20160224"
   TMVADATE="d20160304"
   ARRAY="subArray.prod3S.HB140deg.list"
   OFFAXIS="cone"
   SITE=( "prod3-paranalq05-40deg-NN" )
   EDM=( "" )
#### NORTH
# NectarCam
elif [[ $P2 == "N.N" ]]
then
   SUBARRAY="5"
   ARRAY="subArray.prod3N-N.list"
   OFFAXIS="cone"
   SITE=( "prod3-LaPalma" )
   EDM=( "p05-NN" )
   TMVAVERSION="V2"
   EFFVERSION="V2"
####
# FlashCam
elif [[ $P2 == "N.F" ]]
then
   SUBARRAY="1 2 3 4 5"
   SUBARRAY="5"
   ARRAY="subArray.prod3N-F.list"
   ARRAY="subArray.prod3N-TS.list"
   OFFAXIS="cone"
   SITE=( "prod3-LaPalma" )
   EDM=( "p05-NN" )
   TMVAVERSION="V2"
   EFFVERSION="V2"
####
# TS reanalysis
elif [[ $P2 == "N.IN" ]]
then
   SUBARRAY="5"
   ARRAY="subArray.prod3N-N.list"
   OFFAXIS="cone"
   SITE=( "prod3-LaPalma" )
   EDM=( "p05-TS" )
elif [[ $P2 == "N.IF" ]]
then
   SUBARRAY="5"
   ARRAY="subArray.prod3N-TS-F.list"
   OFFAXIS="cone"
   SITE=( "prod3-LaPalma" )
   EDM=( "p05-TS" )
else
   echo "error: unknown site; allowed are N or S"
   echo $P2
   exit
fi

#####################################
# particle types
PARTICLE=( "gamma_onSource" )
PARTICLE=( "gamma_onSource" "gamma_cone"  "electron" "proton" )

#####################################
# cut on number of images
NIMAGESMIN="2"
NTYPEMIN_0="$MST"
NTYPEMIN_1="$LST"
NTYPEMIN_2="$SST"

#####################################
# observing time [h]
OBSTIME=( "50h" "5h" "30m" "10m" "10h" "20h" "100h" "500h" "5m" "1m" "2h" )
OBSTIME=( "50h" "5h" "30m" "10m" "1m" )
OBSTIME=( "50h" )
OBSTIME=( "5h" "30m" )
OBSTIME=( "50h" "5h" "30m" )

#####################################
# loop over all sites
NSITE=${#SITE[@]}
for (( m = 0; m < $NSITE ; m++ ))
do
   # site name
   S=${SITE[$m]}
   # eventdisplay analysis method
   M=${EDM[$m]}

   echo
   echo "======================================================================================"
   echo "SITE: $S $M"
   echo "RUN: $RUN"
   echo "ARRAYLIST: $ARRAY"

#####################################
# loop over all array scalings
   for Y in $SUBARRAY
   do
# new array list which picks the desired scaling
# (annoying: here for North only, south is later)
       if [[ $P2 == "N.N" ]] || [[ $P2 == "N.F" ]] || [[ $P2 == "N.IN" ]] || [[ $P2 == "N.IF" ]]
       then
           NXARRAY=`cat $ARRAY | grep "\-${Y}-"`
           NFILARRAY=$PDIR/temp.$ARRAY-${Y}.list
           rm -f $NFILARRAY
           for A in $NXARRAY
           do
               echo ${A} >> $NFILARRAY
           done
       fi

##########################################
# run eventdisplay
        if [[ $RUN == "EVNDISP" ]]
        then
# loop over all particle types
          for ((i = 0; i < ${#PARTICLE[@]}; i++ ))
          do
                  N=${PARTICLE[$i]}

                  # run list for 20 deg files on lustre (default data sets)
                  if [[ $P2 == *"S.20deg"* ]]
                  then
                      LIST=/afs/ifh.de/group/cta/scratch/$USER/LOGS/CTA/runLists/prod3/$S.GRID.${N}_20deg-${Y}.list
                      LIST=/afs/ifh.de/group/cta/scratch/$USER/LOGS/CTA/runLists/prod3/prod3-paranal.GRID.${N}_20deg-${Y}.list
                      LIST=/afs/ifh.de/group/cta/scratch/$USER/LOGS/CTA/runLists/prod3/$S.${N}_20deg-${Y}.list
                      ./CTA.EVNDISP.sub_convert_and_analyse_MC_VDST_ArrayJob.prod3.sh $ARRAY $Y $LIST $N $S$M 0 $i $QSUBOPT $TRG
                  elif [[ $P2 == "S.40degq05" ]]
                  then
                      LIST=/afs/ifh.de/group/cta/scratch/$USER/LOGS/CTA/runLists/prod3/prod3-paranal.${N}_40deg-${Y}.list
                      ./CTA.EVNDISP.sub_convert_and_analyse_MC_VDST_ArrayJob.prod3.sh $ARRAY $Y $LIST $N $S$M 0 $i $QSUBOPT $TRG
                  elif [[ $P2 == "S.HB89" ]]
                  then
                      LIST=/afs/ifh.de/group/cta/scratch/$USER/LOGS/CTA/runLists/prod3/${S}.HB89.${N}_20deg.list
                      ./CTA.EVNDISP.sub_convert_and_analyse_MC_VDST_ArrayJob.prod3.sh $ARRAY $Y $LIST $N $S$M 0 $i $QSUBOPT $TRG
                  # NectarCam
                  elif [[ $P2 == "N.N" ]] || [[ $P2 == "N.IN" ]]
                  then
                       LIST=/afs/ifh.de/group/cta/scratch/$USER/LOGS/CTA/runLists/prod3/$S.NectarCam.${N}_20deg.list   
                       echo $NFILARRAY ${Y} $LIST $N $S$M 0 $i $QSUBOPT $TRG
                       ./CTA.EVNDISP.sub_convert_and_analyse_MC_VDST_ArrayJob.prod3.sh $NFILARRAY ${Y} $LIST $N $S$M 0 $i $QSUBOPT $TRG
                  # FlashCam
                  elif [[ $P2 == "N.F" ]] || [[ $P2 == "N.IF" ]]
                  then
                       LIST=/afs/ifh.de/group/cta/scratch/$USER/LOGS/CTA/runLists/prod3/$S.${N}_20deg.list   
                       ./CTA.EVNDISP.sub_convert_and_analyse_MC_VDST_ArrayJob.prod3.sh $NFILARRAY ${Y} $LIST $N $S$M 0 $i $QSUBOPT $TRG
                  fi
           done
           continue
        fi
##########################################
# for the following: duplicate the array list adding the scaling to array names
# (south only)
        if [[ $P2 == *"S.20deg"* ]] || [[ $P2 == "S.40deg" ]] || [[ $P2 == "S.HB8" ]] || [[ $P2 == "S.HG5" ]] || [[ $P2 == "S.HD1" ]] || [[ $P2 == "S.HB" ]] || [[ $P2 == "S.HB89TS" ]] || [[ $P2 == "S.HB89" ]]
        then
            NXARRAY=`cat $ARRAY`
            NFILARRAY=$PDIR/temp.$ARRAY-${Y}.list
            rm -f $NFILARRAY
            touch $NFILARRAY
            for A in $NXARRAY
            do
                 echo ${A}-${Y} >> $NFILARRAY
            done
        fi
##########################################
# loop over all reconstruction IDs 
# (telescope type dependent subarrays)
        for ID in $RECID
        do
           # directory where all mscw output files are written to
           MSCWSUBDIRECTORY="Analysis-ID$ID-$ANADATE"
# loop over all shower directions 
# (i.e. North and South)
            for ((a = 0; a < ${#MCAZ[@]}; a++ ))
            do
                  AZ=${MCAZ[$a]}
                  if [ "$AZ" ] 
                  then
##########################################
# make (fill) tables
                      TABLE="tables_CTA-$S$M-ID0${AZ}-$TDATE"
                      if [[ $RUN == "MAKETABLES" ]]
                      then
                              echo "Filling table $TABLE"
                              ./CTA.MSCW_ENERGY.sub_make_tables.sh $TABLE $ID $NFILARRAY $OFFAXIS $S$M ${AZ} $QSUBOPT
                              continue
    ##########################################
# analyse with lookup tables
                       elif [[ $RUN == "ANATABLES" ]]
                       then
                              echo "Using table $TABLE"
                              ./CTA.MSCW_ENERGY.sub_analyse_MC.sh $TABLE $ID $NFILARRAY $S$M $MSCWSUBDIRECTORY $OFFAXIS ${AZ} $QSUBOPT
                              continue
                        fi
                   fi
            done
            if [[ $RUN == "MAKETABLES" ]] || [[ $RUN == "ANATABLES" ]]
            then
                   continue
            fi
##########################################
# loop over all observation times
            for ((o = 0; o < ${#OBSTIME[@]}; o++ ))
            do
                    OOTIME=${OBSTIME[$o]}

##########################################
# loop over all shower directions 
# (i.e. North and South)
            for ((a = 0; a < ${#MCAZ[@]}; a++ ))
            do
                  AZ=${MCAZ[$a]}
# fill a run parameter file
                  ETYPF=NIM${NIMAGESMIN}MST${NTYPEMIN_0}LST${NTYPEMIN_1}SST${NTYPEMIN_2}
                  PARA="$PDIR/scriptsInput.prod3.ID${ID}${ETYPF}${AZ}.${S}${AZ}${OOTIME}.runparameter"
                  rm -f $PARA
                  touch $PARA
                  echo "WRITING PARAMETERFILE $PARA"
                  EFFDIR="EffectiveArea-"$OOTIME"-ID$ID$AZ-$ETYPF-$EFFDATE-$EFFVERSION"
                  EFFFULLDIR="$CTA_USER_DATA_DIR/analysis/AnalysisData/$S$M/EffectiveAreas/$EFFDIR/"
                  echo "MSCWSUBDIRECTORY $MSCWSUBDIRECTORY" >> $PARA
                  echo "TMVASUBDIR BDT-${TMVAVERSION}-ID$ID$AZ-$ETYPF-$TMVADATE" >> $PARA
                  echo "EFFAREASUBDIR $EFFDIR" >> $PARA
                  echo "RECID $ID" >> $PARA
                  echo "NIMAGESMIN $NIMAGESMIN" >> $PARA
                  echo "NTYPEMIN_0 $NTYPEMIN_0" >> $PARA
                  echo "NTYPEMIN_1 $NTYPEMIN_1" >> $PARA
                  echo "NTYPEMIN_2 $NTYPEMIN_2" >> $PARA
                  echo "OBSERVINGTIME_H $OOTIME" >> $PARA
                  echo "GETXOFFYOFFAFTERCUTS yes" >> $PARA
##########################################
# train BDTs   
# (note: BDT training does not need to be done for all observing periods)
                  if [[ $RUN == "TRAIN" ]]
                  then
                     if [ ${o} -eq 0 ]
                     then
                         ./CTA.TMVA.sub_train.sh $NFILARRAY $OFFAXIS $S$M $PARA $QSUBOPT $AZ
                     fi
##########################################
# IRFs: angular resolution
                  elif [[ $RUN == "ANGRES" ]]
                  then
                    ./CTA.EFFAREA.sub_analyse_list.sh $NFILARRAY ANASUM.GammaHadron.TMVAFixedSignal $PARA AngularResolution $S$M 2 $QSUBOPT $AZ
##########################################
# IRFs: effective areas after quality cuts
                  elif [[ $RUN == "QC" ]]
                  then
                    if [[ "$OOTIME" = "50h" ]] && [[ "$NTYPEMIN_2" -ge "4" ]]
                    then
                        ./CTA.EFFAREA.sub_analyse_list.sh $NFILARRAY ANASUM.GammaHadron.QC $PARA QualityCuts001CU $S$M 3 $QSUBOPT $AZ
                    # min angle cut depends on observation time: 50h stricter, 5h and and 30 min more relaxed
                    # (never done for 50h observation, as those are expected to require higher resolution)
                    else
                        ./CTA.EFFAREA.sub_analyse_list.sh $NFILARRAY ANASUM.GammaHadron008deg.QC $PARA QualityCuts001CU $S$M 3 $QSUBOPT $AZ
                    fi
                    ./CTA.EFFAREA.sub_analyse_list.sh $NFILARRAY ANASUM.GammaHadron.QC $PARA QualityCuts001CU $S$M 3 $QSUBOPT $AZ
##########################################
# IRFs: effective areas after gamma/hadron cuts
                  elif [[ $RUN == "CUTS" ]]
                  then
                    # large multiplicity runs use 80% max signal efficiency (best resolution)
                    if [[ "$OOTIME" = "50h" ]] && [[ "$NTYPEMIN_2" -ge "4" ]]
                    then
                        ./CTA.EFFAREA.sub_analyse_list.sh $NFILARRAY ANASUM.GammaHadron.TMVA $PARA BDT."$OOTIME"-${EFFVERSION}.$EFFDATE $S$M 0 $QSUBOPT $AZ
                    # low multiplicity runs use 95% max signal efficiency (lower requirements on resolution)
                    else
                        ./CTA.EFFAREA.sub_analyse_list.sh $NFILARRAY ANASUM.GammaHadron95p008deg.TMVA $PARA BDT."$OOTIME"-${EFFVERSION}.$EFFDATE $S$M 0 $QSUBOPT $AZ
                    fi
##########################################
# CTA WP Phys files
                  elif [[ $RUN == "PHYS" ]]
                  then
                     if [[ $OFFAXIS == "cone" ]]
                     then
#                        ./CTA.WPPhysWriter.sub.sh $NFILARRAY $EFFFULLDIR/BDT."$OOTIME"-${EFFVERSION}.$EFFDATE $OOTIME DESY.$EFFDATE.${EFFVERSION}.ID$ID$AZ$ETYPF.$S$M 1 $ID $S$M $QSUBOPT
                        ./CTA.WPPhysWriter.sub.sh $NFILARRAY $EFFFULLDIR/BDT."$OOTIME"-${EFFVERSION}.$EFFDATE $OOTIME DESY.$EFFDATE.V2.ID$ID$AZ$ETYPF.$S$M 1 $ID $S$M $QSUBOPT
                     else
#                        ./CTA.WPPhysWriter.sub.sh $NFILARRAY $EFFFULLDIR/BDT."$OOTIME"-${EFFVERSION}.$EFFDATE $OOTIME DESY.$EFFDATE.${EFFVERSION}.ID$ID$AZ$ETYPF.$S$M 0 $ID $S$M $QSUBOPT
                        ./CTA.WPPhysWriter.sub.sh $NFILARRAY $EFFFULLDIR/BDT."$OOTIME"-${EFFVERSION}.$EFFDATE $OOTIME DESY.$EFFDATE.V2.ID$ID$AZ$ETYPF.$S$M 0 $ID $S$M $QSUBOPT
                 fi
# unknown run set
                 elif [[ $RUN != "EVNDISP" ]]
                 then
                      echo "Unknown run set: $RUN"
                      exit
                fi
         done
      done
     done
   done
   echo 
   echo "(end of script)"
done
