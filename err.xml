<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.6.3"/>
    <errors>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iDir&apos; should be passed by const reference." verbose="Parameter &apos;iDir&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/CData.h">
            <location file="inc/VGlobalRunParameter.h" line="148" column="57"/>
            <symbol>iDir</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;CData::b_loss&apos; is not initialized in the constructor." verbose="Member variable &apos;CData::b_loss&apos; is not initialized in the constructor." cwe="398" file0="inc/CData.h">
            <location file="inc/CData.h" line="468" column="8"/>
            <symbol>CData::b_loss</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;CData::b_nsat&apos; is not initialized in the constructor." verbose="Member variable &apos;CData::b_nsat&apos; is not initialized in the constructor." cwe="398" file0="inc/CData.h">
            <location file="inc/CData.h" line="468" column="8"/>
            <symbol>CData::b_nsat</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;CData::b_nlowgain&apos; is not initialized in the constructor." verbose="Member variable &apos;CData::b_nlowgain&apos; is not initialized in the constructor." cwe="398" file0="inc/CData.h">
            <location file="inc/CData.h" line="468" column="8"/>
            <symbol>CData::b_nlowgain</symbol>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;Init&apos; is called from constructor &apos;CData(TTree*tree=0,bool bMC=false,bool bShort=false)&apos; at line 474. Dynamic binding is not used." verbose="Virtual function &apos;Init&apos; is called from constructor &apos;CData(TTree*tree=0,bool bMC=false,bool bShort=false)&apos; at line 474. Dynamic binding is not used." file0="inc/CData.h">
            <location file="inc/CData.h" line="274" column="26" info="Init is a virtual function"/>
            <location file="inc/CData.h" line="474" column="5" info="Calling Init"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;entry&apos; is assigned a value that is never used." verbose="Variable &apos;entry&apos; is assigned a value that is never used." cwe="563" file0="inc/CData.h">
            <location file="inc/CData.h" line="1196" column="11"/>
            <symbol>entry</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;entry&apos; is assigned a value that is never used." verbose="Variable &apos;entry&apos; is assigned a value that is never used." cwe="563" file0="inc/CEffArea.h">
            <location file="inc/CEffArea.h" line="613" column="11"/>
            <symbol>entry</symbol>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;Init&apos; is called from constructor &apos;CRunSummary(TTree*tree=0)&apos; at line 142. Dynamic binding is not used." verbose="Virtual function &apos;Init&apos; is called from constructor &apos;CRunSummary(TTree*tree=0)&apos; at line 142. Dynamic binding is not used." file0="inc/CRunSummary.h">
            <location file="inc/CRunSummary.h" line="128" column="26" info="Init is a virtual function"/>
            <location file="inc/CRunSummary.h" line="142" column="5" info="Calling Init"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Cshowerpars::b_MCzcore_SC&apos; is not initialized in the constructor." verbose="Member variable &apos;Cshowerpars::b_MCzcore_SC&apos; is not initialized in the constructor." cwe="398" file0="inc/Cshowerpars.h">
            <location file="inc/Cshowerpars.h" line="215" column="14"/>
            <symbol>Cshowerpars::b_MCzcore_SC</symbol>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;Init&apos; is called from constructor &apos;Cshowerpars(TTree*tree=0,bool iMC=false,bool iShort=false)&apos; at line 226. Dynamic binding is not used." verbose="Virtual function &apos;Init&apos; is called from constructor &apos;Cshowerpars(TTree*tree=0,bool iMC=false,bool iShort=false)&apos; at line 226. Dynamic binding is not used." file0="inc/Cshowerpars.h">
            <location file="inc/Cshowerpars.h" line="198" column="26" info="Init is a virtual function"/>
            <location file="inc/Cshowerpars.h" line="226" column="5" info="Calling Init"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;Init&apos; is called from constructor &apos;Ctelconfig(TTree*tree=0)&apos; at line 106. Dynamic binding is not used." verbose="Virtual function &apos;Init&apos; is called from constructor &apos;Ctelconfig(TTree*tree=0)&apos; at line 106. Dynamic binding is not used." file0="inc/Ctelconfig.h">
            <location file="inc/Ctelconfig.h" line="95" column="26" info="Init is a virtual function"/>
            <location file="inc/Ctelconfig.h" line="106" column="5" info="Calling Init"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_telID&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_telID&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_telID</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_runNumber&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_runNumber&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_runNumber</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_MJD&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_MJD&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_MJD</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_Time&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_Time&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_Time</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_fimagethresh&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_fimagethresh&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_fimagethresh</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_fborderthresh&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_fborderthresh&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_fborderthresh</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_fsumfirst&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_fsumfirst&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_fsumfirst</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_fsumwindow&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_fsumwindow&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_fsumwindow</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_fsumwindow_2&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_fsumwindow_2&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_fsumwindow_2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_fsumwindowsmall&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_fsumwindowsmall&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_fsumwindowsmall</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_LocalTrigger&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_LocalTrigger&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_LocalTrigger</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_MCprim&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_MCprim&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_MCprim</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_MCe0&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_MCe0&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_MCe0</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_MCxcore&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_MCxcore&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_MCxcore</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_MCycore&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_MCycore&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_MCycore</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_MCxcos&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_MCxcos&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_MCxcos</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_MCycos&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_MCycos&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_MCycos</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_MCLocalTriggerTime&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_MCLocalTriggerTime&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_MCLocalTriggerTime</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_MCLocalDelayedTriggerTime&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_MCLocalDelayedTriggerTime&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_MCLocalDelayedTriggerTime</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_MCTel_Xoff&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_MCTel_Xoff&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_MCTel_Xoff</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_MCTel_Yoff&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_MCTel_Yoff&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_MCTel_Yoff</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_azwidth&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_azwidth&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_azwidth</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_miss&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_miss&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_miss</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_ntrig&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_ntrig&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_ntrig</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_ntrig_per_patch&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_ntrig_per_patch&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_ntrig_per_patch</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_bad&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_bad&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_bad</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_frac&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_frac&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_frac</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_tgrad_y&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_tgrad_y&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_tgrad_y</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_tgrad_r&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_tgrad_r&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_tgrad_r</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_tint_x&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_tint_x&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_tint_x</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_tgrad_dx&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_tgrad_dx&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_tgrad_dx</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_tint_dx&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_tint_dx&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_tint_dx</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_tmin&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_tmin&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_tmin</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_tmax&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_tmax&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_tmax</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Ctpars::b_tmean&apos; is not initialized in the constructor." verbose="Member variable &apos;Ctpars::b_tmean&apos; is not initialized in the constructor." cwe="398" file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="238" column="9"/>
            <symbol>Ctpars::b_tmean</symbol>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;Init&apos; is called from constructor &apos;Ctpars(TTree*tree=0,bool iMC=false,int iShort=false)&apos; at line 253. Dynamic binding is not used." verbose="Virtual function &apos;Init&apos; is called from constructor &apos;Ctpars(TTree*tree=0,bool iMC=false,int iShort=false)&apos; at line 253. Dynamic binding is not used." file0="inc/Ctpars.h">
            <location file="inc/Ctpars.h" line="204" column="26" info="Init is a virtual function"/>
            <location file="inc/Ctpars.h" line="253" column="5" info="Calling Init"/>
        </error>
        <error id="assignBoolToFloat" severity="style" msg="Boolean value assigned to floating point variable." verbose="Boolean value assigned to floating point variable." cwe="704" file0="inc/VAnaSum.h">
            <location file="inc/VSkyCoordinates.h" line="183" column="32"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VGammaHadronCuts&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." verbose="The class &apos;VGammaHadronCuts&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VGammaHadronCuts.h" line="86" column="16" info="Derived variable &apos;VGammaHadronCuts::fDebug&apos;"/>
            <location file="inc/VAnalysisUtilities.h" line="35" column="22" info="Parent variable &apos;VAnalysisUtilities::fDebug&apos;"/>
            <symbol>VGammaHadronCuts</symbol>
            <symbol>fDebug</symbol>
            <symbol>VAnalysisUtilities</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VRadialAcceptance&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VRadialAcceptance&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VRadialAcceptance.h" line="145" column="9"/>
            <symbol>VRadialAcceptance</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VAnaSum&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VAnaSum&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VAnaSum.h" line="45" column="9"/>
            <symbol>VAnaSum</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iS&apos; should be passed by const reference." verbose="Parameter &apos;iS&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VPlotUtilities.h" line="149" column="46"/>
            <symbol>iS</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iN&apos; should be passed by const reference." verbose="Parameter &apos;iN&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VTMVARunData.h" line="110" column="30"/>
            <symbol>iN</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iParticleNumberFile&apos; should be passed by const reference." verbose="Parameter &apos;iParticleNumberFile&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VTMVAEvaluator.h" line="306" column="46"/>
            <symbol>iParticleNumberFile</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;id&apos; should be passed by const reference." verbose="Parameter &apos;id&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VGammaHadronCuts.h" line="392" column="41"/>
            <symbol>id</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iEpoch&apos; should be passed by const reference." verbose="Parameter &apos;iEpoch&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VGammaHadronCuts.h" line="406" column="43"/>
            <symbol>iEpoch</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iTelToAnalyze&apos; should be passed by const reference." verbose="Parameter &apos;iTelToAnalyze&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VGammaHadronCuts.h" line="417" column="56"/>
            <symbol>iTelToAnalyze</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iBS&apos; should be passed by const reference." verbose="Parameter &apos;iBS&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VExclusionRegions.h" line="90" column="77"/>
            <symbol>iBS</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iCatalogue&apos; should be passed by const reference." verbose="Parameter &apos;iCatalogue&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VExclusionRegions.h" line="115" column="39"/>
            <symbol>iCatalogue</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iTargetName&apos; should be passed by const reference." verbose="Parameter &apos;iTargetName&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VSkyCoordinates.h" line="155" column="38"/>
            <symbol>iTargetName</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iExpl&apos; should be passed by const reference." verbose="Parameter &apos;iExpl&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VStereoAnalysis.h" line="117" column="51"/>
            <symbol>iExpl</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iRunMJD&apos; should be passed by const reference." verbose="Parameter &apos;iRunMJD&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VStereoAnalysis.h" line="121" column="46"/>
            <symbol>iRunMJD</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;x&apos; can be declared with const" verbose="Parameter &apos;x&apos; can be declared with const" cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VStatistics.h" line="384" column="54" info="Parameter &apos;x&apos; can be declared with const"/>
            <symbol>x</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;w&apos; can be declared with const" verbose="Parameter &apos;w&apos; can be declared with const" cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VStatistics.h" line="384" column="75" info="Parameter &apos;w&apos; can be declared with const"/>
            <symbol>w</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;x&apos; can be declared with const" verbose="Parameter &apos;x&apos; can be declared with const" cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VStatistics.h" line="148" column="38" info="Parameter &apos;x&apos; can be declared with const"/>
            <symbol>x</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;par&apos; can be declared with const" verbose="Parameter &apos;par&apos; can be declared with const" cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VStatistics.h" line="148" column="51" info="Parameter &apos;par&apos; can be declared with const"/>
            <symbol>par</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;x&apos; can be declared with const" verbose="Parameter &apos;x&apos; can be declared with const" cwe="398" file0="inc/VAnaSum.h">
            <location file="inc/VStatistics.h" line="157" column="38" info="Parameter &apos;x&apos; can be declared with const"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nOn&apos; is assigned a value that is never used." verbose="Variable &apos;nOn&apos; is assigned a value that is never used." cwe="563" file0="inc/VAnaSum.h">
            <location file="inc/VStatistics.h" line="217" column="21"/>
            <symbol>nOn</symbol>
        </error>
        <error id="uselessAssignmentArg" severity="style" msg="Assignment of function parameter has no effect outside the function." verbose="Assignment of function parameter has no effect outside the function." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VVirtualDataReader.h" line="419" column="13"/>
        </error>
        <error id="uselessAssignmentArg" severity="style" msg="Assignment of function parameter has no effect outside the function." verbose="Assignment of function parameter has no effect outside the function." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="314" column="13"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VArrayAnalyzer&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VEvndispData&apos;." verbose="The class &apos;VArrayAnalyzer&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VEvndispData&apos;." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VArrayAnalyzer.h" line="25" column="14" info="Derived variable &apos;VArrayAnalyzer::fDebug&apos;"/>
            <location file="inc/VEvndispData.h" line="46" column="21" info="Parent variable &apos;VEvndispData::fDebug&apos;"/>
            <symbol>VArrayAnalyzer</symbol>
            <symbol>fDebug</symbol>
            <symbol>VEvndispData</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VImageAnalyzerHistograms&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VImageAnalyzerHistograms&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VImageAnalyzerHistograms.h" line="26" column="9"/>
            <symbol>VImageAnalyzerHistograms</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VSpecialChannel&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VSpecialChannel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VSpecialChannel.h" line="34" column="9"/>
            <symbol>VSpecialChannel</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VImageAnalyzerData&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VImageAnalyzerData&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VImageAnalyzerData.h" line="118" column="9"/>
            <symbol>VImageAnalyzerData</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VDetectorGeometry&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VDetectorGeometry&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDetectorGeometry.h" line="22" column="9"/>
            <symbol>VDetectorGeometry</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VPETree&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VPETree&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPETree.h" line="39" column="9"/>
            <symbol>VPETree</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VDB_PixelDataReader&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VDB_PixelDataReader&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDB_PixelDataReader.h" line="69" column="9"/>
            <symbol>VDB_PixelDataReader</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VPointing&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VPointing&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPointing.h" line="54" column="9"/>
            <symbol>VPointing</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isZeroSuppressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isZeroSuppressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="68" column="14" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="331" column="22" info="Virtual function in base class"/>
            <symbol>isZeroSuppressed</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getZeroSuppressionFlag&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getZeroSuppressionFlag&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="69" column="28" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="339" column="36" info="Virtual function in base class"/>
            <symbol>getZeroSuppressionFlag</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getChannelHitIndex&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getChannelHitIndex&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="70" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="86" column="45" info="Virtual function in base class"/>
            <symbol>getChannelHitIndex</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDataFormat&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDataFormat&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="71" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="47" column="45" info="Virtual function in base class"/>
            <symbol>getDataFormat</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDataFormatNum&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDataFormatNum&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="75" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="52" column="45" info="Virtual function in base class"/>
            <symbol>getDataFormatNum</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDead&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDead&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="79" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="412" column="46" info="Virtual function in base class"/>
            <symbol>getDead</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getEventNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getEventNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="83" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="87" column="45" info="Virtual function in base class"/>
            <symbol>getEventNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="87" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="92" column="45" info="Virtual function in base class"/>
            <symbol>getEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="91" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="97" column="45" info="Virtual function in base class"/>
            <symbol>getATEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDSTTreeEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDSTTreeEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="95" column="24" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="99" column="45" info="Virtual function in base class"/>
            <symbol>getDSTTreeEvent</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullHitVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullHitVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="99" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="107" column="46" info="Virtual function in base class"/>
            <symbol>getFullHitVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullTrigVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullTrigVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="103" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="108" column="46" info="Virtual function in base class"/>
            <symbol>getFullTrigVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumberofFullTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumberofFullTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="107" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="109" column="45" info="Virtual function in base class"/>
            <symbol>getNumberofFullTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS0&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS0&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="111" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="114" column="45" info="Virtual function in base class"/>
            <symbol>getGPS0</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS1&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS1&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="115" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="115" column="45" info="Virtual function in base class"/>
            <symbol>getGPS1</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS2&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS2&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="119" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="116" column="45" info="Virtual function in base class"/>
            <symbol>getGPS2</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS3&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS3&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="123" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="117" column="45" info="Virtual function in base class"/>
            <symbol>getGPS3</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS4&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS4&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="127" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="118" column="45" info="Virtual function in base class"/>
            <symbol>getGPS4</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="131" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="119" column="45" info="Virtual function in base class"/>
            <symbol>getGPSYear</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="135" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="120" column="45" info="Virtual function in base class"/>
            <symbol>getATGPSYear</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getHitID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getHitID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="139" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="121" column="45" info="Virtual function in base class"/>
            <symbol>getHitID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getHiLo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getHiLo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="140" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="127" column="45" info="Virtual function in base class"/>
            <symbol>getHiLo</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="151" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="358" column="44" info="Virtual function in base class"/>
            <symbol>getLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalTriggerType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalTriggerType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="155" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="374" column="44" info="Virtual function in base class"/>
            <symbol>getLocalTriggerType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="166" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="366" column="44" info="Virtual function in base class"/>
            <symbol>getLocalTriggerTime</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalDelayedTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalDelayedTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="177" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="370" column="44" info="Virtual function in base class"/>
            <symbol>getLocalDelayedTriggerTime</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMaxChannels&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMaxChannels&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="188" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="122" column="45" info="Virtual function in base class"/>
            <symbol>getMaxChannels</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumChannelsHit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumChannelsHit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="192" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="124" column="45" info="Virtual function in base class"/>
            <symbol>getNumChannelsHit</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="196" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="125" column="45" info="Virtual function in base class"/>
            <symbol>getNumSamples</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMCTree&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMCTree&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="207" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="256" column="44" info="Virtual function in base class"/>
            <symbol>getMCTree</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_primary&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_primary&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="208" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="261" column="44" info="Virtual function in base class"/>
            <symbol>getMC_primary</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_energy&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_energy&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="212" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="266" column="44" info="Virtual function in base class"/>
            <symbol>getMC_energy</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_X&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_X&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="216" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="271" column="44" info="Virtual function in base class"/>
            <symbol>getMC_X</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Y&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Y&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="220" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="276" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Y</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Xcos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Xcos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="224" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="281" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Xcos</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Ycos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Ycos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="228" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="286" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Ycos</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Ze&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Ze&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="232" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="291" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Ze</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Az&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Az&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="236" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="296" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Az</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Xoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Xoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="240" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="301" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Xoffset</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Yoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Yoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="244" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="306" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Yoffset</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="248" column="22" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="186" column="45" info="Virtual function in base class"/>
            <symbol>getNextEvent</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMonteCarloHeader&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMonteCarloHeader&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="249" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="123" column="45" info="Virtual function in base class"/>
            <symbol>getMonteCarloHeader</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumTelescopes&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumTelescopes&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="250" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="60" column="45" info="Virtual function in base class"/>
            <symbol>getNumTelescopes</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNTelLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNTelLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="254" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="354" column="44" info="Virtual function in base class"/>
            <symbol>getNTelLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="258" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="126" column="45" info="Virtual function in base class"/>
            <symbol>getNTel</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getRunNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getRunNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="262" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="98" column="45" info="Virtual function in base class"/>
            <symbol>getRunNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSamplesVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSamplesVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="270" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="160" column="45" info="Virtual function in base class"/>
            <symbol>getSamplesVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSample&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSample&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="271" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="156" column="45" info="Virtual function in base class"/>
            <symbol>getSample</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSamplesVec16Bit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSamplesVec16Bit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="272" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="166" column="45" info="Virtual function in base class"/>
            <symbol>getSamplesVec16Bit</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSample16Bit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSample16Bit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="273" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="161" column="45" info="Virtual function in base class"/>
            <symbol>getSample16Bit</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSourceFileName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSourceFileName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="282" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="64" column="45" info="Virtual function in base class"/>
            <symbol>getSourceFileName</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelAzimuth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelAzimuth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="286" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="207" column="45" info="Virtual function in base class"/>
            <symbol>getTelAzimuth</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelElevation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelElevation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="290" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="203" column="45" info="Virtual function in base class"/>
            <symbol>getTelElevation</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="294" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="68" column="45" info="Virtual function in base class"/>
            <symbol>getTelescopeID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTracePulseTiming&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTracePulseTiming&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="306" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="408" column="52" info="Virtual function in base class"/>
            <symbol>getTracePulseTiming</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;has16Bit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;has16Bit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="310" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="343" column="22" info="Virtual function in base class"/>
            <symbol>has16Bit</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasFADCTrace&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasFADCTrace&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="314" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="327" column="22" info="Virtual function in base class"/>
            <symbol>hasFADCTrace</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="325" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="362" column="44" info="Virtual function in base class"/>
            <symbol>hasLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="336" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="214" column="44" info="Virtual function in base class"/>
            <symbol>isMC</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;selectHitChan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;selectHitChan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="340" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="170" column="45" info="Virtual function in base class"/>
            <symbol>selectHitChan</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setPerformFADCAnalysis&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setPerformFADCAnalysis&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="351" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="417" column="22" info="Virtual function in base class"/>
            <symbol>setPerformFADCAnalysis</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="358" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="81" column="45" info="Virtual function in base class"/>
            <symbol>setTelescopeID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="359" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="213" column="44" info="Virtual function in base class"/>
            <symbol>setTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;wasLossyCompressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;wasLossyCompressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VDSTReader.h" line="360" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="183" column="45" info="Virtual function in base class"/>
            <symbol>wasLossyCompressed</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDataFormat&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDataFormat&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="159" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="47" column="45" info="Virtual function in base class"/>
            <symbol>getDataFormat</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDataFormatNum&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDataFormatNum&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="163" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="52" column="45" info="Virtual function in base class"/>
            <symbol>getDataFormatNum</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSourceFileName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSourceFileName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="167" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="64" column="45" info="Virtual function in base class"/>
            <symbol>getSourceFileName</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getChannelHitIndex&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getChannelHitIndex&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="173" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="86" column="45" info="Virtual function in base class"/>
            <symbol>getChannelHitIndex</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getRunNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getRunNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="174" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="98" column="45" info="Virtual function in base class"/>
            <symbol>getRunNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getEventNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getEventNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="179" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="87" column="45" info="Virtual function in base class"/>
            <symbol>getEventNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullHitVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullHitVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="185" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="107" column="46" info="Virtual function in base class"/>
            <symbol>getFullHitVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullTrigVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullTrigVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="190" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="108" column="46" info="Virtual function in base class"/>
            <symbol>getFullTrigVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumberofFullTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumberofFullTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="194" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="109" column="45" info="Virtual function in base class"/>
            <symbol>getNumberofFullTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullAnaVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullAnaVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="199" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="110" column="45" info="Virtual function in base class"/>
            <symbol>getFullAnaVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="203" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="92" column="45" info="Virtual function in base class"/>
            <symbol>getEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="207" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="97" column="45" info="Virtual function in base class"/>
            <symbol>getATEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS0&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS0&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="211" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="114" column="45" info="Virtual function in base class"/>
            <symbol>getGPS0</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS1&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS1&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="215" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="115" column="45" info="Virtual function in base class"/>
            <symbol>getGPS1</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS2&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS2&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="219" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="116" column="45" info="Virtual function in base class"/>
            <symbol>getGPS2</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS3&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS3&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="223" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="117" column="45" info="Virtual function in base class"/>
            <symbol>getGPS3</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS4&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS4&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="227" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="118" column="45" info="Virtual function in base class"/>
            <symbol>getGPS4</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="231" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="119" column="45" info="Virtual function in base class"/>
            <symbol>getGPSYear</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="235" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="120" column="45" info="Virtual function in base class"/>
            <symbol>getATGPSYear</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getHitID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getHitID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="240" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="121" column="45" info="Virtual function in base class"/>
            <symbol>getHitID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getHiLo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getHiLo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="241" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="127" column="45" info="Virtual function in base class"/>
            <symbol>getHiLo</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMaxChannels&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMaxChannels&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="243" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="122" column="45" info="Virtual function in base class"/>
            <symbol>getMaxChannels</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumChannelsHit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumChannelsHit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="256" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="124" column="45" info="Virtual function in base class"/>
            <symbol>getNumChannelsHit</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="261" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="125" column="45" info="Virtual function in base class"/>
            <symbol>getNumSamples</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="265" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="126" column="45" info="Virtual function in base class"/>
            <symbol>getNTel</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPedHisto&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPedHisto&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="274" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="128" column="45" info="Virtual function in base class"/>
            <symbol>getPedHisto</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPeds&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPeds&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="275" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="132" column="45" info="Virtual function in base class"/>
            <symbol>getPeds</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPedvars&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPedvars&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="279" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="136" column="45" info="Virtual function in base class"/>
            <symbol>getPedvars</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPedvarsAllSumWindows&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPedvarsAllSumWindows&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="283" column="42" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="140" column="45" info="Virtual function in base class"/>
            <symbol>getPedvarsAllSumWindows</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPedRMS&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPedRMS&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="287" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="144" column="45" info="Virtual function in base class"/>
            <symbol>getPedRMS</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSample&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSample&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="291" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="156" column="45" info="Virtual function in base class"/>
            <symbol>getSample</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSamplesVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSamplesVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="293" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="160" column="45" info="Virtual function in base class"/>
            <symbol>getSamplesVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelElevation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelElevation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="294" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="203" column="45" info="Virtual function in base class"/>
            <symbol>getTelElevation</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelAzimuth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelAzimuth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="298" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="207" column="45" info="Virtual function in base class"/>
            <symbol>getTelAzimuth</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="303" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="68" column="45" info="Virtual function in base class"/>
            <symbol>getTelescopeID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;selectHitChan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;selectHitChan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="308" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="170" column="45" info="Virtual function in base class"/>
            <symbol>selectHitChan</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setSumWindow&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setSumWindow&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="320" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="73" column="45" info="Virtual function in base class"/>
            <symbol>setSumWindow</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setSumWindow&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setSumWindow&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="324" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="76" column="45" info="Virtual function in base class"/>
            <symbol>setSumWindow</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="337" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="81" column="45" info="Virtual function in base class"/>
            <symbol>setTelescopeID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="340" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="213" column="44" info="Virtual function in base class"/>
            <symbol>setTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="342" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="358" column="44" info="Virtual function in base class"/>
            <symbol>getLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="346" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="366" column="44" info="Virtual function in base class"/>
            <symbol>getLocalTriggerTime</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalDelayedTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalDelayedTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="350" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="370" column="44" info="Virtual function in base class"/>
            <symbol>getLocalDelayedTriggerTime</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNTelLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNTelLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="355" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="354" column="44" info="Virtual function in base class"/>
            <symbol>getNTelLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasArrayTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasArrayTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="356" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="349" column="44" info="Virtual function in base class"/>
            <symbol>hasArrayTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="361" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="362" column="44" info="Virtual function in base class"/>
            <symbol>hasLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;wasLossyCompressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;wasLossyCompressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="378" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="183" column="45" info="Virtual function in base class"/>
            <symbol>wasLossyCompressed</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="385" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="186" column="45" info="Virtual function in base class"/>
            <symbol>getNextEvent</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="392" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="214" column="44" info="Virtual function in base class"/>
            <symbol>isMC</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isGrisuMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isGrisuMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="396" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="219" column="44" info="Virtual function in base class"/>
            <symbol>isGrisuMC</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_primary&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_primary&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="400" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="261" column="44" info="Virtual function in base class"/>
            <symbol>getMC_primary</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_energy&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_energy&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="404" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="266" column="44" info="Virtual function in base class"/>
            <symbol>getMC_energy</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_X&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_X&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="408" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="271" column="44" info="Virtual function in base class"/>
            <symbol>getMC_X</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Y&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Y&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="412" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="276" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Y</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Xcos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Xcos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="416" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="281" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Xcos</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Ycos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Ycos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="420" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="286" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Ycos</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Ze&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Ze&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="424" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="291" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Ze</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Az&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Az&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="428" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="296" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Az</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Xoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Xoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="432" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="301" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Xoffset</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Yoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Yoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="436" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="306" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Yoffset</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMonteCarloHeader&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMonteCarloHeader&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="440" column="31" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="123" column="45" info="Virtual function in base class"/>
            <symbol>getMonteCarloHeader</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setPerformFADCAnalysis&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setPerformFADCAnalysis&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="444" column="14" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="417" column="22" info="Virtual function in base class"/>
            <symbol>setPerformFADCAnalysis</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDataFormat&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDataFormat&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="67" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="47" column="45" info="Virtual function in base class"/>
            <symbol>getDataFormat</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDataFormatNum&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDataFormatNum&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="68" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="52" column="45" info="Virtual function in base class"/>
            <symbol>getDataFormatNum</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSourceFileName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSourceFileName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="72" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="64" column="45" info="Virtual function in base class"/>
            <symbol>getSourceFileName</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getChannelHitIndex&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getChannelHitIndex&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="75" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="86" column="45" info="Virtual function in base class"/>
            <symbol>getChannelHitIndex</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getRunNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getRunNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="76" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="98" column="45" info="Virtual function in base class"/>
            <symbol>getRunNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getEventNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getEventNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="80" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="87" column="45" info="Virtual function in base class"/>
            <symbol>getEventNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullHitVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullHitVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="82" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="107" column="46" info="Virtual function in base class"/>
            <symbol>getFullHitVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullTrigVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullTrigVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="83" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="108" column="46" info="Virtual function in base class"/>
            <symbol>getFullTrigVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumberofFullTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumberofFullTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="84" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="109" column="45" info="Virtual function in base class"/>
            <symbol>getNumberofFullTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullAnaVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullAnaVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="85" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="110" column="45" info="Virtual function in base class"/>
            <symbol>getFullAnaVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="86" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="92" column="45" info="Virtual function in base class"/>
            <symbol>getEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="87" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="97" column="45" info="Virtual function in base class"/>
            <symbol>getATEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS0&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS0&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="88" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="114" column="45" info="Virtual function in base class"/>
            <symbol>getGPS0</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS1&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS1&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="92" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="115" column="45" info="Virtual function in base class"/>
            <symbol>getGPS1</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS2&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS2&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="96" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="116" column="45" info="Virtual function in base class"/>
            <symbol>getGPS2</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS3&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS3&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="100" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="117" column="45" info="Virtual function in base class"/>
            <symbol>getGPS3</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS4&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS4&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="104" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="118" column="45" info="Virtual function in base class"/>
            <symbol>getGPS4</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="108" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="119" column="45" info="Virtual function in base class"/>
            <symbol>getGPSYear</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="112" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="120" column="45" info="Virtual function in base class"/>
            <symbol>getATGPSYear</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getHitID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getHitID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="117" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="121" column="45" info="Virtual function in base class"/>
            <symbol>getHitID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getHiLo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getHiLo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="118" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="127" column="45" info="Virtual function in base class"/>
            <symbol>getHiLo</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMaxChannels&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMaxChannels&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="119" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="122" column="45" info="Virtual function in base class"/>
            <symbol>getMaxChannels</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumChannelsHit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumChannelsHit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="121" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="124" column="45" info="Virtual function in base class"/>
            <symbol>getNumChannelsHit</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="122" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="125" column="45" info="Virtual function in base class"/>
            <symbol>getNumSamples</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="123" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="126" column="45" info="Virtual function in base class"/>
            <symbol>getNTel</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPedHisto&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPedHisto&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="132" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="128" column="45" info="Virtual function in base class"/>
            <symbol>getPedHisto</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPeds&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPeds&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="133" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="132" column="45" info="Virtual function in base class"/>
            <symbol>getPeds</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPedvars&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPedvars&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="134" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="136" column="45" info="Virtual function in base class"/>
            <symbol>getPedvars</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPedvarsAllSumWindows&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPedvarsAllSumWindows&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="135" column="42" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="140" column="45" info="Virtual function in base class"/>
            <symbol>getPedvarsAllSumWindows</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPedRMS&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPedRMS&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="136" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="144" column="45" info="Virtual function in base class"/>
            <symbol>getPedRMS</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSamplesVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSamplesVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="138" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="160" column="45" info="Virtual function in base class"/>
            <symbol>getSamplesVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelElevation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelElevation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="139" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="203" column="45" info="Virtual function in base class"/>
            <symbol>getTelElevation</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelAzimuth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelAzimuth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="140" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="207" column="45" info="Virtual function in base class"/>
            <symbol>getTelAzimuth</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="142" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="68" column="45" info="Virtual function in base class"/>
            <symbol>getTelescopeID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;selectHitChan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;selectHitChan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="147" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="170" column="45" info="Virtual function in base class"/>
            <symbol>selectHitChan</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setSumWindow&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setSumWindow&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="150" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="73" column="45" info="Virtual function in base class"/>
            <symbol>setSumWindow</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setSumWindow&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setSumWindow&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="151" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="76" column="45" info="Virtual function in base class"/>
            <symbol>setSumWindow</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="154" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="81" column="45" info="Virtual function in base class"/>
            <symbol>setTelescopeID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="157" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="213" column="44" info="Virtual function in base class"/>
            <symbol>setTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="158" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="358" column="44" info="Virtual function in base class"/>
            <symbol>getLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="159" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="366" column="44" info="Virtual function in base class"/>
            <symbol>getLocalTriggerTime</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalDelayedTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalDelayedTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="160" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="370" column="44" info="Virtual function in base class"/>
            <symbol>getLocalDelayedTriggerTime</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNTelLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNTelLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="162" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="354" column="44" info="Virtual function in base class"/>
            <symbol>getNTelLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasArrayTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasArrayTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="163" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="349" column="44" info="Virtual function in base class"/>
            <symbol>hasArrayTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="165" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="362" column="44" info="Virtual function in base class"/>
            <symbol>hasLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;wasLossyCompressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;wasLossyCompressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="170" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="183" column="45" info="Virtual function in base class"/>
            <symbol>wasLossyCompressed</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="177" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="186" column="45" info="Virtual function in base class"/>
            <symbol>getNextEvent</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="184" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="214" column="44" info="Virtual function in base class"/>
            <symbol>isMC</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isGrisuMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isGrisuMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="188" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="219" column="44" info="Virtual function in base class"/>
            <symbol>isGrisuMC</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_primary&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_primary&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="192" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="261" column="44" info="Virtual function in base class"/>
            <symbol>getMC_primary</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_energy&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_energy&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="193" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="266" column="44" info="Virtual function in base class"/>
            <symbol>getMC_energy</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_X&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_X&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="194" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="271" column="44" info="Virtual function in base class"/>
            <symbol>getMC_X</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Y&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Y&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="195" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="276" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Y</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Xcos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Xcos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="196" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="281" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Xcos</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Ycos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Ycos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="197" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="286" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Ycos</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Ze&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Ze&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="198" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="291" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Ze</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Az&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Az&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="199" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="296" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Az</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Xoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Xoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="200" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="301" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Xoffset</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Yoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Yoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="201" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="306" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Yoffset</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMonteCarloHeader&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMonteCarloHeader&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="203" column="31" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="123" column="45" info="Virtual function in base class"/>
            <symbol>getMonteCarloHeader</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setPerformFADCAnalysis&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setPerformFADCAnalysis&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VMultipleGrIsuReader.h" line="207" column="14" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="417" column="22" info="Virtual function in base class"/>
            <symbol>setPerformFADCAnalysis</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDataFormat&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDataFormat&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="77" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="47" column="45" info="Virtual function in base class"/>
            <symbol>getDataFormat</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDataFormatNum&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDataFormatNum&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="81" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="52" column="45" info="Virtual function in base class"/>
            <symbol>getDataFormatNum</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSourceFileName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSourceFileName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="82" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="64" column="45" info="Virtual function in base class"/>
            <symbol>getSourceFileName</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getChannelHitIndex&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getChannelHitIndex&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="92" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="86" column="45" info="Virtual function in base class"/>
            <symbol>getChannelHitIndex</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getRunNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getRunNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="103" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="98" column="45" info="Virtual function in base class"/>
            <symbol>getRunNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getEventNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getEventNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="107" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="87" column="45" info="Virtual function in base class"/>
            <symbol>getEventNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNewEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNewEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="118" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="88" column="45" info="Virtual function in base class"/>
            <symbol>getNewEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="120" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="92" column="45" info="Virtual function in base class"/>
            <symbol>getEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="121" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="97" column="45" info="Virtual function in base class"/>
            <symbol>getATEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getHitBit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getHitBit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="125" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="103" column="45" info="Virtual function in base class"/>
            <symbol>getHitBit</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullHitVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullHitVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="136" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="107" column="46" info="Virtual function in base class"/>
            <symbol>getFullHitVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullTrigVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullTrigVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="147" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="108" column="46" info="Virtual function in base class"/>
            <symbol>getFullTrigVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumberofFullTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumberofFullTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="158" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="109" column="45" info="Virtual function in base class"/>
            <symbol>getNumberofFullTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS0&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS0&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="159" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="114" column="45" info="Virtual function in base class"/>
            <symbol>getGPS0</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS1&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS1&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="170" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="115" column="45" info="Virtual function in base class"/>
            <symbol>getGPS1</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS2&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS2&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="181" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="116" column="45" info="Virtual function in base class"/>
            <symbol>getGPS2</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS3&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS3&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="192" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="117" column="45" info="Virtual function in base class"/>
            <symbol>getGPS3</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS4&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS4&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="203" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="118" column="45" info="Virtual function in base class"/>
            <symbol>getGPS4</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="214" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="119" column="45" info="Virtual function in base class"/>
            <symbol>getGPSYear</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="215" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="120" column="45" info="Virtual function in base class"/>
            <symbol>getATGPSYear</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMaxChannels&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMaxChannels&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="219" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="122" column="45" info="Virtual function in base class"/>
            <symbol>getMaxChannels</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNIncompleteEvents&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNIncompleteEvents&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="220" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="56" column="45" info="Virtual function in base class"/>
            <symbol>getNIncompleteEvents</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumChannelsHit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumChannelsHit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="224" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="124" column="45" info="Virtual function in base class"/>
            <symbol>getNumChannelsHit</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="235" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="125" column="45" info="Virtual function in base class"/>
            <symbol>getNumSamples</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="236" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="126" column="45" info="Virtual function in base class"/>
            <symbol>getNTel</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSample&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSample&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="240" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="156" column="45" info="Virtual function in base class"/>
            <symbol>getSample</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSamplesVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSamplesVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="241" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="160" column="45" info="Virtual function in base class"/>
            <symbol>getSamplesVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getHitID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getHitID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="242" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="121" column="45" info="Virtual function in base class"/>
            <symbol>getHitID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getHiLo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getHiLo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="243" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="127" column="45" info="Virtual function in base class"/>
            <symbol>getHiLo</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="244" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="68" column="45" info="Virtual function in base class"/>
            <symbol>getTelescopeID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasFADCTrace&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasFADCTrace&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="248" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="327" column="22" info="Virtual function in base class"/>
            <symbol>hasFADCTrace</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;selectHitChan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;selectHitChan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="249" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="170" column="45" info="Virtual function in base class"/>
            <symbol>selectHitChan</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isZeroSuppressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isZeroSuppressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="250" column="14" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="331" column="22" info="Virtual function in base class"/>
            <symbol>isZeroSuppressed</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getZeroSuppressionFlag&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getZeroSuppressionFlag&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="251" column="28" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="339" column="36" info="Virtual function in base class"/>
            <symbol>getZeroSuppressionFlag</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;wasLossyCompressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;wasLossyCompressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="252" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="183" column="45" info="Virtual function in base class"/>
            <symbol>wasLossyCompressed</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="255" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="186" column="45" info="Virtual function in base class"/>
            <symbol>getNextEvent</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="256" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="81" column="45" info="Virtual function in base class"/>
            <symbol>setTelescopeID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="258" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="214" column="44" info="Virtual function in base class"/>
            <symbol>isMC</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_primary&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_primary&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="259" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="261" column="44" info="Virtual function in base class"/>
            <symbol>getMC_primary</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_energy&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_energy&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="263" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="266" column="44" info="Virtual function in base class"/>
            <symbol>getMC_energy</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_X&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_X&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="267" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="271" column="44" info="Virtual function in base class"/>
            <symbol>getMC_X</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Y&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Y&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="271" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="276" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Y</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Xcos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Xcos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="275" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="281" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Xcos</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Ycos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Ycos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="279" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="286" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Ycos</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Ze&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Ze&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="283" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="291" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Ze</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Az&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Az&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="287" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="296" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Az</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMCFirstInteractionHeight&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMCFirstInteractionHeight&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="291" column="15" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="310" column="23" info="Virtual function in base class"/>
            <symbol>getMCFirstInteractionHeight</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMCFirstInteractionDepth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMCFirstInteractionDepth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="295" column="15" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="314" column="23" info="Virtual function in base class"/>
            <symbol>getMCFirstInteractionDepth</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMCCorsikaRunID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMCCorsikaRunID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="299" column="13" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="318" column="21" info="Virtual function in base class"/>
            <symbol>getMCCorsikaRunID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMCCorsikaShowerID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMCCorsikaShowerID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="303" column="13" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="322" column="21" info="Virtual function in base class"/>
            <symbol>getMCCorsikaShowerID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Xoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Xoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="309" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="301" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Xoffset</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Yoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Yoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="313" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="306" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Yoffset</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTracePulseTiming&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTracePulseTiming&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="325" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="408" column="52" info="Virtual function in base class"/>
            <symbol>getTracePulseTiming</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPeds&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPeds&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="328" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="132" column="45" info="Virtual function in base class"/>
            <symbol>getPeds</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPedvars&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPedvars&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="329" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="136" column="45" info="Virtual function in base class"/>
            <symbol>getPedvars</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPedvarsAllSumWindows&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPedvarsAllSumWindows&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="330" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="140" column="45" info="Virtual function in base class"/>
            <symbol>getPedvarsAllSumWindows</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPedRMS&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPedRMS&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="331" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="144" column="45" info="Virtual function in base class"/>
            <symbol>getPedRMS</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setSumWindow&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setSumWindow&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="335" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="76" column="45" info="Virtual function in base class"/>
            <symbol>setSumWindow</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelElevation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelElevation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="337" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="203" column="45" info="Virtual function in base class"/>
            <symbol>getTelElevation</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelAzimuth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelAzimuth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="341" column="36" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="207" column="45" info="Virtual function in base class"/>
            <symbol>getTelAzimuth</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMonteCarloHeader&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMonteCarloHeader&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="348" column="31" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="123" column="45" info="Virtual function in base class"/>
            <symbol>getMonteCarloHeader</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getChannelHitIndex&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getChannelHitIndex&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="83" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="86" column="45" info="Virtual function in base class"/>
            <symbol>getChannelHitIndex</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDataFormat&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDataFormat&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="84" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="47" column="45" info="Virtual function in base class"/>
            <symbol>getDataFormat</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getDataFormatNum&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getDataFormatNum&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="88" column="22" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="52" column="45" info="Virtual function in base class"/>
            <symbol>getDataFormatNum</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getEventNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getEventNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="92" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="87" column="45" info="Virtual function in base class"/>
            <symbol>getEventNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="96" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="92" column="45" info="Virtual function in base class"/>
            <symbol>getEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="100" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="97" column="45" info="Virtual function in base class"/>
            <symbol>getATEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullHitVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullHitVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="104" column="27" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="107" column="46" info="Virtual function in base class"/>
            <symbol>getFullHitVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFullTrigVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFullTrigVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="108" column="27" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="108" column="46" info="Virtual function in base class"/>
            <symbol>getFullTrigVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumberofFullTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumberofFullTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="112" column="32" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="109" column="45" info="Virtual function in base class"/>
            <symbol>getNumberofFullTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS0&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS0&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="116" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="114" column="45" info="Virtual function in base class"/>
            <symbol>getGPS0</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS1&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS1&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="120" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="115" column="45" info="Virtual function in base class"/>
            <symbol>getGPS1</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS2&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS2&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="124" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="116" column="45" info="Virtual function in base class"/>
            <symbol>getGPS2</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS3&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS3&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="128" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="117" column="45" info="Virtual function in base class"/>
            <symbol>getGPS3</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPS4&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPS4&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="132" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="118" column="45" info="Virtual function in base class"/>
            <symbol>getGPS4</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="136" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="119" column="45" info="Virtual function in base class"/>
            <symbol>getGPSYear</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="140" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="120" column="45" info="Virtual function in base class"/>
            <symbol>getATGPSYear</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getHitID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getHitID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="144" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="121" column="45" info="Virtual function in base class"/>
            <symbol>getHitID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getHiLo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getHiLo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="145" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="127" column="45" info="Virtual function in base class"/>
            <symbol>getHiLo</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="156" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="358" column="44" info="Virtual function in base class"/>
            <symbol>getLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="160" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="366" column="44" info="Virtual function in base class"/>
            <symbol>getLocalTriggerTime</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalDelayedTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalDelayedTriggerTime&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="171" column="37" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="370" column="44" info="Virtual function in base class"/>
            <symbol>getLocalDelayedTriggerTime</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMaxChannels&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMaxChannels&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="182" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="122" column="45" info="Virtual function in base class"/>
            <symbol>getMaxChannels</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumChannelsHit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumChannelsHit&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="186" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="124" column="45" info="Virtual function in base class"/>
            <symbol>getNumChannelsHit</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="190" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="125" column="45" info="Virtual function in base class"/>
            <symbol>getNumSamples</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_primary&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_primary&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="194" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="261" column="44" info="Virtual function in base class"/>
            <symbol>getMC_primary</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_energy&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_energy&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="198" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="266" column="44" info="Virtual function in base class"/>
            <symbol>getMC_energy</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_X&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_X&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="202" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="271" column="44" info="Virtual function in base class"/>
            <symbol>getMC_X</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Y&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Y&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="206" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="276" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Y</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Xcos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Xcos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="210" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="281" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Xcos</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Ycos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Ycos&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="214" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="286" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Ycos</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Ze&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Ze&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="218" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="291" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Ze</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Az&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Az&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="222" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="296" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Az</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Xoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Xoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="226" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="301" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Xoffset</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMC_Yoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMC_Yoffset&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="230" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="306" column="44" info="Virtual function in base class"/>
            <symbol>getMC_Yoffset</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="234" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="186" column="45" info="Virtual function in base class"/>
            <symbol>getNextEvent</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumTelescopes&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumTelescopes&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="235" column="22" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="60" column="45" info="Virtual function in base class"/>
            <symbol>getNumTelescopes</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="239" column="22" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="126" column="45" info="Virtual function in base class"/>
            <symbol>getNTel</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNTelLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNTelLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="243" column="22" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="354" column="44" info="Virtual function in base class"/>
            <symbol>getNTelLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getRunNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getRunNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="247" column="22" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="98" column="45" info="Virtual function in base class"/>
            <symbol>getRunNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSamplesVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSamplesVec&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="251" column="29" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="160" column="45" info="Virtual function in base class"/>
            <symbol>getSamplesVec</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSourceFileName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSourceFileName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="259" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="64" column="45" info="Virtual function in base class"/>
            <symbol>getSourceFileName</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelAzimuth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelAzimuth&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="263" column="27" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="207" column="45" info="Virtual function in base class"/>
            <symbol>getTelAzimuth</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelElevation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelElevation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="264" column="27" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="203" column="45" info="Virtual function in base class"/>
            <symbol>getTelElevation</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="265" column="22" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="68" column="45" info="Virtual function in base class"/>
            <symbol>getTelescopeID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTracePulseTiming&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTracePulseTiming&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="269" column="39" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="408" column="52" info="Virtual function in base class"/>
            <symbol>getTracePulseTiming</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasArrayTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasArrayTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="273" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="349" column="44" info="Virtual function in base class"/>
            <symbol>hasArrayTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasFADCTrace&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasFADCTrace&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="277" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="327" column="22" info="Virtual function in base class"/>
            <symbol>hasFADCTrace</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="281" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="362" column="44" info="Virtual function in base class"/>
            <symbol>hasLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isMC&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="292" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="214" column="44" info="Virtual function in base class"/>
            <symbol>isMC</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;selectHitChan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;selectHitChan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="296" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="170" column="45" info="Virtual function in base class"/>
            <symbol>selectHitChan</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setTelescopeID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="300" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="81" column="45" info="Virtual function in base class"/>
            <symbol>setTelescopeID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="302" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="213" column="44" info="Virtual function in base class"/>
            <symbol>setTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;wasLossyCompressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;wasLossyCompressed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="303" column="19" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="183" column="45" info="Virtual function in base class"/>
            <symbol>wasLossyCompressed</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMonteCarloHeader&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMonteCarloHeader&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="308" column="31" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="123" column="45" info="Virtual function in base class"/>
            <symbol>getMonteCarloHeader</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setPerformFADCAnalysis&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setPerformFADCAnalysis&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="312" column="14" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="417" column="22" info="Virtual function in base class"/>
            <symbol>setPerformFADCAnalysis</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iT&apos; should be passed by const reference." verbose="Parameter &apos;iT&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VVirtualDataReader.h" line="175" column="81"/>
            <symbol>iT</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;file&apos; should be passed by const reference." verbose="Parameter &apos;file&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VCalibrationData.h" line="339" column="46"/>
            <symbol>file</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iDir&apos; should be passed by const reference." verbose="Parameter &apos;iDir&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VCameraRead.h" line="367" column="51"/>
            <symbol>iDir</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;m&apos; should be passed by const reference." verbose="Parameter &apos;m&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VCameraRead.h" line="376" column="81"/>
            <symbol>m</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;i_sum&apos; should be passed by const reference." verbose="Parameter &apos;i_sum&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VGrIsuReader.h" line="320" column="65"/>
            <symbol>i_sum</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;i_nChannels&apos; should be passed by const reference." verbose="Parameter &apos;i_nChannels&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VBaseRawDataReader.h" line="353" column="57"/>
            <symbol>i_nChannels</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iEst&apos; should be passed by const reference." verbose="Parameter &apos;iEst&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VEvndispData.h" line="1387" column="52"/>
            <symbol>iEst</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iB&apos; is assigned a value that is never used." verbose="Variable &apos;iB&apos; is assigned a value that is never used." cwe="563" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VVirtualDataReader.h" line="419" column="16"/>
            <symbol>iB</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iB&apos; is assigned a value that is never used." verbose="Variable &apos;iB&apos; is assigned a value that is never used." cwe="563" file0="inc/VArrayAnalyzer.h">
            <location file="inc/VPEReader.h" line="314" column="16"/>
            <symbol>iB</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;which&apos; should be passed by const reference." verbose="Parameter &apos;which&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAtmosphereSoundingData.h">
            <location file="inc/VAtmosphereSoundingData.h" line="127" column="40"/>
            <symbol>which</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VAtmosphereSoundings&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VAtmosphereSoundings&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VAtmosphereSoundings.h">
            <location file="inc/VAtmosphereSoundings.h" line="127" column="9"/>
            <symbol>VAtmosphereSoundings</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;heights&apos; should be passed by const reference." verbose="Parameter &apos;heights&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VAtmosphereSoundings.h">
            <location file="inc/VAtmosphereSoundings.h" line="263" column="41"/>
            <symbol>heights</symbol>
        </error>
        <error id="uselessAssignmentArg" severity="style" msg="Assignment of function parameter has no effect outside the function." verbose="Assignment of function parameter has no effect outside the function." cwe="398" file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="78" column="13"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNTel&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="41" column="22" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="126" column="45" info="Virtual function in base class"/>
            <symbol>getNTel</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasAT&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasAT&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="43" column="14" info="Function in derived class"/>
            <location file="inc/VBaseRawDataReader.h" line="88" column="37" info="Virtual function in base class"/>
            <symbol>hasAT</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATEventType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="48" column="17" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="97" column="45" info="Virtual function in base class"/>
            <symbol>getATEventType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getATGPSYear&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="60" column="18" info="Function in derived class"/>
            <location file="inc/VBaseRawDataReader.h" line="215" column="37" info="Virtual function in base class"/>
            <symbol>getATGPSYear</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getArrayTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getArrayTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="66" column="27" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="192" column="45" info="Virtual function in base class"/>
            <symbol>getArrayTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="70" column="27" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="358" column="44" info="Virtual function in base class"/>
            <symbol>getLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="71" column="27" info="Function in derived class"/>
            <location file="inc/VBaseRawDataReader.h" line="255" column="37" info="Virtual function in base class"/>
            <symbol>getNextEvent</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNTelLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNTelLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="72" column="27" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="354" column="44" info="Virtual function in base class"/>
            <symbol>getNTelLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNumSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="73" column="27" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="125" column="45" info="Virtual function in base class"/>
            <symbol>getNumSamples</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasArrayTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasArrayTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="74" column="27" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="349" column="44" info="Virtual function in base class"/>
            <symbol>hasArrayTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;hasLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;hasLocalTrigger&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="75" column="27" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="362" column="44" info="Virtual function in base class"/>
            <symbol>hasLocalTrigger</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setPerformFADCAnalysis&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setPerformFADCAnalysis&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="76" column="27" info="Function in derived class"/>
            <location file="inc/VVirtualDataReader.h" line="417" column="22" info="Virtual function in base class"/>
            <symbol>setPerformFADCAnalysis</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iB&apos; is assigned a value that is never used." verbose="Variable &apos;iB&apos; is assigned a value that is never used." cwe="563" file0="inc/VBFDataReader.h">
            <location file="inc/VBFDataReader.h" line="78" column="16"/>
            <symbol>iB</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iR&apos; should be passed by const reference." verbose="Parameter &apos;iR&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VCTARequirements.h">
            <location file="inc/VCTARequirements.h" line="84" column="53"/>
            <symbol>iR</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;VImageBaseAnalyzer::fRaw&apos; is not initialized in the constructor." verbose="Member variable &apos;VImageBaseAnalyzer::fRaw&apos; is not initialized in the constructor." cwe="398" file0="inc/VCalibrator.h">
            <location file="inc/VImageBaseAnalyzer.h" line="37" column="9"/>
            <symbol>VImageBaseAnalyzer::fRaw</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VImageBaseAnalyzer&apos; defines member variable with name &apos;fCalibrated&apos; also defined in its parent class &apos;VEvndispData&apos;." verbose="The class &apos;VImageBaseAnalyzer&apos; defines member variable with name &apos;fCalibrated&apos; also defined in its parent class &apos;VEvndispData&apos;." cwe="398" file0="inc/VCalibrator.h">
            <location file="inc/VImageBaseAnalyzer.h" line="20" column="22" info="Derived variable &apos;VImageBaseAnalyzer::fCalibrated&apos;"/>
            <location file="inc/VEvndispData.h" line="108" column="31" info="Parent variable &apos;VEvndispData::fCalibrated&apos;"/>
            <symbol>VImageBaseAnalyzer</symbol>
            <symbol>fCalibrated</symbol>
            <symbol>VEvndispData</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VPedestalCalculator&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VEvndispData&apos;." verbose="The class &apos;VPedestalCalculator&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VEvndispData&apos;." cwe="398" file0="inc/VCalibrator.h">
            <location file="inc/VPedestalCalculator.h" line="25" column="14" info="Derived variable &apos;VPedestalCalculator::fDebug&apos;"/>
            <location file="inc/VEvndispData.h" line="46" column="21" info="Parent variable &apos;VEvndispData::fDebug&apos;"/>
            <symbol>VPedestalCalculator</symbol>
            <symbol>fDebug</symbol>
            <symbol>VEvndispData</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VDL2Writer&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VDL2Writer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VDL2Writer.h">
            <location file="inc/VDL2Writer.h" line="122" column="9"/>
            <symbol>VDL2Writer</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;VDSTTelescopeConfiguration::FOV&apos; is never used." verbose="struct member &apos;VDSTTelescopeConfiguration::FOV&apos; is never used." cwe="563" file0="inc/VDSTTree.h">
            <location file="inc/VDSTTree.h" line="31" column="11"/>
            <symbol>VDSTTelescopeConfiguration::FOV</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;VDSTTelescopeConfiguration::DynamicRange&apos; is never used." verbose="struct member &apos;VDSTTelescopeConfiguration::DynamicRange&apos; is never used." cwe="563" file0="inc/VDSTTree.h">
            <location file="inc/VDSTTree.h" line="32" column="11"/>
            <symbol>VDSTTelescopeConfiguration::DynamicRange</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;VDSTTelescopeConfiguration::RAWsum&apos; is never used." verbose="struct member &apos;VDSTTelescopeConfiguration::RAWsum&apos; is never used." cwe="563" file0="inc/VDSTTree.h">
            <location file="inc/VDSTTree.h" line="33" column="11"/>
            <symbol>VDSTTelescopeConfiguration::RAWsum</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sDispTableEventData::x&apos; is never used." verbose="struct member &apos;sDispTableEventData::x&apos; is never used." cwe="563" file0="inc/VDispTableAnalyzer.h">
            <location file="inc/VDispTableAnalyzer.h" line="21" column="11"/>
            <symbol>sDispTableEventData::x</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sDispTableEventData::y&apos; is never used." verbose="struct member &apos;sDispTableEventData::y&apos; is never used." cwe="563" file0="inc/VDispTableAnalyzer.h">
            <location file="inc/VDispTableAnalyzer.h" line="22" column="11"/>
            <symbol>sDispTableEventData::y</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sDispTableEventData::cosphi&apos; is never used." verbose="struct member &apos;sDispTableEventData::cosphi&apos; is never used." cwe="563" file0="inc/VDispTableAnalyzer.h">
            <location file="inc/VDispTableAnalyzer.h" line="23" column="11"/>
            <symbol>sDispTableEventData::cosphi</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sDispTableEventData::sinphi&apos; is never used." verbose="struct member &apos;sDispTableEventData::sinphi&apos; is never used." cwe="563" file0="inc/VDispTableAnalyzer.h">
            <location file="inc/VDispTableAnalyzer.h" line="24" column="11"/>
            <symbol>sDispTableEventData::sinphi</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sDispTableEventData::disp&apos; is never used." verbose="struct member &apos;sDispTableEventData::disp&apos; is never used." cwe="563" file0="inc/VDispTableAnalyzer.h">
            <location file="inc/VDispTableAnalyzer.h" line="25" column="11"/>
            <symbol>sDispTableEventData::disp</symbol>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If RQ_OBJECT is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If RQ_OBJECT is a macro then please configure it." file0="inc/VDisplay.h">
            <location file="inc/VDisplay.h" line="61" column="9"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VEnergySpectrum&apos; defines member variable with name &apos;bZombie&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." verbose="The class &apos;VEnergySpectrum&apos; defines member variable with name &apos;bZombie&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." cwe="398" file0="inc/VEnergySpectrum.h">
            <location file="inc/VEnergySpectrum.h" line="39" column="15" info="Derived variable &apos;VEnergySpectrum::bZombie&apos;"/>
            <location file="inc/VAnalysisUtilities.h" line="36" column="14" info="Parent variable &apos;VAnalysisUtilities::bZombie&apos;"/>
            <symbol>VEnergySpectrum</symbol>
            <symbol>bZombie</symbol>
            <symbol>VAnalysisUtilities</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VEnergyThreshold&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VEnergyThreshold&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VEnergySpectrum.h">
            <location file="inc/VEnergyThreshold.h" line="89" column="9"/>
            <symbol>VEnergyThreshold</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VEnergyThreshold&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VEnergyThreshold&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VEnergySpectrum.h">
            <location file="inc/VEnergyThreshold.h" line="90" column="9"/>
            <symbol>VEnergyThreshold</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VEnergySpectrum&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VEnergySpectrum&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VEnergySpectrum.h">
            <location file="inc/VEnergySpectrum.h" line="152" column="9"/>
            <symbol>VEnergySpectrum</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;g&apos; should be passed by const reference." verbose="Parameter &apos;g&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VEnergySpectrum.h">
            <location file="inc/VEnergySpectrum.h" line="225" column="51"/>
            <symbol>g</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;a&apos; should be passed by const reference." verbose="Parameter &apos;a&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VEnergySpectrum.h">
            <location file="inc/VEnergySpectrum.h" line="236" column="41"/>
            <symbol>a</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sData::Type&apos; is never used." verbose="struct member &apos;sData::Type&apos; is never used." cwe="563" file0="inc/VEnergySpectrumfromLiterature.h">
            <location file="inc/VEnergySpectrumfromLiterature.h" line="33" column="22"/>
            <symbol>sData::Type</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sData::EnergyRange_min&apos; is never used." verbose="struct member &apos;sData::EnergyRange_min&apos; is never used." cwe="563" file0="inc/VEnergySpectrumfromLiterature.h">
            <location file="inc/VEnergySpectrumfromLiterature.h" line="36" column="22"/>
            <symbol>sData::EnergyRange_min</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sData::EnergyRange_max&apos; is never used." verbose="struct member &apos;sData::EnergyRange_max&apos; is never used." cwe="563" file0="inc/VEnergySpectrumfromLiterature.h">
            <location file="inc/VEnergySpectrumfromLiterature.h" line="37" column="22"/>
            <symbol>sData::EnergyRange_max</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sEnergyFun::NumParameters&apos; is never used." verbose="struct member &apos;sEnergyFun::NumParameters&apos; is never used." cwe="563" file0="inc/VEnergySpectrumfromLiterature.h">
            <location file="inc/VEnergySpectrumfromLiterature.h" line="47" column="22"/>
            <symbol>sEnergyFun::NumParameters</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VImageAnalyzer&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VEvndispData&apos;." verbose="The class &apos;VImageAnalyzer&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VEvndispData&apos;." cwe="398" file0="inc/VEventLoop.h">
            <location file="inc/VImageAnalyzer.h" line="29" column="14" info="Derived variable &apos;VImageAnalyzer::fDebug&apos;"/>
            <location file="inc/VEvndispData.h" line="46" column="21" info="Parent variable &apos;VEvndispData::fDebug&apos;"/>
            <symbol>VImageAnalyzer</symbol>
            <symbol>fDebug</symbol>
            <symbol>VEvndispData</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VRawDataReader&apos; defines member variable with name &apos;fEvent&apos; also defined in its parent class &apos;VBaseRawDataReader&apos;." verbose="The class &apos;VRawDataReader&apos; defines member variable with name &apos;fEvent&apos; also defined in its parent class &apos;VBaseRawDataReader&apos;." cwe="398" file0="inc/VEventLoop.h">
            <location file="inc/VRawDataReader.h" line="27" column="34" info="Derived variable &apos;VRawDataReader::fEvent&apos;"/>
            <location file="inc/VBaseRawDataReader.h" line="28" column="27" info="Parent variable &apos;VBaseRawDataReader::fEvent&apos;"/>
            <symbol>VRawDataReader</symbol>
            <symbol>fEvent</symbol>
            <symbol>VBaseRawDataReader</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VHoughTransform&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VHoughTransform&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VEventLoop.h">
            <location file="inc/VHoughTransform.h" line="31" column="9"/>
            <symbol>VHoughTransform</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VImageParameterFitter&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VImageParameterFitter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VEventLoop.h">
            <location file="inc/VImageParameterFitter.h" line="105" column="6"/>
            <symbol>VImageParameterFitter</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VEventLoop&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VEventLoop&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VEventLoop.h">
            <location file="inc/VEventLoop.h" line="83" column="9"/>
            <symbol>VEventLoop</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getNextEvent&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="inc/VEventLoop.h">
            <location file="inc/VRawDataReader.h" line="36" column="37" info="Function in derived class"/>
            <location file="inc/VBaseRawDataReader.h" line="255" column="37" info="Virtual function in base class"/>
            <symbol>getNextEvent</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VFluxCalculation&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VFluxCalculation&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VFITS.h">
            <location file="inc/VFluxCalculation.h" line="101" column="9"/>
            <symbol>VFluxCalculation</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VFluxCalculation&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VFluxCalculation&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VFITS.h">
            <location file="inc/VFluxCalculation.h" line="106" column="9"/>
            <symbol>VFluxCalculation</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VInstrumentResponseFunctionReader&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." verbose="The class &apos;VInstrumentResponseFunctionReader&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." cwe="398" file0="inc/VInstrumentResponseFunctionReader.h">
            <location file="inc/VInstrumentResponseFunctionReader.h" line="36" column="16" info="Derived variable &apos;VInstrumentResponseFunctionReader::fDebug&apos;"/>
            <location file="inc/VAnalysisUtilities.h" line="35" column="22" info="Parent variable &apos;VAnalysisUtilities::fDebug&apos;"/>
            <symbol>VInstrumentResponseFunctionReader</symbol>
            <symbol>fDebug</symbol>
            <symbol>VAnalysisUtilities</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iPlotOption&apos; should be passed by const reference." verbose="Parameter &apos;iPlotOption&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VInstrumentResponseFunctionReader.h">
            <location file="inc/VInstrumentResponseFunctionReader.h" line="202" column="36"/>
            <symbol>iPlotOption</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VLibNovaSunAndMoon&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VLibNovaSunAndMoon&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VLibNovaSunAndMoon.h">
            <location file="inc/VLibNovaSunAndMoon.h" line="27" column="9"/>
            <symbol>VLibNovaSunAndMoon</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VLightCurveAnalyzer&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VLightCurveAnalyzer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VLightCurveAnalyzer.h">
            <location file="inc/VLightCurveAnalyzer.h" line="28" column="9"/>
            <symbol>VLightCurveAnalyzer</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VLightCurvePlotter&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VLightCurvePlotter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VLightCurvePlotter.h">
            <location file="inc/VLightCurvePlotter.h" line="67" column="9"/>
            <symbol>VLightCurvePlotter</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VLightCurveWriter&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VLightCurveWriter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VLightCurveWriter.h">
            <location file="inc/VLightCurveWriter.h" line="31" column="9"/>
            <symbol>VLightCurveWriter</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VLikelihoodFitter&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VLikelihoodFitter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VLikelihoodFitter.h">
            <location file="inc/VLikelihoodFitter.h" line="55" column="2"/>
            <symbol>VLikelihoodFitter</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filename&apos; should be passed by const reference." verbose="Parameter &apos;filename&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VLikelihoodFitter.h">
            <location file="inc/VLikelihoodFitter.h" line="55" column="27"/>
            <symbol>filename</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VLombScargle&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VLombScargle&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VLombScargle.h">
            <location file="inc/VLombScargle.h" line="57" column="9"/>
            <symbol>VLombScargle</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iDataVector&apos; should be passed by const reference." verbose="Parameter &apos;iDataVector&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VLombScargle.h">
            <location file="inc/VLombScargle.h" line="67" column="57"/>
            <symbol>iDataVector</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;channels&apos; should be passed by const reference." verbose="Parameter &apos;channels&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VLowGainCalibrator.h">
            <location file="inc/VLowGainCalibrator.h" line="169" column="44"/>
            <symbol>channels</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VMonteCarloRateCalculator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VMonteCarloRateCalculator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VMonteCarloRateCalculator.h">
            <location file="inc/VMonteCarloRateCalculator.h" line="40" column="9"/>
            <symbol>VMonteCarloRateCalculator</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fAnasumDataFile&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." verbose="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fAnasumDataFile&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." cwe="398" file0="inc/VPlotAnasumHistograms.h">
            <location file="inc/VPlotAnasumHistograms.h" line="50" column="16" info="Derived variable &apos;VPlotAnasumHistograms::fAnasumDataFile&apos;"/>
            <location file="inc/VAnalysisUtilities.h" line="49" column="16" info="Parent variable &apos;VAnalysisUtilities::fAnasumDataFile&apos;"/>
            <symbol>VPlotAnasumHistograms</symbol>
            <symbol>fAnasumDataFile</symbol>
            <symbol>VAnalysisUtilities</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." verbose="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." cwe="398" file0="inc/VPlotAnasumHistograms.h">
            <location file="inc/VPlotAnasumHistograms.h" line="52" column="16" info="Derived variable &apos;VPlotAnasumHistograms::fDebug&apos;"/>
            <location file="inc/VAnalysisUtilities.h" line="35" column="22" info="Parent variable &apos;VAnalysisUtilities::fDebug&apos;"/>
            <symbol>VPlotAnasumHistograms</symbol>
            <symbol>fDebug</symbol>
            <symbol>VAnalysisUtilities</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fSkyMapCentreDecJ2000&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." verbose="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fSkyMapCentreDecJ2000&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." cwe="398" file0="inc/VPlotAnasumHistograms.h">
            <location file="inc/VPlotAnasumHistograms.h" line="61" column="16" info="Derived variable &apos;VPlotAnasumHistograms::fSkyMapCentreDecJ2000&apos;"/>
            <location file="inc/VAnalysisUtilities.h" line="39" column="16" info="Parent variable &apos;VAnalysisUtilities::fSkyMapCentreDecJ2000&apos;"/>
            <symbol>VPlotAnasumHistograms</symbol>
            <symbol>fSkyMapCentreDecJ2000</symbol>
            <symbol>VAnalysisUtilities</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fSkyMapCentreRAJ2000&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." verbose="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fSkyMapCentreRAJ2000&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." cwe="398" file0="inc/VPlotAnasumHistograms.h">
            <location file="inc/VPlotAnasumHistograms.h" line="62" column="16" info="Derived variable &apos;VPlotAnasumHistograms::fSkyMapCentreRAJ2000&apos;"/>
            <location file="inc/VAnalysisUtilities.h" line="40" column="16" info="Parent variable &apos;VAnalysisUtilities::fSkyMapCentreRAJ2000&apos;"/>
            <symbol>VPlotAnasumHistograms</symbol>
            <symbol>fSkyMapCentreRAJ2000</symbol>
            <symbol>VAnalysisUtilities</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fTargetShiftWest&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." verbose="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fTargetShiftWest&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." cwe="398" file0="inc/VPlotAnasumHistograms.h">
            <location file="inc/VPlotAnasumHistograms.h" line="63" column="16" info="Derived variable &apos;VPlotAnasumHistograms::fTargetShiftWest&apos;"/>
            <location file="inc/VAnalysisUtilities.h" line="41" column="16" info="Parent variable &apos;VAnalysisUtilities::fTargetShiftWest&apos;"/>
            <symbol>VPlotAnasumHistograms</symbol>
            <symbol>fTargetShiftWest</symbol>
            <symbol>VAnalysisUtilities</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fTargetShiftNorth&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." verbose="The class &apos;VPlotAnasumHistograms&apos; defines member variable with name &apos;fTargetShiftNorth&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." cwe="398" file0="inc/VPlotAnasumHistograms.h">
            <location file="inc/VPlotAnasumHistograms.h" line="64" column="16" info="Derived variable &apos;VPlotAnasumHistograms::fTargetShiftNorth&apos;"/>
            <location file="inc/VAnalysisUtilities.h" line="42" column="16" info="Parent variable &apos;VAnalysisUtilities::fTargetShiftNorth&apos;"/>
            <symbol>VPlotAnasumHistograms</symbol>
            <symbol>fTargetShiftNorth</symbol>
            <symbol>VAnalysisUtilities</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VPlotAnasumHistograms&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VPlotAnasumHistograms&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VPlotAnasumHistograms.h">
            <location file="inc/VPlotAnasumHistograms.h" line="87" column="9"/>
            <symbol>VPlotAnasumHistograms</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sSource::fX&apos; is never used." verbose="struct member &apos;sSource::fX&apos; is never used." cwe="563" file0="inc/VPlotAnasumHistograms.h">
            <location file="inc/VPlotAnasumHistograms.h" line="41" column="12"/>
            <symbol>sSource::fX</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sSource::fY&apos; is never used." verbose="struct member &apos;sSource::fY&apos; is never used." cwe="563" file0="inc/VPlotAnasumHistograms.h">
            <location file="inc/VPlotAnasumHistograms.h" line="42" column="12"/>
            <symbol>sSource::fY</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iP&apos; should be passed by const reference." verbose="Parameter &apos;iP&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotCompareDataWithMC.h">
            <location file="inc/VPlotCompareDataWithMC.h" line="107" column="35"/>
            <symbol>iP</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iMatrixType&apos; should be passed by const reference." verbose="Parameter &apos;iMatrixType&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotInstrumentResponseFunction.h">
            <location file="inc/VPlotInstrumentResponseFunction.h" line="117" column="50"/>
            <symbol>iMatrixType</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VPlotOptimalCut&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VPlotOptimalCut&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VPlotOptimalCut.h">
            <location file="inc/VPlotOptimalCut.h" line="28" column="9"/>
            <symbol>VPlotOptimalCut</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iName&apos; should be passed by const reference." verbose="Parameter &apos;iName&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotRadialAcceptance.h">
            <location file="inc/VPlotRadialAcceptance.h" line="81" column="34"/>
            <symbol>iName</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iDataDirectory&apos; should be passed by const reference." verbose="Parameter &apos;iDataDirectory&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotTMVAParameters.h">
            <location file="inc/VPlotTMVAParameters.h" line="38" column="37"/>
            <symbol>iDataDirectory</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iN&apos; should be passed by const reference." verbose="Parameter &apos;iN&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotVERITASPerformance.h">
            <location file="inc/VSensitivityCalculator.h" line="301" column="44"/>
            <symbol>iN</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iT&apos; should be passed by const reference." verbose="Parameter &apos;iT&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotVERITASPerformance.h">
            <location file="inc/VSensitivityCalculator.h" line="301" column="72"/>
            <symbol>iT</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iF&apos; should be passed by const reference." verbose="Parameter &apos;iF&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotVERITASPerformance.h">
            <location file="inc/VSensitivityCalculator.h" line="306" column="62"/>
            <symbol>iF</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iName&apos; should be passed by const reference." verbose="Parameter &apos;iName&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotVERITASPerformance.h">
            <location file="inc/VSensitivityCalculator.h" line="310" column="39"/>
            <symbol>iName</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iFile&apos; should be passed by const reference." verbose="Parameter &apos;iFile&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotVERITASPerformance.h">
            <location file="inc/VSensitivityCalculator.h" line="364" column="53"/>
            <symbol>iFile</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iVersionText&apos; should be passed by const reference." verbose="Parameter &apos;iVersionText&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotVERITASPerformance.h">
            <location file="inc/VPlotVERITASPerformance.h" line="90" column="39"/>
            <symbol>iVersionText</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iPrintName&apos; should be passed by const reference." verbose="Parameter &apos;iPrintName&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotVERITASPerformance.h">
            <location file="inc/VPlotVERITASPerformance.h" line="95" column="35"/>
            <symbol>iPrintName</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iCurrentInstrumentRootFile&apos; should be passed by const reference." verbose="Parameter &apos;iCurrentInstrumentRootFile&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotWPPhysSensitivity.h">
            <location file="inc/VPlotWPPhysSensitivity.h" line="166" column="47"/>
            <symbol>iCurrentInstrumentRootFile</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iV&apos; should be passed by const reference." verbose="Parameter &apos;iV&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotWPPhysSensitivity.h">
            <location file="inc/VPlotWPPhysSensitivity.h" line="171" column="63"/>
            <symbol>iV</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iFile&apos; should be passed by const reference." verbose="Parameter &apos;iFile&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VPlotWPPhysSensitivity.h">
            <location file="inc/VPlotWPPhysSensitivity.h" line="177" column="41"/>
            <symbol>iFile</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sSensitivityData::fSignal&apos; is never used." verbose="struct member &apos;sSensitivityData::fSignal&apos; is never used." cwe="563" file0="inc/VSensitivityCalculator.h">
            <location file="inc/VSensitivityCalculator.h" line="49" column="12"/>
            <symbol>sSensitivityData::fSignal</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sSensitivityData::fBackground&apos; is never used." verbose="struct member &apos;sSensitivityData::fBackground&apos; is never used." cwe="563" file0="inc/VSensitivityCalculator.h">
            <location file="inc/VSensitivityCalculator.h" line="50" column="12"/>
            <symbol>sSensitivityData::fBackground</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sSensitivityData::fAlpha&apos; is never used." verbose="struct member &apos;sSensitivityData::fAlpha&apos; is never used." cwe="563" file0="inc/VSensitivityCalculator.h">
            <location file="inc/VSensitivityCalculator.h" line="51" column="12"/>
            <symbol>sSensitivityData::fAlpha</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VSourceGeometryFitter&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." verbose="The class &apos;VSourceGeometryFitter&apos; defines member variable with name &apos;fDebug&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="52" column="16" info="Derived variable &apos;VSourceGeometryFitter::fDebug&apos;"/>
            <location file="inc/VAnalysisUtilities.h" line="35" column="22" info="Parent variable &apos;VAnalysisUtilities::fDebug&apos;"/>
            <symbol>VSourceGeometryFitter</symbol>
            <symbol>fDebug</symbol>
            <symbol>VAnalysisUtilities</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;VSourceGeometryFitter&apos; defines member variable with name &apos;fAnasumDataFile&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." verbose="The class &apos;VSourceGeometryFitter&apos; defines member variable with name &apos;fAnasumDataFile&apos; also defined in its parent class &apos;VAnalysisUtilities&apos;." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="54" column="16" info="Derived variable &apos;VSourceGeometryFitter::fAnasumDataFile&apos;"/>
            <location file="inc/VAnalysisUtilities.h" line="49" column="16" info="Parent variable &apos;VAnalysisUtilities::fAnasumDataFile&apos;"/>
            <symbol>VSourceGeometryFitter</symbol>
            <symbol>fAnasumDataFile</symbol>
            <symbol>VAnalysisUtilities</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VSourceGeometryFitter&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VSourceGeometryFitter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="74" column="9"/>
            <symbol>VSourceGeometryFitter</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="132" column="20"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="133" column="20"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fT&apos; can be reduced." verbose="The scope of the variable &apos;fT&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="136" column="20"/>
            <symbol>fT</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fH&apos; can be reduced." verbose="The scope of the variable &apos;fH&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="137" column="20"/>
            <symbol>fH</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fHErr&apos; can be reduced." verbose="The scope of the variable &apos;fHErr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="138" column="20"/>
            <symbol>fHErr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;t2&apos; can be reduced." verbose="The scope of the variable &apos;t2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="140" column="20"/>
            <symbol>t2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sum&apos; can be reduced." verbose="The scope of the variable &apos;sum&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="243" column="21"/>
            <symbol>sum</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="248" column="20"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="249" column="20"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="250" column="20"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sum&apos; can be reduced." verbose="The scope of the variable &apos;sum&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="349" column="21"/>
            <symbol>sum</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sum1&apos; can be reduced." verbose="The scope of the variable &apos;sum1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="350" column="21"/>
            <symbol>sum1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sum2&apos; can be reduced." verbose="The scope of the variable &apos;sum2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="351" column="21"/>
            <symbol>sum2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="358" column="20"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="359" column="20"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="360" column="20"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="470" column="20"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="471" column="20"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fT&apos; can be reduced." verbose="The scope of the variable &apos;fT&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="474" column="20"/>
            <symbol>fT</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fH&apos; can be reduced." verbose="The scope of the variable &apos;fH&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="475" column="20"/>
            <symbol>fH</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fHErr&apos; can be reduced." verbose="The scope of the variable &apos;fHErr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="476" column="20"/>
            <symbol>fHErr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;t2&apos; can be reduced." verbose="The scope of the variable &apos;t2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="478" column="20"/>
            <symbol>t2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sum&apos; can be reduced." verbose="The scope of the variable &apos;sum&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="682" column="21"/>
            <symbol>sum</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="687" column="20"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="688" column="20"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="689" column="20"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sum&apos; can be reduced." verbose="The scope of the variable &apos;sum&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="787" column="21"/>
            <symbol>sum</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="797" column="20"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="798" column="20"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="799" column="20"/>
            <symbol>n</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="132" column="22"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="248" column="22"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="358" column="22"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="470" column="22"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="687" column="22"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="inc/VSourceGeometryFitter.h">
            <location file="inc/VSourceGeometryFitter.h" line="797" column="22"/>
            <symbol>x</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sPhotoMetricBand::fEffectiveWavelength_micron&apos; is never used." verbose="struct member &apos;sPhotoMetricBand::fEffectiveWavelength_micron&apos; is never used." cwe="563" file0="inc/VSpectralEnergyDistribution.h">
            <location file="inc/VSpectralEnergyDistribution.h" line="34" column="12"/>
            <symbol>sPhotoMetricBand::fEffectiveWavelength_micron</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sPhotoMetricBand::fF0_CIT_Jy&apos; is never used." verbose="struct member &apos;sPhotoMetricBand::fF0_CIT_Jy&apos; is never used." cwe="563" file0="inc/VSpectralEnergyDistribution.h">
            <location file="inc/VSpectralEnergyDistribution.h" line="35" column="12"/>
            <symbol>sPhotoMetricBand::fF0_CIT_Jy</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sPhotoMetricBand::fF0_UKIRT_Jy&apos; is never used." verbose="struct member &apos;sPhotoMetricBand::fF0_UKIRT_Jy&apos; is never used." cwe="563" file0="inc/VSpectralEnergyDistribution.h">
            <location file="inc/VSpectralEnergyDistribution.h" line="36" column="12"/>
            <symbol>sPhotoMetricBand::fF0_UKIRT_Jy</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sGalacticExtinction::fCorrection&apos; is never used." verbose="struct member &apos;sGalacticExtinction::fCorrection&apos; is never used." cwe="563" file0="inc/VSpectralEnergyDistribution.h">
            <location file="inc/VSpectralEnergyDistribution.h" line="46" column="12"/>
            <symbol>sGalacticExtinction::fCorrection</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sPhotonFlux::MJD_min&apos; is never used." verbose="struct member &apos;sPhotonFlux::MJD_min&apos; is never used." cwe="563" file0="inc/VSpectralEnergyDistribution.h">
            <location file="inc/VSpectralEnergyDistribution.h" line="56" column="12"/>
            <symbol>sPhotonFlux::MJD_min</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sPhotonFlux::MJD_max&apos; is never used." verbose="struct member &apos;sPhotonFlux::MJD_max&apos; is never used." cwe="563" file0="inc/VSpectralEnergyDistribution.h">
            <location file="inc/VSpectralEnergyDistribution.h" line="57" column="12"/>
            <symbol>sPhotonFlux::MJD_max</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sPhotonFlux::Marker&apos; is never used." verbose="struct member &apos;sPhotonFlux::Marker&apos; is never used." cwe="563" file0="inc/VSpectralEnergyDistribution.h">
            <location file="inc/VSpectralEnergyDistribution.h" line="67" column="9"/>
            <symbol>sPhotonFlux::Marker</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sPhotonFlux::Color&apos; is never used." verbose="struct member &apos;sPhotonFlux::Color&apos; is never used." cwe="563" file0="inc/VSpectralEnergyDistribution.h">
            <location file="inc/VSpectralEnergyDistribution.h" line="68" column="9"/>
            <symbol>sPhotonFlux::Color</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;sRE_REGIONS::noff&apos; is never used." verbose="struct member &apos;sRE_REGIONS::noff&apos; is never used." cwe="563" file0="inc/VStereoMaps.h">
            <location file="inc/VStereoMaps.h" line="23" column="9"/>
            <symbol>sRE_REGIONS::noff</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;a&apos; should be passed by const reference." verbose="Parameter &apos;a&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VStereoReconstruction.h">
            <location file="inc/VStereoReconstruction.h" line="85" column="35"/>
            <symbol>a</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VTableLookupDataHandler&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VTableLookupDataHandler&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VTableLookup.h">
            <location file="inc/VTableLookupDataHandler.h" line="382" column="9"/>
            <symbol>VTableLookupDataHandler</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VTableLookup&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VTableLookup&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="inc/VTableLookup.h">
            <location file="inc/VTableLookup.h" line="141" column="9"/>
            <symbol>VTableLookup</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iCrabSpectrum&apos; should be passed by const reference." verbose="Parameter &apos;iCrabSpectrum&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VWPPhysSensitivityFile.h">
            <location file="inc/VWPPhysSensitivityFile.h" line="111" column="38"/>
            <symbol>iCrabSpectrum</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iCRSpectrum&apos; should be passed by const reference." verbose="Parameter &apos;iCRSpectrum&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VWPPhysSensitivityFile.h">
            <location file="inc/VWPPhysSensitivityFile.h" line="116" column="43"/>
            <symbol>iCRSpectrum</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iO&apos; should be passed by const reference." verbose="Parameter &apos;iO&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VWPPhysSensitivityFile.h">
            <location file="inc/VWPPhysSensitivityFile.h" line="130" column="37"/>
            <symbol>iO</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;Angular_Resolution::fHisAngRes&apos; is never used." verbose="struct member &apos;Angular_Resolution::fHisAngRes&apos; is never used." cwe="563" file0="inc/VWPPhysSensitivityFile.h">
            <location file="inc/VWPPhysSensitivityFile.h" line="27" column="11"/>
            <symbol>Angular_Resolution::fHisAngRes</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iV&apos; should be passed by const reference." verbose="Parameter &apos;iV&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VWPPhysSensitivityPlotsMaker.h">
            <location file="inc/VWPPhysSensitivityPlotsMaker.h" line="99" column="63"/>
            <symbol>iV</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iStyle&apos; should be passed by const reference." verbose="Parameter &apos;iStyle&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VWPPhysSensitivityPlotsMaker.h">
            <location file="inc/VWPPhysSensitivityPlotsMaker.h" line="113" column="49"/>
            <symbol>iStyle</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iPrint&apos; should be passed by const reference." verbose="Parameter &apos;iPrint&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VWPPhysSensitivityPlotsMaker.h">
            <location file="inc/VWPPhysSensitivityPlotsMaker.h" line="158" column="41"/>
            <symbol>iPrint</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iA&apos; should be passed by const reference." verbose="Parameter &apos;iA&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="inc/VWPPhysSensitivityPlotsMaker.h">
            <location file="inc/VWPPhysSensitivityPlotsMaker.h" line="169" column="48"/>
            <symbol>iA</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/CData.C">
            <location file="src/CData.C" line="13" column="21"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="src/CData.C">
            <location file="src/CData.C" line="13" column="29"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/CData.C">
            <location file="src/CData.C" line="22" column="16"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/CEffArea.C">
            <location file="src/CEffArea.C" line="39" column="21"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="src/CEffArea.C">
            <location file="src/CEffArea.C" line="39" column="29"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/CEffArea.C">
            <location file="src/CEffArea.C" line="48" column="16"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/CEffFit.C">
            <location file="src/CEffFit.C" line="39" column="21"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="src/CEffFit.C">
            <location file="src/CEffFit.C" line="39" column="29"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/CEffFit.C">
            <location file="src/CEffFit.C" line="48" column="16"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/CRunSummary.C">
            <location file="src/CRunSummary.C" line="42" column="21"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="src/CRunSummary.C">
            <location file="src/CRunSummary.C" line="42" column="29"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/CRunSummary.C">
            <location file="src/CRunSummary.C" line="51" column="16"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;fData-&gt;fDSTL2TrigType[i_ntel_trig]!=99&apos; is always false" verbose="Condition &apos;fData-&gt;fDSTL2TrigType[i_ntel_trig]!=99&apos; is always false" cwe="570" file0="src/CTA.convert_hessio_to_VDST.cpp">
            <location file="src/CTA.convert_hessio_to_VDST.cpp" line="610" column="124" info="Condition &apos;fData-&gt;fDSTL2TrigType[i_ntel_trig]!=99&apos; is always false"/>
            <location file="src/CTA.convert_hessio_to_VDST.cpp" line="589" column="54" info="Assignment &apos;fData-&gt;fDSTL2TrigType[i_ntel_trig]=99&apos;, assigned value is 99"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;iFillPedDistributions&apos; is always false" verbose="Condition &apos;iFillPedDistributions&apos; is always false" cwe="570" file0="src/CTA.convert_hessio_to_VDST.cpp">
            <location file="src/CTA.convert_hessio_to_VDST.cpp" line="1243" column="9" info="Condition &apos;iFillPedDistributions&apos; is always false"/>
            <location file="src/CTA.convert_hessio_to_VDST.cpp" line="1241" column="34" info="Assignment &apos;iFillPedDistributions=false&apos;, assigned value is 0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iTraceIsZero&apos; can be reduced." verbose="The scope of the variable &apos;iTraceIsZero&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/CTA.convert_hessio_to_VDST.cpp">
            <location file="src/CTA.convert_hessio_to_VDST.cpp" line="770" column="26"/>
            <symbol>iTraceIsZero</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iarg&apos; can be reduced." verbose="The scope of the variable &apos;iarg&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/CTA.convert_hessio_to_VDST.cpp">
            <location file="src/CTA.convert_hessio_to_VDST.cpp" line="1681" column="9"/>
            <symbol>iarg</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;trg_mask_file&apos; should be passed by const reference." verbose="Parameter &apos;trg_mask_file&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/CTA.convert_hessio_to_VDST.cpp">
            <location file="src/CTA.convert_hessio_to_VDST.cpp" line="335" column="32"/>
            <symbol>trg_mask_file</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/Cshowerpars.C">
            <location file="src/Cshowerpars.C" line="39" column="21"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="src/Cshowerpars.C">
            <location file="src/Cshowerpars.C" line="39" column="29"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/Cshowerpars.C">
            <location file="src/Cshowerpars.C" line="48" column="16"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/Ctelconfig.C">
            <location file="src/Ctelconfig.C" line="39" column="21"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="src/Ctelconfig.C">
            <location file="src/Ctelconfig.C" line="39" column="29"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/Ctelconfig.C">
            <location file="src/Ctelconfig.C" line="48" column="16"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/Ctpars.C">
            <location file="src/Ctpars.C" line="39" column="21"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="src/Ctpars.C">
            <location file="src/Ctpars.C" line="39" column="29"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nbytes&apos; is assigned a value that is never used." verbose="Variable &apos;nbytes&apos; is assigned a value that is never used." cwe="563" file0="src/Ctpars.C">
            <location file="src/Ctpars.C" line="48" column="16"/>
            <symbol>nbytes</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_title&apos; can be reduced." verbose="The scope of the variable &apos;i_title&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VAnaSum.cpp">
            <location file="src/VAnaSum.cpp" line="36" column="10"/>
            <symbol>i_title</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;iF&apos; is redundant or there is possible null pointer dereference: iF." verbose="Either the condition &apos;iF&apos; is redundant or there is possible null pointer dereference: iF." cwe="476" file0="src/VAnaSumRunParameter.cpp">
            <location file="src/VAnaSumRunParameter.cpp" line="1382" column="9" info="Null pointer dereference"/>
            <location file="src/VAnaSumRunParameter.cpp" line="1407" column="9" info="Assuming that condition &apos;iF&apos; is not redundant"/>
            <symbol>iF</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;iF&apos; is redundant or there is possible null pointer dereference: iF." verbose="Either the condition &apos;iF&apos; is redundant or there is possible null pointer dereference: iF." cwe="476" file0="src/VAnaSumRunParameter.cpp">
            <location file="src/VAnaSumRunParameter.cpp" line="1389" column="49" info="Null pointer dereference"/>
            <location file="src/VAnaSumRunParameter.cpp" line="1407" column="9" info="Assuming that condition &apos;iF&apos; is not redundant"/>
            <symbol>iF</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;iF&apos; is redundant or there is possible null pointer dereference: iF." verbose="Either the condition &apos;iF&apos; is redundant or there is possible null pointer dereference: iF." cwe="476" file0="src/VAnaSumRunParameter.cpp">
            <location file="src/VAnaSumRunParameter.cpp" line="1467" column="9" info="Null pointer dereference"/>
            <location file="src/VAnaSumRunParameter.cpp" line="1504" column="9" info="Assuming that condition &apos;iF&apos; is not redundant"/>
            <symbol>iF</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;iF&apos; is redundant or there is possible null pointer dereference: iF." verbose="Either the condition &apos;iF&apos; is redundant or there is possible null pointer dereference: iF." cwe="476" file0="src/VAnaSumRunParameter.cpp">
            <location file="src/VAnaSumRunParameter.cpp" line="1474" column="97" info="Null pointer dereference"/>
            <location file="src/VAnaSumRunParameter.cpp" line="1504" column="9" info="Assuming that condition &apos;iF&apos; is not redundant"/>
            <symbol>iF</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;it.fAcceptanceFile&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;it.fAcceptanceFile&apos; is reassigned a value before the old one has been used." cwe="563" file0="src/VAnaSumRunParameter.cpp">
            <location file="src/VAnaSumRunParameter.cpp" line="1319" column="24" info="it.fAcceptanceFile is overwritten"/>
            <location file="src/VAnaSumRunParameter.cpp" line="1313" column="24" info="it.fAcceptanceFile is assigned"/>
            <symbol>it.fAcceptanceFile</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;it.fAcceptanceFile&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;it.fAcceptanceFile&apos; is reassigned a value before the old one has been used." cwe="563" file0="src/VAnaSumRunParameter.cpp">
            <location file="src/VAnaSumRunParameter.cpp" line="1325" column="24" info="it.fAcceptanceFile is overwritten"/>
            <location file="src/VAnaSumRunParameter.cpp" line="1319" column="24" info="it.fAcceptanceFile is assigned"/>
            <symbol>it.fAcceptanceFile</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_run&apos; can be reduced." verbose="The scope of the variable &apos;i_run&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VAnaSumRunParameter.cpp">
            <location file="src/VAnaSumRunParameter.cpp" line="1710" column="9"/>
            <symbol>i_run</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_treename&apos; is assigned a value that is never used." verbose="Variable &apos;i_treename&apos; is assigned a value that is never used." cwe="563" file0="src/VAnaSumRunParameter.cpp">
            <location file="src/VAnaSumRunParameter.cpp" line="1631" column="23"/>
            <symbol>i_treename</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/VAnalysisUtilities.cpp">
            <location file="src/VAnalysisUtilities.cpp" line="418" column="31" info="Shadow variable"/>
            <location file="src/VAnalysisUtilities.cpp" line="359" column="14" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/VAnalysisUtilities.cpp">
            <location file="src/VAnalysisUtilities.cpp" line="436" column="31" info="Shadow variable"/>
            <location file="src/VAnalysisUtilities.cpp" line="359" column="14" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bFoundRun&apos; is assigned a value that is never used." verbose="Variable &apos;bFoundRun&apos; is assigned a value that is never used." cwe="563" file0="src/VAnalysisUtilities.cpp">
            <location file="src/VAnalysisUtilities.cpp" line="357" column="20"/>
            <symbol>bFoundRun</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VArrayAnalyzer.cpp">
            <location file="src/VArrayAnalyzer.cpp" line="781" column="13" info="Second condition"/>
            <location file="src/VArrayAnalyzer.cpp" line="777" column="13" info="First condition"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i_nbytes&apos; shadows outer variable" verbose="Local variable &apos;i_nbytes&apos; shadows outer variable" cwe="398" file0="src/VArrayAnalyzer.cpp">
            <location file="src/VArrayAnalyzer.cpp" line="654" column="21" info="Shadow variable"/>
            <location file="src/VArrayAnalyzer.cpp" line="572" column="13" info="Shadowed declaration"/>
            <symbol>i_nbytes</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i_nbytes&apos; shadows outer variable" verbose="Local variable &apos;i_nbytes&apos; shadows outer variable" cwe="398" file0="src/VArrayAnalyzer.cpp">
            <location file="src/VArrayAnalyzer.cpp" line="670" column="17" info="Shadow variable"/>
            <location file="src/VArrayAnalyzer.cpp" line="572" column="13" info="Shadowed declaration"/>
            <symbol>i_nbytes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iPointingErrorX&apos; is assigned a value that is never used." verbose="Variable &apos;iPointingErrorX&apos; is assigned a value that is never used." cwe="563" file0="src/VArrayAnalyzer.cpp">
            <location file="src/VArrayAnalyzer.cpp" line="1678" column="28"/>
            <symbol>iPointingErrorX</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iPointingErrorY&apos; is assigned a value that is never used." verbose="Variable &apos;iPointingErrorY&apos; is assigned a value that is never used." cwe="563" file0="src/VArrayAnalyzer.cpp">
            <location file="src/VArrayAnalyzer.cpp" line="1679" column="28"/>
            <symbol>iPointingErrorY</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_cen_x&apos; is assigned a value that is never used." verbose="Variable &apos;i_cen_x&apos; is assigned a value that is never used." cwe="563" file0="src/VArrayAnalyzer.cpp">
            <location file="src/VArrayAnalyzer.cpp" line="1680" column="19"/>
            <symbol>i_cen_x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_cen_y&apos; is assigned a value that is never used." verbose="Variable &apos;i_cen_y&apos; is assigned a value that is never used." cwe="563" file0="src/VArrayAnalyzer.cpp">
            <location file="src/VArrayAnalyzer.cpp" line="1681" column="19"/>
            <symbol>i_cen_y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_phi&apos; is assigned a value that is never used." verbose="Variable &apos;i_phi&apos; is assigned a value that is never used." cwe="563" file0="src/VArrayAnalyzer.cpp">
            <location file="src/VArrayAnalyzer.cpp" line="1682" column="17"/>
            <symbol>i_phi</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_cen_x&apos; is assigned a value that is never used." verbose="Variable &apos;i_cen_x&apos; is assigned a value that is never used." cwe="563" file0="src/VArrayAnalyzer.cpp">
            <location file="src/VArrayAnalyzer.cpp" line="1821" column="19"/>
            <symbol>i_cen_x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_cen_y&apos; is assigned a value that is never used." verbose="Variable &apos;i_cen_y&apos; is assigned a value that is never used." cwe="563" file0="src/VArrayAnalyzer.cpp">
            <location file="src/VArrayAnalyzer.cpp" line="1822" column="19"/>
            <symbol>i_cen_y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_weight&apos; is assigned a value that is never used." verbose="Variable &apos;i_weight&apos; is assigned a value that is never used." cwe="563" file0="src/VArrayAnalyzer.cpp">
            <location file="src/VArrayAnalyzer.cpp" line="1823" column="20"/>
            <symbol>i_weight</symbol>
        </error>
        <error id="assignBoolToFloat" severity="style" msg="Boolean value assigned to floating point variable." verbose="Boolean value assigned to floating point variable." cwe="704" file0="src/VAtmosphereSoundingData.cpp">
            <location file="src/VAtmosphereSoundingData.cpp" line="336" column="22"/>
        </error>
        <error id="assignBoolToFloat" severity="style" msg="Boolean value assigned to floating point variable." verbose="Boolean value assigned to floating point variable." cwe="704" file0="src/VAtmosphereSoundingData.cpp">
            <location file="src/VAtmosphereSoundingData.cpp" line="354" column="19"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="1632" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="1643" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="1666" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="1666" column="17"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;R_d&apos; can be reduced." verbose="The scope of the variable &apos;R_d&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="927" column="12"/>
            <symbol>R_d</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hname&apos; can be reduced." verbose="The scope of the variable &apos;hname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="2132" column="10"/>
            <symbol>hname</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;is&apos; shadows outer variable" verbose="Local variable &apos;is&apos; shadows outer variable" cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="137" column="18" info="Shadow variable"/>
            <location file="src/VAtmosphereSoundings.cpp" line="110" column="14" info="Shadowed declaration"/>
            <symbol>is</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;is_stream&apos; shadows outer variable" verbose="Local variable &apos;is_stream&apos; shadows outer variable" cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="206" column="39" info="Shadow variable"/>
            <location file="src/VAtmosphereSoundings.cpp" line="155" column="31" info="Shadowed declaration"/>
            <symbol>is_stream</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;is&apos; shadows outer variable" verbose="Local variable &apos;is&apos; shadows outer variable" cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="413" column="18" info="Shadow variable"/>
            <location file="src/VAtmosphereSoundings.cpp" line="345" column="14" info="Shadowed declaration"/>
            <symbol>is</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;is&apos; shadows outer variable" verbose="Local variable &apos;is&apos; shadows outer variable" cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="1429" column="18" info="Shadow variable"/>
            <location file="src/VAtmosphereSoundings.cpp" line="1399" column="14" info="Shadowed declaration"/>
            <symbol>is</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;temp&apos; shadows outer variable" verbose="Local variable &apos;temp&apos; shadows outer variable" cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="3505" column="17" info="Shadow variable"/>
            <location file="src/VAtmosphereSoundings.cpp" line="3414" column="13" info="Shadowed declaration"/>
            <symbol>temp</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;temp&apos; shadows outer variable" verbose="Local variable &apos;temp&apos; shadows outer variable" cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="3539" column="17" info="Shadow variable"/>
            <location file="src/VAtmosphereSoundings.cpp" line="3414" column="13" info="Shadowed declaration"/>
            <symbol>temp</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;j&apos; shadows outer variable" verbose="Local variable &apos;j&apos; shadows outer variable" cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="3612" column="37" info="Shadow variable"/>
            <location file="src/VAtmosphereSoundings.cpp" line="3593" column="9" info="Shadowed declaration"/>
            <symbol>j</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;j&apos; shadows outer variable" verbose="Local variable &apos;j&apos; shadows outer variable" cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="3701" column="37" info="Shadow variable"/>
            <location file="src/VAtmosphereSoundings.cpp" line="3689" column="9" info="Shadowed declaration"/>
            <symbol>j</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;j&apos; shadows outer variable" verbose="Local variable &apos;j&apos; shadows outer variable" cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="3712" column="37" info="Shadow variable"/>
            <location file="src/VAtmosphereSoundings.cpp" line="3689" column="9" info="Shadowed declaration"/>
            <symbol>j</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;p&apos; is assigned a value that is never used." verbose="Variable &apos;p&apos; is assigned a value that is never used." cwe="563" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="534" column="14"/>
            <symbol>p</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;t&apos; is assigned a value that is never used." verbose="Variable &apos;t&apos; is assigned a value that is never used." cwe="563" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="577" column="14"/>
            <symbol>t</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VAtmosphereSoundings.cpp">
            <location file="src/VAtmosphereSoundings.cpp" line="1427" column="87"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bSimulations&apos; can be reduced." verbose="The scope of the variable &apos;bSimulations&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VBFDataReader.cpp">
            <location file="src/VBFDataReader.cpp" line="44" column="10"/>
            <symbol>bSimulations</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VBaseRawDataReader.cpp">
            <location file="src/VBaseRawDataReader.cpp" line="17" column="9" info="Second condition"/>
            <location file="src/VBaseRawDataReader.cpp" line="13" column="9" info="First condition"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fsys&apos; is assigned a value that is never used." verbose="Variable &apos;fsys&apos; is assigned a value that is never used." cwe="563" file0="src/VCTARequirements.cpp">
            <location file="src/VCTARequirements.cpp" line="174" column="17"/>
            <symbol>fsys</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y_low&apos; is assigned a value that is never used." verbose="Variable &apos;y_low&apos; is assigned a value that is never used." cwe="563" file0="src/VCTARequirements.cpp">
            <location file="src/VCTARequirements.cpp" line="224" column="18"/>
            <symbol>y_low</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="109" column="21"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="109" column="21"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="112" column="21"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="112" column="21"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="135" column="21"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="135" column="21"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="138" column="21"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="138" column="21"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="698" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="699" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="819" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="820" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="822" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="823" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1029" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1032" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1036" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1042" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1062" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1068" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1071" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1266" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1267" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1806" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="3997" column="9"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ic&apos; can be reduced." verbose="The scope of the variable &apos;ic&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="38" column="10"/>
            <symbol>ic</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iname&apos; can be reduced." verbose="The scope of the variable &apos;iname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="639" column="10"/>
            <symbol>iname</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ititle&apos; can be reduced." verbose="The scope of the variable &apos;ititle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="640" column="10"/>
            <symbol>ititle</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;telID&apos; can be reduced." verbose="The scope of the variable &apos;telID&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="807" column="13"/>
            <symbol>telID</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;mean&apos; can be reduced." verbose="The scope of the variable &apos;mean&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2142" column="11"/>
            <symbol>mean</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rms&apos; can be reduced." verbose="The scope of the variable &apos;rms&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2143" column="11"/>
            <symbol>rms</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_module&apos; can be reduced." verbose="The scope of the variable &apos;i_module&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2160" column="13"/>
            <symbol>i_module</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_chan&apos; can be reduced." verbose="The scope of the variable &apos;i_chan&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2160" column="23"/>
            <symbol>i_chan</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_run&apos; can be reduced." verbose="The scope of the variable &apos;i_run&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2160" column="31"/>
            <symbol>i_run</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2160" column="38"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_ped&apos; can be reduced." verbose="The scope of the variable &apos;i_ped&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2161" column="16"/>
            <symbol>i_ped</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_pedvar&apos; can be reduced." verbose="The scope of the variable &apos;i_pedvar&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2161" column="23"/>
            <symbol>i_pedvar</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_n&apos; can be reduced." verbose="The scope of the variable &apos;i_n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2393" column="16"/>
            <symbol>i_n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_sum&apos; can be reduced." verbose="The scope of the variable &apos;i_sum&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2394" column="16"/>
            <symbol>i_sum</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_sum2&apos; can be reduced." verbose="The scope of the variable &apos;i_sum2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2395" column="16"/>
            <symbol>i_sum2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nZero&apos; can be reduced." verbose="The scope of the variable &apos;nZero&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2532" column="9"/>
            <symbol>nZero</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buffer&apos; can be reduced." verbose="The scope of the variable &apos;buffer&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2595" column="18"/>
            <symbol>buffer</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buffer&apos; can be reduced." verbose="The scope of the variable &apos;buffer&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2906" column="18"/>
            <symbol>buffer</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iLowGainCaliLines&apos; can be reduced." verbose="The scope of the variable &apos;iLowGainCaliLines&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="3291" column="9"/>
            <symbol>iLowGainCaliLines</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;t&apos; shadows outer variable" verbose="Local variable &apos;t&apos; shadows outer variable" cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="4236" column="31" info="Shadow variable"/>
            <location file="src/VCalibrator.cpp" line="3896" column="12" info="Shadowed declaration"/>
            <symbol>t</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;t&apos; shadows outer variable" verbose="Local variable &apos;t&apos; shadows outer variable" cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="4294" column="27" info="Shadow variable"/>
            <location file="src/VCalibrator.cpp" line="3896" column="12" info="Shadowed declaration"/>
            <symbol>t</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ichannel&apos; is assigned a value that is never used." verbose="Variable &apos;ichannel&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1477" column="18"/>
            <symbol>ichannel</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_mean&apos; is assigned a value that is never used." verbose="Variable &apos;i_mean&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1480" column="20"/>
            <symbol>i_mean</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_rms&apos; is assigned a value that is never used." verbose="Variable &apos;i_rms&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1481" column="20"/>
            <symbol>i_rms</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_median&apos; is assigned a value that is never used." verbose="Variable &apos;i_median&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1483" column="22"/>
            <symbol>i_median</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_mean&apos; is assigned a value that is never used." verbose="Variable &apos;i_mean&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1487" column="20"/>
            <symbol>i_mean</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_rms&apos; is assigned a value that is never used." verbose="Variable &apos;i_rms&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1488" column="20"/>
            <symbol>i_rms</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_median&apos; is assigned a value that is never used." verbose="Variable &apos;i_median&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="1489" column="22"/>
            <symbol>i_median</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_n&apos; is assigned a value that is never used." verbose="Variable &apos;i_n&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2393" column="20"/>
            <symbol>i_n</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_sum&apos; is assigned a value that is never used." verbose="Variable &apos;i_sum&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2394" column="22"/>
            <symbol>i_sum</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_sum2&apos; is assigned a value that is never used." verbose="Variable &apos;i_sum2&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="2395" column="23"/>
            <symbol>i_sum2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iLowGainCaliLines&apos; is assigned a value that is never used." verbose="Variable &apos;iLowGainCaliLines&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="3291" column="27"/>
            <symbol>iLowGainCaliLines</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_gainCorrect&apos; is assigned a value that is never used." verbose="Variable &apos;i_gainCorrect&apos; is assigned a value that is never used." cwe="563" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="4614" column="25"/>
            <symbol>i_gainCorrect</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="511" column="83"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="521" column="89"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VCalibrator.cpp">
            <location file="src/VCalibrator.cpp" line="4505" column="57"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCamera.cpp">
            <location file="src/VCamera.cpp" line="113" column="9"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCamera.cpp">
            <location file="src/VCamera.cpp" line="113" column="12"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rx&apos; can be reduced." verbose="The scope of the variable &apos;rx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCamera.cpp">
            <location file="src/VCamera.cpp" line="113" column="15"/>
            <symbol>rx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ry&apos; can be reduced." verbose="The scope of the variable &apos;ry&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCamera.cpp">
            <location file="src/VCamera.cpp" line="113" column="19"/>
            <symbol>ry</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;w2&apos; can be reduced." verbose="The scope of the variable &apos;w2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCamera.cpp">
            <location file="src/VCamera.cpp" line="1317" column="13"/>
            <symbol>w2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;dist&apos; can be reduced." verbose="The scope of the variable &apos;dist&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCamera.cpp">
            <location file="src/VCamera.cpp" line="1858" column="9"/>
            <symbol>dist</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;scaler&apos; is assigned a value that is never used." verbose="Variable &apos;scaler&apos; is assigned a value that is never used." cwe="563" file0="src/VCamera.cpp">
            <location file="src/VCamera.cpp" line="1360" column="16"/>
            <symbol>scaler</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_TubeRadius_0&apos; can be reduced." verbose="The scope of the variable &apos;i_TubeRadius_0&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCameraRead.cpp">
            <location file="src/VCameraRead.cpp" line="1294" column="16"/>
            <symbol>i_TubeRadius_0</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iRot&apos; can be reduced." verbose="The scope of the variable &apos;iRot&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VCameraRead.cpp">
            <location file="src/VCameraRead.cpp" line="1602" column="20"/>
            <symbol>iRot</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: i_temp" verbose="Unused variable: i_temp" cwe="563" file0="src/VCameraRead.cpp">
            <location file="src/VCameraRead.cpp" line="193" column="22"/>
            <symbol>i_temp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iDist&apos; is assigned a value that is never used." verbose="Variable &apos;iDist&apos; is assigned a value that is never used." cwe="563" file0="src/VCameraRead.cpp">
            <location file="src/VCameraRead.cpp" line="778" column="17"/>
            <symbol>iDist</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VCameraRead.cpp">
            <location file="src/VCameraRead.cpp" line="1510" column="70"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VCameraRead.cpp">
            <location file="src/VCameraRead.cpp" line="1536" column="45"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ConfigMaskDQM&apos; can be reduced." verbose="The scope of the variable &apos;ConfigMaskDQM&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDBRunInfo.cpp">
            <location file="src/VDBRunInfo.cpp" line="118" column="18"/>
            <symbol>ConfigMaskDQM</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ConfigMaskNew&apos; can be reduced." verbose="The scope of the variable &apos;ConfigMaskNew&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDBRunInfo.cpp">
            <location file="src/VDBRunInfo.cpp" line="119" column="18"/>
            <symbol>ConfigMaskNew</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!db_row&apos; is always false" verbose="Condition &apos;!db_row&apos; is always false" cwe="570" file0="src/VDB_PixelDataReader.cpp">
            <location file="src/VDB_PixelDataReader.cpp" line="175" column="17" info="Condition &apos;!db_row&apos; is always false"/>
            <location file="src/VDB_PixelDataReader.cpp" line="173" column="32" info="Assuming that condition &apos;db_row=db_res-&gt;Next()&apos; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!db_row&apos; is always false" verbose="Condition &apos;!db_row&apos; is always false" cwe="570" file0="src/VDB_PixelDataReader.cpp">
            <location file="src/VDB_PixelDataReader.cpp" line="220" column="21" info="Condition &apos;!db_row&apos; is always false"/>
            <location file="src/VDB_PixelDataReader.cpp" line="218" column="36" info="Assuming that condition &apos;db_row=db_res-&gt;Next()&apos; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!db_row&apos; is always false" verbose="Condition &apos;!db_row&apos; is always false" cwe="570" file0="src/VDB_PixelDataReader.cpp">
            <location file="src/VDB_PixelDataReader.cpp" line="271" column="21" info="Condition &apos;!db_row&apos; is always false"/>
            <location file="src/VDB_PixelDataReader.cpp" line="269" column="36" info="Assuming that condition &apos;db_row=db_res-&gt;Next()&apos; is not redundant"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VDB_PixelDataReader.cpp">
            <location file="src/VDB_PixelDataReader.cpp" line="37" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VDB_PixelDataReader.cpp">
            <location file="src/VDB_PixelDataReader.cpp" line="38" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VDB_PixelDataReader.cpp">
            <location file="src/VDB_PixelDataReader.cpp" line="256" column="9"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_rms&apos; can be reduced." verbose="The scope of the variable &apos;i_rms&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDB_PixelDataReader.cpp">
            <location file="src/VDB_PixelDataReader.cpp" line="505" column="12"/>
            <symbol>i_rms</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;c_queryS&apos; shadows outer variable" verbose="Local variable &apos;c_queryS&apos; shadows outer variable" cwe="398" file0="src/VDB_PixelDataReader.cpp">
            <location file="src/VDB_PixelDataReader.cpp" line="203" column="23" info="Shadow variable"/>
            <location file="src/VDB_PixelDataReader.cpp" line="158" column="19" info="Shadowed declaration"/>
            <symbol>c_queryS</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;db_res&apos; shadows outer variable" verbose="Local variable &apos;db_res&apos; shadows outer variable" cwe="398" file0="src/VDB_PixelDataReader.cpp">
            <location file="src/VDB_PixelDataReader.cpp" line="214" column="21" info="Shadow variable"/>
            <location file="src/VDB_PixelDataReader.cpp" line="169" column="17" info="Shadowed declaration"/>
            <symbol>db_res</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;db_res&apos; shadows outer variable" verbose="Local variable &apos;db_res&apos; shadows outer variable" cwe="398" file0="src/VDB_PixelDataReader.cpp">
            <location file="src/VDB_PixelDataReader.cpp" line="265" column="21" info="Shadow variable"/>
            <location file="src/VDB_PixelDataReader.cpp" line="169" column="17" info="Shadowed declaration"/>
            <symbol>db_res</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;theta2&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;theta2&apos; is reassigned a value before the old one has been used." cwe="563" file0="src/VDataMCComparision.cpp">
            <location file="src/VDataMCComparision.cpp" line="736" column="20" info="theta2 is overwritten"/>
            <location file="src/VDataMCComparision.cpp" line="731" column="16" info="theta2 is assigned"/>
            <symbol>theta2</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/VDataMCComparision.cpp">
            <location file="src/VDataMCComparision.cpp" line="807" column="22" info="Shadow variable"/>
            <location file="src/VDataMCComparision.cpp" line="649" column="14" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VDataMCComparision.cpp">
            <location file="src/VDataMCComparision.cpp" line="383" column="140"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VDeadTime.cpp">
            <location file="src/VDeadTime.cpp" line="174" column="9" info="Second condition"/>
            <location file="src/VDeadTime.cpp" line="169" column="9" info="First condition"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x1&apos; can be reduced." verbose="The scope of the variable &apos;x1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="491" column="15"/>
            <symbol>x1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x2&apos; can be reduced." verbose="The scope of the variable &apos;x2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="492" column="15"/>
            <symbol>x2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y1&apos; can be reduced." verbose="The scope of the variable &apos;y1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="493" column="15"/>
            <symbol>y1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y2&apos; can be reduced." verbose="The scope of the variable &apos;y2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="494" column="15"/>
            <symbol>y2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x5&apos; is assigned a value that is never used." verbose="Variable &apos;x5&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="269" column="18"/>
            <symbol>x5</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x6&apos; is assigned a value that is never used." verbose="Variable &apos;x6&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="270" column="18"/>
            <symbol>x6</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y5&apos; is assigned a value that is never used." verbose="Variable &apos;y5&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="275" column="18"/>
            <symbol>y5</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y6&apos; is assigned a value that is never used." verbose="Variable &apos;y6&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="276" column="18"/>
            <symbol>y6</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x1&apos; is assigned a value that is never used." verbose="Variable &apos;x1&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="491" column="18"/>
            <symbol>x1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x2&apos; is assigned a value that is never used." verbose="Variable &apos;x2&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="492" column="18"/>
            <symbol>x2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y1&apos; is assigned a value that is never used." verbose="Variable &apos;y1&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="493" column="18"/>
            <symbol>y1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y2&apos; is assigned a value that is never used." verbose="Variable &apos;y2&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="494" column="18"/>
            <symbol>y2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;disp&apos; is assigned a value that is never used." verbose="Variable &apos;disp&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="636" column="16"/>
            <symbol>disp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;w&apos; is assigned a value that is never used." verbose="Variable &apos;w&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="971" column="14"/>
            <symbol>w</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;w&apos; is assigned a value that is never used." verbose="Variable &apos;w&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="980" column="15"/>
            <symbol>w</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;m&apos; is assigned a value that is never used." verbose="Variable &apos;m&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="1165" column="13"/>
            <symbol>m</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;theta&apos; is assigned a value that is never used." verbose="Variable &apos;theta&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="1166" column="17"/>
            <symbol>theta</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="1167" column="13"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="1168" column="13"/>
            <symbol>y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x1&apos; is assigned a value that is never used." verbose="Variable &apos;x1&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="1169" column="14"/>
            <symbol>x1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x2&apos; is assigned a value that is never used." verbose="Variable &apos;x2&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="1170" column="14"/>
            <symbol>x2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y1&apos; is assigned a value that is never used." verbose="Variable &apos;y1&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="1171" column="14"/>
            <symbol>y1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y2&apos; is assigned a value that is never used." verbose="Variable &apos;y2&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="1172" column="14"/>
            <symbol>y2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iweight&apos; is assigned a value that is never used." verbose="Variable &apos;iweight&apos; is assigned a value that is never used." cwe="563" file0="src/VDispAnalyzer.cpp">
            <location file="src/VDispAnalyzer.cpp" line="1174" column="19"/>
            <symbol>iweight</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VDispTable.cpp">
            <location file="src/VDispTable.cpp" line="381" column="9"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x1&apos; can be reduced." verbose="The scope of the variable &apos;x1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDispTableAnalyzer.cpp">
            <location file="src/VDispTableAnalyzer.cpp" line="427" column="11"/>
            <symbol>x1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x2&apos; can be reduced." verbose="The scope of the variable &apos;x2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDispTableAnalyzer.cpp">
            <location file="src/VDispTableAnalyzer.cpp" line="428" column="11"/>
            <symbol>x2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y1&apos; can be reduced." verbose="The scope of the variable &apos;y1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDispTableAnalyzer.cpp">
            <location file="src/VDispTableAnalyzer.cpp" line="429" column="11"/>
            <symbol>y1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y2&apos; can be reduced." verbose="The scope of the variable &apos;y2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDispTableAnalyzer.cpp">
            <location file="src/VDispTableAnalyzer.cpp" line="430" column="11"/>
            <symbol>y2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iSign&apos; is assigned a value that is never used." verbose="Variable &apos;iSign&apos; is assigned a value that is never used." cwe="563" file0="src/VDispTableAnalyzer.cpp">
            <location file="src/VDispTableAnalyzer.cpp" line="324" column="17"/>
            <symbol>iSign</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x1&apos; is assigned a value that is never used." verbose="Variable &apos;x1&apos; is assigned a value that is never used." cwe="563" file0="src/VDispTableAnalyzer.cpp">
            <location file="src/VDispTableAnalyzer.cpp" line="427" column="14"/>
            <symbol>x1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x2&apos; is assigned a value that is never used." verbose="Variable &apos;x2&apos; is assigned a value that is never used." cwe="563" file0="src/VDispTableAnalyzer.cpp">
            <location file="src/VDispTableAnalyzer.cpp" line="428" column="14"/>
            <symbol>x2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y1&apos; is assigned a value that is never used." verbose="Variable &apos;y1&apos; is assigned a value that is never used." cwe="563" file0="src/VDispTableAnalyzer.cpp">
            <location file="src/VDispTableAnalyzer.cpp" line="429" column="14"/>
            <symbol>y1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y2&apos; is assigned a value that is never used." verbose="Variable &apos;y2&apos; is assigned a value that is never used." cwe="563" file0="src/VDispTableAnalyzer.cpp">
            <location file="src/VDispTableAnalyzer.cpp" line="430" column="14"/>
            <symbol>y2</symbol>
        </error>
        <error id="arrayIndexThenCheck" severity="style" msg="Array index &apos;j&apos; is used before limits check." verbose="Defensive programming: The variable &apos;j&apos; is used as an array index before it is checked that is within limits. This can mean that the array might be accessed out of bounds. Reorder conditions such as &apos;(a[i] &amp;&amp; i &lt; 10)&apos; to &apos;(i &lt; 10 &amp;&amp; a[i])&apos;. That way the array will not be accessed if the index is out of limits." cwe="398" file0="src/VDisplay.cpp">
            <location file="src/VDisplay.cpp" line="547" column="38"/>
            <symbol>j</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;xgraph&apos; is always true" verbose="Condition &apos;xgraph&apos; is always true" cwe="571" file0="src/VDisplay.cpp">
            <location file="src/VDisplay.cpp" line="2237" column="9" info="Condition &apos;xgraph&apos; is always true"/>
            <location file="src/VDisplay.cpp" line="2134" column="9" info="Assuming that condition &apos;!xgraph&apos; is not redundant"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;y_min&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;y_min&apos; is reassigned a value before the old one has been used." cwe="563" file0="src/VDisplay.cpp">
            <location file="src/VDisplay.cpp" line="2197" column="11" info="y_min is overwritten"/>
            <location file="src/VDisplay.cpp" line="2189" column="15" info="y_min is assigned"/>
            <symbol>y_min</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iSelect&apos; can be reduced." verbose="The scope of the variable &apos;iSelect&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDisplay.cpp">
            <location file="src/VDisplay.cpp" line="562" column="22"/>
            <symbol>iSelect</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iTraceFits&apos; can be reduced." verbose="The scope of the variable &apos;iTraceFits&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDisplay.cpp">
            <location file="src/VDisplay.cpp" line="871" column="11"/>
            <symbol>iTraceFits</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;yE&apos; can be reduced." verbose="The scope of the variable &apos;yE&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VDisplay.cpp">
            <location file="src/VDisplay.cpp" line="2147" column="12"/>
            <symbol>yE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iSelect&apos; is assigned a value that is never used." verbose="Variable &apos;iSelect&apos; is assigned a value that is never used." cwe="563" file0="src/VDisplay.cpp">
            <location file="src/VDisplay.cpp" line="562" column="30"/>
            <symbol>iSelect</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;yE&apos; is assigned a value that is never used." verbose="Variable &apos;yE&apos; is assigned a value that is never used." cwe="563" file0="src/VDisplay.cpp">
            <location file="src/VDisplay.cpp" line="2147" column="15"/>
            <symbol>yE</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VDisplay.cpp">
            <location file="src/VDisplay.cpp" line="3409" column="97"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VDisplay.cpp">
            <location file="src/VDisplay.cpp" line="3418" column="117"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VDisplay.cpp">
            <location file="src/VDisplay.cpp" line="3427" column="101"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_x1&apos; is assigned a value that is never used." verbose="Variable &apos;i_x1&apos; is assigned a value that is never used." cwe="563" file0="src/VDisplayBirdsEye.cpp">
            <location file="src/VDisplayBirdsEye.cpp" line="350" column="16"/>
            <symbol>i_x1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_y1&apos; is assigned a value that is never used." verbose="Variable &apos;i_y1&apos; is assigned a value that is never used." cwe="563" file0="src/VDisplayBirdsEye.cpp">
            <location file="src/VDisplayBirdsEye.cpp" line="351" column="16"/>
            <symbol>i_y1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_x2&apos; is assigned a value that is never used." verbose="Variable &apos;i_x2&apos; is assigned a value that is never used." cwe="563" file0="src/VDisplayBirdsEye.cpp">
            <location file="src/VDisplayBirdsEye.cpp" line="352" column="16"/>
            <symbol>i_x2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_y2&apos; is assigned a value that is never used." verbose="Variable &apos;i_y2&apos; is assigned a value that is never used." cwe="563" file0="src/VDisplayBirdsEye.cpp">
            <location file="src/VDisplayBirdsEye.cpp" line="353" column="16"/>
            <symbol>i_y2</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VEffectiveAreaCalculator.cpp">
            <location file="src/VEffectiveAreaCalculator.cpp" line="1612" column="13" info="Second condition"/>
            <location file="src/VEffectiveAreaCalculator.cpp" line="1605" column="13" info="First condition"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VEffectiveAreaCalculator.cpp">
            <location file="src/VEffectiveAreaCalculator.cpp" line="434" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VEffectiveAreaCalculator.cpp">
            <location file="src/VEffectiveAreaCalculator.cpp" line="458" column="9"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pj&apos; is assigned a value that is never used." verbose="Variable &apos;pj&apos; is assigned a value that is never used." cwe="563" file0="src/VEffectiveAreaCalculator.cpp">
            <location file="src/VEffectiveAreaCalculator.cpp" line="2680" column="15"/>
            <symbol>pj</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pr&apos; is assigned a value that is never used." verbose="Variable &apos;pr&apos; is assigned a value that is never used." cwe="563" file0="src/VEffectiveAreaCalculator.cpp">
            <location file="src/VEffectiveAreaCalculator.cpp" line="2681" column="15"/>
            <symbol>pr</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pm&apos; is assigned a value that is never used." verbose="Variable &apos;pm&apos; is assigned a value that is never used." cwe="563" file0="src/VEffectiveAreaCalculator.cpp">
            <location file="src/VEffectiveAreaCalculator.cpp" line="2682" column="15"/>
            <symbol>pm</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sj&apos; is assigned a value that is never used." verbose="Variable &apos;sj&apos; is assigned a value that is never used." cwe="563" file0="src/VEffectiveAreaCalculator.cpp">
            <location file="src/VEffectiveAreaCalculator.cpp" line="2683" column="15"/>
            <symbol>sj</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VEffectiveAreaCalculator.cpp">
            <location file="src/VEffectiveAreaCalculator.cpp" line="518" column="16"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VEffectiveAreaCalculator.cpp">
            <location file="src/VEffectiveAreaCalculator.cpp" line="529" column="16"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VEffectiveAreaCalculator.cpp">
            <location file="src/VEffectiveAreaCalculator.cpp" line="540" column="16"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;ihVEmc_new&apos; shadows outer variable" verbose="Local variable &apos;ihVEmc_new&apos; shadows outer variable" cwe="398" file0="src/VEffectiveAreaCalculatorMCHistograms.cpp">
            <location file="src/VEffectiveAreaCalculatorMCHistograms.cpp" line="640" column="25" info="Shadow variable"/>
            <location file="src/VEffectiveAreaCalculatorMCHistograms.cpp" line="587" column="31" info="Shadowed declaration"/>
            <symbol>ihVEmc_new</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;iVEmcSWeight_new&apos; shadows outer variable" verbose="Local variable &apos;iVEmcSWeight_new&apos; shadows outer variable" cwe="398" file0="src/VEffectiveAreaCalculatorMCHistograms.cpp">
            <location file="src/VEffectiveAreaCalculatorMCHistograms.cpp" line="641" column="29" info="Shadow variable"/>
            <location file="src/VEffectiveAreaCalculatorMCHistograms.cpp" line="588" column="35" info="Shadowed declaration"/>
            <symbol>iVEmcSWeight_new</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iEmissionHeightWeightTemp&apos; is assigned a value that is never used." verbose="Variable &apos;iEmissionHeightWeightTemp&apos; is assigned a value that is never used." cwe="563" file0="src/VEmissionHeightCalculator.cpp">
            <location file="src/VEmissionHeightCalculator.cpp" line="29" column="38"/>
            <symbol>iEmissionHeightWeightTemp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iEmissionHeightTemp&apos; is assigned a value that is never used." verbose="Variable &apos;iEmissionHeightTemp&apos; is assigned a value that is never used." cwe="563" file0="src/VEmissionHeightCalculator.cpp">
            <location file="src/VEmissionHeightCalculator.cpp" line="31" column="32"/>
            <symbol>iEmissionHeightTemp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fTelescopeDistanceSC&apos; is assigned a value that is never used." verbose="Variable &apos;fTelescopeDistanceSC&apos; is assigned a value that is never used." cwe="563" file0="src/VEmissionHeightCalculator.cpp">
            <location file="src/VEmissionHeightCalculator.cpp" line="34" column="33"/>
            <symbol>fTelescopeDistanceSC</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fImageDistance&apos; is assigned a value that is never used." verbose="Variable &apos;fImageDistance&apos; is assigned a value that is never used." cwe="563" file0="src/VEmissionHeightCalculator.cpp">
            <location file="src/VEmissionHeightCalculator.cpp" line="35" column="27"/>
            <symbol>fImageDistance</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="482" column="16" info="Second condition"/>
            <location file="src/VEnergySpectrum.cpp" line="477" column="16" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1090" column="16" info="Second condition"/>
            <location file="src/VEnergySpectrum.cpp" line="1076" column="16" info="First condition"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;&amp;&amp;&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="211" column="51"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hNull&apos; can be reduced." verbose="The scope of the variable &apos;hNull&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1155" column="11"/>
            <symbol>hNull</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;x&apos; shadows outer variable" verbose="Local variable &apos;x&apos; shadows outer variable" cwe="398" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="786" column="16" info="Shadow variable"/>
            <location file="src/VEnergySpectrum.cpp" line="741" column="12" info="Shadowed declaration"/>
            <symbol>x</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;h&apos; shadows outer variable" verbose="Local variable &apos;h&apos; shadows outer variable" cwe="398" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1794" column="15" info="Shadow variable"/>
            <location file="src/VEnergySpectrum.cpp" line="1760" column="11" info="Shadowed declaration"/>
            <symbol>h</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hNull&apos; is assigned a value that is never used." verbose="Variable &apos;hNull&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1155" column="17"/>
            <symbol>hNull</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_ecutoffV&apos; is assigned a value that is never used." verbose="Variable &apos;i_ecutoffV&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1488" column="23"/>
            <symbol>i_ecutoffV</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_ecutoffE&apos; is assigned a value that is never used." verbose="Variable &apos;i_ecutoffE&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1489" column="23"/>
            <symbol>i_ecutoffE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_curvatureV&apos; is assigned a value that is never used." verbose="Variable &apos;i_curvatureV&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1491" column="25"/>
            <symbol>i_curvatureV</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_curvatureE&apos; is assigned a value that is never used." verbose="Variable &apos;i_curvatureE&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1492" column="25"/>
            <symbol>i_curvatureE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_breakenergyV&apos; is assigned a value that is never used." verbose="Variable &apos;i_breakenergyV&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1494" column="27"/>
            <symbol>i_breakenergyV</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_breakenergyE&apos; is assigned a value that is never used." verbose="Variable &apos;i_breakenergyE&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1495" column="27"/>
            <symbol>i_breakenergyE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_index2V&apos; is assigned a value that is never used." verbose="Variable &apos;i_index2V&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1496" column="22"/>
            <symbol>i_index2V</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_index2E&apos; is assigned a value that is never used." verbose="Variable &apos;i_index2E&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1497" column="22"/>
            <symbol>i_index2E</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ye_l&apos; is assigned a value that is never used." verbose="Variable &apos;ye_l&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1588" column="17"/>
            <symbol>ye_l</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ye_u&apos; is assigned a value that is never used." verbose="Variable &apos;ye_u&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrum.cpp">
            <location file="src/VEnergySpectrum.cpp" line="1589" column="17"/>
            <symbol>ye_u</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ymin&apos; can be reduced." verbose="The scope of the variable &apos;ymin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergySpectrumfromLiterature.cpp">
            <location file="src/VEnergySpectrumfromLiterature.cpp" line="278" column="12"/>
            <symbol>ymin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ymax&apos; can be reduced." verbose="The scope of the variable &apos;ymax&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergySpectrumfromLiterature.cpp">
            <location file="src/VEnergySpectrumfromLiterature.cpp" line="279" column="12"/>
            <symbol>ymax</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;h_exponent&apos; can be reduced." verbose="The scope of the variable &apos;h_exponent&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergySpectrumfromLiterature.cpp">
            <location file="src/VEnergySpectrumfromLiterature.cpp" line="399" column="10"/>
            <symbol>h_exponent</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hname&apos; can be reduced." verbose="The scope of the variable &apos;hname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergySpectrumfromLiterature.cpp">
            <location file="src/VEnergySpectrumfromLiterature.cpp" line="666" column="10"/>
            <symbol>hname</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;htitle&apos; can be reduced." verbose="The scope of the variable &apos;htitle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergySpectrumfromLiterature.cpp">
            <location file="src/VEnergySpectrumfromLiterature.cpp" line="667" column="10"/>
            <symbol>htitle</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hNull&apos; can be reduced." verbose="The scope of the variable &apos;hNull&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergySpectrumfromLiterature.cpp">
            <location file="src/VEnergySpectrumfromLiterature.cpp" line="668" column="11"/>
            <symbol>hNull</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrumfromLiterature.cpp">
            <location file="src/VEnergySpectrumfromLiterature.cpp" line="277" column="14"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ymin&apos; is assigned a value that is never used." verbose="Variable &apos;ymin&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrumfromLiterature.cpp">
            <location file="src/VEnergySpectrumfromLiterature.cpp" line="278" column="17"/>
            <symbol>ymin</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ymax&apos; is assigned a value that is never used." verbose="Variable &apos;ymax&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrumfromLiterature.cpp">
            <location file="src/VEnergySpectrumfromLiterature.cpp" line="279" column="17"/>
            <symbol>ymax</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hNull&apos; is assigned a value that is never used." verbose="Variable &apos;hNull&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergySpectrumfromLiterature.cpp">
            <location file="src/VEnergySpectrumfromLiterature.cpp" line="668" column="17"/>
            <symbol>hNull</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_npoints&apos; can be reduced." verbose="The scope of the variable &apos;i_npoints&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="716" column="18"/>
            <symbol>i_npoints</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_logE_min&apos; can be reduced." verbose="The scope of the variable &apos;i_logE_min&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="717" column="12"/>
            <symbol>i_logE_min</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_logE_max&apos; can be reduced." verbose="The scope of the variable &apos;i_logE_max&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="718" column="12"/>
            <symbol>i_logE_max</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_EffA&apos; can be reduced." verbose="The scope of the variable &apos;i_EffA&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="719" column="12"/>
            <symbol>i_EffA</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_DiffFlux&apos; can be reduced." verbose="The scope of the variable &apos;i_DiffFlux&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="720" column="12"/>
            <symbol>i_DiffFlux</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;a&apos; can be reduced." verbose="The scope of the variable &apos;a&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="726" column="16"/>
            <symbol>a</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;b&apos; can be reduced." verbose="The scope of the variable &apos;b&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="726" column="19"/>
            <symbol>b</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_maxFlux&apos; can be reduced." verbose="The scope of the variable &apos;i_maxFlux&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="728" column="16"/>
            <symbol>i_maxFlux</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_maxEnergy&apos; can be reduced." verbose="The scope of the variable &apos;i_maxEnergy&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="729" column="16"/>
            <symbol>i_maxEnergy</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;e&apos; can be reduced." verbose="The scope of the variable &apos;e&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="738" column="20"/>
            <symbol>e</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;c&apos; is assigned a value that is never used." verbose="Variable &apos;c&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="620" column="16"/>
            <symbol>c</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_logE_min&apos; is assigned a value that is never used." verbose="Variable &apos;i_logE_min&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="717" column="23"/>
            <symbol>i_logE_min</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_logE_max&apos; is assigned a value that is never used." verbose="Variable &apos;i_logE_max&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="718" column="23"/>
            <symbol>i_logE_max</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_EffA&apos; is assigned a value that is never used." verbose="Variable &apos;i_EffA&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="719" column="19"/>
            <symbol>i_EffA</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_DiffFlux&apos; is assigned a value that is never used." verbose="Variable &apos;i_DiffFlux&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="720" column="23"/>
            <symbol>i_DiffFlux</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;e&apos; is assigned a value that is never used." verbose="Variable &apos;e&apos; is assigned a value that is never used." cwe="563" file0="src/VEnergyThreshold.cpp">
            <location file="src/VEnergyThreshold.cpp" line="738" column="22"/>
            <symbol>e</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;i_res&apos; is always true" verbose="Condition &apos;i_res&apos; is always true" cwe="571" file0="src/VEventLoop.cpp">
            <location file="src/VEventLoop.cpp" line="932" column="13" info="Condition &apos;i_res&apos; is always true"/>
            <location file="src/VEventLoop.cpp" line="926" column="13" info="Assuming that condition &apos;!i_res&apos; is not redundant"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iNMethods&apos; can be reduced." verbose="The scope of the variable &apos;iNMethods&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VEvndispData.cpp">
            <location file="src/VEvndispData.cpp" line="328" column="18"/>
            <symbol>iNMethods</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iNMethods&apos; is assigned a value that is never used." verbose="Variable &apos;iNMethods&apos; is assigned a value that is never used." cwe="563" file0="src/VEvndispData.cpp">
            <location file="src/VEvndispData.cpp" line="328" column="28"/>
            <symbol>iNMethods</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!iArrayCut&apos; is always true" verbose="Condition &apos;!iArrayCut&apos; is always true" cwe="571" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="215" column="25" info="Condition &apos;!iArrayCut&apos; is always true"/>
            <location file="src/VEvndispReconstructionParameter.cpp" line="207" column="33" info="Assignment &apos;iArrayCut=false&apos;, assigned value is 0"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;t_temp&apos; is assigned a value that is never used." verbose="Variable &apos;t_temp&apos; is assigned a value that is never used." cwe="563" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1195" column="16"/>
            <symbol>t_temp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;v&apos; is assigned a value that is never used." verbose="Variable &apos;v&apos; is assigned a value that is never used." cwe="563" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1443" column="17"/>
            <symbol>v</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;v&apos; is assigned a value that is never used." verbose="Variable &apos;v&apos; is assigned a value that is never used." cwe="563" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1473" column="17"/>
            <symbol>v</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;v2&apos; is assigned a value that is never used." verbose="Variable &apos;v2&apos; is assigned a value that is never used." cwe="563" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1474" column="18"/>
            <symbol>v2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;v&apos; is assigned a value that is never used." verbose="Variable &apos;v&apos; is assigned a value that is never used." cwe="563" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1519" column="17"/>
            <symbol>v</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;v&apos; is assigned a value that is never used." verbose="Variable &apos;v&apos; is assigned a value that is never used." cwe="563" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1551" column="17"/>
            <symbol>v</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;v2&apos; is assigned a value that is never used." verbose="Variable &apos;v2&apos; is assigned a value that is never used." cwe="563" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1552" column="18"/>
            <symbol>v2</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="42" column="81"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1426" column="81"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1445" column="81"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1476" column="81"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1502" column="81"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VEvndispReconstructionParameter.cpp">
            <location file="src/VEvndispReconstructionParameter.cpp" line="1522" column="81"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="134" column="13" info="Second condition"/>
            <location file="src/VExposure.cpp" line="130" column="13" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="303" column="13" info="Second condition"/>
            <location file="src/VExposure.cpp" line="299" column="13" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="341" column="13" info="Second condition"/>
            <location file="src/VExposure.cpp" line="337" column="13" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="463" column="13" info="Second condition"/>
            <location file="src/VExposure.cpp" line="458" column="13" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="635" column="13" info="Second condition"/>
            <location file="src/VExposure.cpp" line="631" column="13" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="717" column="13" info="Second condition"/>
            <location file="src/VExposure.cpp" line="712" column="13" info="First condition"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!db_row&apos; is always false" verbose="Condition &apos;!db_row&apos; is always false" cwe="570" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="2973" column="17" info="Condition &apos;!db_row&apos; is always false"/>
            <location file="src/VExposure.cpp" line="2971" column="32" info="Assuming that condition &apos;db_row=db_res-&gt;Next()&apos; is not redundant"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;fconfig&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;fconfig&apos; is reassigned a value before the old one has been used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="2347" column="21" info="fconfig is overwritten"/>
            <location file="src/VExposure.cpp" line="2285" column="17" info="fconfig is assigned"/>
            <symbol>fconfig</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;xl&apos; can be reduced." verbose="The scope of the variable &apos;xl&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="995" column="12"/>
            <symbol>xl</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;xl&apos; can be reduced." verbose="The scope of the variable &apos;xl&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1105" column="12"/>
            <symbol>xl</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1371" column="12"/>
            <symbol>l</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;b&apos; can be reduced." verbose="The scope of the variable &apos;b&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1372" column="12"/>
            <symbol>b</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;r_dist&apos; can be reduced." verbose="The scope of the variable &apos;r_dist&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1839" column="12"/>
            <symbol>r_dist</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iDiff&apos; can be reduced." verbose="The scope of the variable &apos;iDiff&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="2080" column="12"/>
            <symbol>iDiff</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;l&apos; shadows outer variable" verbose="Local variable &apos;l&apos; shadows outer variable" cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1083" column="22" info="Shadow variable"/>
            <location file="src/VExposure.cpp" line="1039" column="16" info="Shadowed declaration"/>
            <symbol>l</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;k&apos; shadows outer variable" verbose="Local variable &apos;k&apos; shadows outer variable" cwe="398" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="2205" column="13" info="Shadow variable"/>
            <location file="src/VExposure.cpp" line="2104" column="9" info="Shadowed declaration"/>
            <symbol>k</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;xl&apos; is assigned a value that is never used." verbose="Variable &apos;xl&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="995" column="15"/>
            <symbol>xl</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;xb&apos; is assigned a value that is never used." verbose="Variable &apos;xb&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="996" column="15"/>
            <symbol>xb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bl&apos; is assigned a value that is never used." verbose="Variable &apos;bl&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="997" column="12"/>
            <symbol>bl</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bb&apos; is assigned a value that is never used." verbose="Variable &apos;bb&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="998" column="12"/>
            <symbol>bb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;r_dist&apos; is assigned a value that is never used." verbose="Variable &apos;r_dist&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1033" column="19"/>
            <symbol>r_dist</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;xl&apos; is assigned a value that is never used." verbose="Variable &apos;xl&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1105" column="15"/>
            <symbol>xl</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;xb&apos; is assigned a value that is never used." verbose="Variable &apos;xb&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1106" column="15"/>
            <symbol>xb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bl&apos; is assigned a value that is never used." verbose="Variable &apos;bl&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1107" column="12"/>
            <symbol>bl</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bb&apos; is assigned a value that is never used." verbose="Variable &apos;bb&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1108" column="12"/>
            <symbol>bb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ra&apos; is assigned a value that is never used." verbose="Variable &apos;ra&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1341" column="15"/>
            <symbol>ra</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;dec&apos; is assigned a value that is never used." verbose="Variable &apos;dec&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1342" column="16"/>
            <symbol>dec</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;l_name&apos; is assigned a value that is never used." verbose="Variable &apos;l_name&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1343" column="19"/>
            <symbol>l_name</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;l&apos; is assigned a value that is never used." verbose="Variable &apos;l&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1371" column="14"/>
            <symbol>l</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;b&apos; is assigned a value that is never used." verbose="Variable &apos;b&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1372" column="14"/>
            <symbol>b</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;l_name&apos; is assigned a value that is never used." verbose="Variable &apos;l_name&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1373" column="19"/>
            <symbol>l_name</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;r_centre&apos; is assigned a value that is never used." verbose="Variable &apos;r_centre&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1691" column="21"/>
            <symbol>r_centre</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;r_dist&apos; is assigned a value that is never used." verbose="Variable &apos;r_dist&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="1839" column="19"/>
            <symbol>r_dist</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iDiff&apos; is assigned a value that is never used." verbose="Variable &apos;iDiff&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="2080" column="18"/>
            <symbol>iDiff</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;itemp&apos; is assigned a value that is never used." verbose="Variable &apos;itemp&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="2105" column="15"/>
            <symbol>itemp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;k&apos; is assigned a value that is never used." verbose="Variable &apos;k&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="2205" column="15"/>
            <symbol>k</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;checksum&apos; is assigned a value that is never used." verbose="Variable &apos;checksum&apos; is assigned a value that is never used." cwe="563" file0="src/VExposure.cpp">
            <location file="src/VExposure.cpp" line="2748" column="22"/>
            <symbol>checksum</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;tType[h]&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;tType[h]&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628" file0="src/VFITS.cpp">
            <location file="src/VFITS.cpp" line="1303" column="50"/>
            <symbol>tType[h]</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iP&apos; can be reduced." verbose="The scope of the variable &apos;iP&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VFluxAndLightCurveUtilities.cpp">
            <location file="src/VFluxAndLightCurveUtilities.cpp" line="113" column="12"/>
            <symbol>iP</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iP&apos; is assigned a value that is never used." verbose="Variable &apos;iP&apos; is assigned a value that is never used." cwe="563" file0="src/VFluxAndLightCurveUtilities.cpp">
            <location file="src/VFluxAndLightCurveUtilities.cpp" line="113" column="15"/>
            <symbol>iP</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ieff_mean&apos; can be reduced." verbose="The scope of the variable &apos;ieff_mean&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VFluxDataPoint.cpp">
            <location file="src/VFluxDataPoint.cpp" line="373" column="12"/>
            <symbol>ieff_mean</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;e0&apos; can be reduced." verbose="The scope of the variable &apos;e0&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VFluxDataPoint.cpp">
            <location file="src/VFluxDataPoint.cpp" line="374" column="12"/>
            <symbol>e0</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;e1&apos; can be reduced." verbose="The scope of the variable &apos;e1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VFluxDataPoint.cpp">
            <location file="src/VFluxDataPoint.cpp" line="375" column="12"/>
            <symbol>e1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;e2&apos; can be reduced." verbose="The scope of the variable &apos;e2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VFluxDataPoint.cpp">
            <location file="src/VFluxDataPoint.cpp" line="376" column="12"/>
            <symbol>e2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ieff_mean&apos; is assigned a value that is never used." verbose="Variable &apos;ieff_mean&apos; is assigned a value that is never used." cwe="563" file0="src/VFluxDataPoint.cpp">
            <location file="src/VFluxDataPoint.cpp" line="373" column="22"/>
            <symbol>ieff_mean</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;e0&apos; is assigned a value that is never used." verbose="Variable &apos;e0&apos; is assigned a value that is never used." cwe="563" file0="src/VFluxDataPoint.cpp">
            <location file="src/VFluxDataPoint.cpp" line="374" column="15"/>
            <symbol>e0</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;e1&apos; is assigned a value that is never used." verbose="Variable &apos;e1&apos; is assigned a value that is never used." cwe="563" file0="src/VFluxDataPoint.cpp">
            <location file="src/VFluxDataPoint.cpp" line="375" column="15"/>
            <symbol>e1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;e2&apos; is assigned a value that is never used." verbose="Variable &apos;e2&apos; is assigned a value that is never used." cwe="563" file0="src/VFluxDataPoint.cpp">
            <location file="src/VFluxDataPoint.cpp" line="376" column="15"/>
            <symbol>e2</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VGammaHadronCuts.cpp">
            <location file="src/VGammaHadronCuts.cpp" line="2632" column="87"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;totweight&apos; can be reduced." verbose="The scope of the variable &apos;totweight&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="246" column="11"/>
            <symbol>totweight</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;a1&apos; can be reduced." verbose="The scope of the variable &apos;a1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="247" column="11"/>
            <symbol>a1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;a2&apos; can be reduced." verbose="The scope of the variable &apos;a2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="248" column="11"/>
            <symbol>a2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;b1&apos; can be reduced." verbose="The scope of the variable &apos;b1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="249" column="11"/>
            <symbol>b1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;b2&apos; can be reduced." verbose="The scope of the variable &apos;b2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="250" column="11"/>
            <symbol>b2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c1&apos; can be reduced." verbose="The scope of the variable &apos;c1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="251" column="11"/>
            <symbol>c1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c2&apos; can be reduced." verbose="The scope of the variable &apos;c2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="252" column="11"/>
            <symbol>c2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;gamma&apos; can be reduced." verbose="The scope of the variable &apos;gamma&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="253" column="11"/>
            <symbol>gamma</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;D&apos; can be reduced." verbose="The scope of the variable &apos;D&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="254" column="11"/>
            <symbol>D</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;m2&apos; can be reduced." verbose="The scope of the variable &apos;m2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="255" column="11"/>
            <symbol>m2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;d&apos; can be reduced." verbose="The scope of the variable &apos;d&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="256" column="11"/>
            <symbol>d</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;gamma&apos; is assigned a value that is never used." verbose="Variable &apos;gamma&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="253" column="17"/>
            <symbol>gamma</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;D&apos; is assigned a value that is never used." verbose="Variable &apos;D&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="254" column="13"/>
            <symbol>D</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;m2&apos; is assigned a value that is never used." verbose="Variable &apos;m2&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="255" column="14"/>
            <symbol>m2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;d&apos; is assigned a value that is never used." verbose="Variable &apos;d&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuAnalyzer.cpp">
            <location file="src/VGrIsuAnalyzer.cpp" line="256" column="13"/>
            <symbol>d</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="321" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="321" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="382" column="5"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1231" column="13"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iTemp&apos; can be reduced." verbose="The scope of the variable &apos;iTemp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1416" column="34"/>
            <symbol>iTemp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iPix&apos; can be reduced." verbose="The scope of the variable &apos;iPix&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1544" column="17"/>
            <symbol>iPix</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iNboard&apos; can be reduced." verbose="The scope of the variable &apos;iNboard&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1566" column="22"/>
            <symbol>iNboard</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iPix&apos; can be reduced." verbose="The scope of the variable &apos;iPix&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1570" column="17"/>
            <symbol>iPix</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i_telID&apos; shadows outer variable" verbose="Local variable &apos;i_telID&apos; shadows outer variable" cwe="398" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="484" column="23" info="Shadow variable"/>
            <location file="src/VGrIsuReader.cpp" line="469" column="18" info="Shadowed declaration"/>
            <symbol>i_telID</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i_telID&apos; shadows outer variable" verbose="Local variable &apos;i_telID&apos; shadows outer variable" cwe="398" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="504" column="39" info="Shadow variable"/>
            <location file="src/VGrIsuReader.cpp" line="469" column="18" info="Shadowed declaration"/>
            <symbol>i_telID</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_telID&apos; is assigned a value that is never used." verbose="Variable &apos;i_telID&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="469" column="26"/>
            <symbol>i_telID</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;meanRMS2&apos; is assigned a value that is never used." verbose="Variable &apos;meanRMS2&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="476" column="21"/>
            <symbol>meanRMS2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iPStart&apos; is assigned a value that is never used." verbose="Variable &apos;iPStart&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="696" column="26"/>
            <symbol>iPStart</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;is_line&apos; is assigned a value that is never used." verbose="Variable &apos;is_line&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="746" column="20"/>
            <symbol>is_line</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_traceValue&apos; is assigned a value that is never used." verbose="Variable &apos;i_traceValue&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1315" column="22"/>
            <symbol>i_traceValue</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_newPed&apos; is assigned a value that is never used." verbose="Variable &apos;i_newPed&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1316" column="21"/>
            <symbol>i_newPed</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_newPedN&apos; is assigned a value that is never used." verbose="Variable &apos;i_newPedN&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1317" column="19"/>
            <symbol>i_newPedN</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_newPed&apos; is assigned a value that is never used." verbose="Variable &apos;i_newPed&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1327" column="22"/>
            <symbol>i_newPed</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_traceValue&apos; is assigned a value that is never used." verbose="Variable &apos;i_traceValue&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1331" column="30"/>
            <symbol>i_traceValue</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_newPed&apos; is assigned a value that is never used." verbose="Variable &apos;i_newPed&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1352" column="38"/>
            <symbol>i_newPed</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_newPed&apos; is assigned a value that is never used." verbose="Variable &apos;i_newPed&apos; is assigned a value that is never used." cwe="563" file0="src/VGrIsuReader.cpp">
            <location file="src/VGrIsuReader.cpp" line="1371" column="38"/>
            <symbol>i_newPed</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;nBinY_min&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;nBinY_min&apos; is reassigned a value before the old one has been used." cwe="563" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="990" column="15" info="nBinY_min is overwritten"/>
            <location file="src/VHistogramUtilities.cpp" line="987" column="19" info="nBinY_min is assigned"/>
            <symbol>nBinY_min</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_sum&apos; can be reduced." verbose="The scope of the variable &apos;i_sum&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="318" column="12"/>
            <symbol>i_sum</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nbin&apos; can be reduced." verbose="The scope of the variable &apos;nbin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="429" column="9"/>
            <symbol>nbin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;xmin&apos; can be reduced." verbose="The scope of the variable &apos;xmin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="430" column="12"/>
            <symbol>xmin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;xmax&apos; can be reduced." verbose="The scope of the variable &apos;xmax&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="431" column="12"/>
            <symbol>xmax</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;h2D&apos; can be reduced." verbose="The scope of the variable &apos;h2D&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="649" column="11"/>
            <symbol>h2D</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hname&apos; can be reduced." verbose="The scope of the variable &apos;hname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="650" column="10"/>
            <symbol>hname</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_x_low&apos; can be reduced." verbose="The scope of the variable &apos;i_x_low&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="713" column="12"/>
            <symbol>i_x_low</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_x_high&apos; can be reduced." verbose="The scope of the variable &apos;i_x_high&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="714" column="12"/>
            <symbol>i_x_high</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_sum&apos; is assigned a value that is never used." verbose="Variable &apos;i_sum&apos; is assigned a value that is never used." cwe="563" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="318" column="18"/>
            <symbol>i_sum</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;h2D&apos; is assigned a value that is never used." verbose="Variable &apos;h2D&apos; is assigned a value that is never used." cwe="563" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="649" column="15"/>
            <symbol>h2D</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_x_low&apos; is assigned a value that is never used." verbose="Variable &apos;i_x_low&apos; is assigned a value that is never used." cwe="563" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="713" column="20"/>
            <symbol>i_x_low</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_x_high&apos; is assigned a value that is never used." verbose="Variable &apos;i_x_high&apos; is assigned a value that is never used." cwe="563" file0="src/VHistogramUtilities.cpp">
            <location file="src/VHistogramUtilities.cpp" line="714" column="21"/>
            <symbol>i_x_high</symbol>
        </error>
        <error id="identicalInnerCondition" severity="warning" msg="Identical inner &apos;if&apos; condition is always true." verbose="Identical inner &apos;if&apos; condition is always true (outer condition is &apos;fCircleCoordinates[2]!=0&apos; and inner condition is &apos;fCircleCoordinates[2]!=0&apos;)." cwe="398" file0="src/VHoughTransform.cpp">
            <location file="src/VHoughTransform.cpp" line="193" column="43" info="identical inner condition: fCircleCoordinates[2]!=0"/>
            <location file="src/VHoughTransform.cpp" line="188" column="78" info="outer condition: fCircleCoordinates[2]!=0"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fPixelXCoordinate&apos; is assigned a value that is never used." verbose="Variable &apos;fPixelXCoordinate&apos; is assigned a value that is never used." cwe="563" file0="src/VHoughTransform.cpp">
            <location file="src/VHoughTransform.cpp" line="103" column="30"/>
            <symbol>fPixelXCoordinate</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fPixelYCoordinate&apos; is assigned a value that is never used." verbose="Variable &apos;fPixelYCoordinate&apos; is assigned a value that is never used." cwe="563" file0="src/VHoughTransform.cpp">
            <location file="src/VHoughTransform.cpp" line="104" column="30"/>
            <symbol>fPixelYCoordinate</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;chanID&apos; can be reduced." verbose="The scope of the variable &apos;chanID&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageAnalyzer.cpp">
            <location file="src/VImageAnalyzer.cpp" line="864" column="22"/>
            <symbol>chanID</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_channelHitID&apos; can be reduced." verbose="The scope of the variable &apos;i_channelHitID&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageBaseAnalyzer.cpp">
            <location file="src/VImageBaseAnalyzer.cpp" line="239" column="22"/>
            <symbol>i_channelHitID</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;crateTZero&apos; can be reduced." verbose="The scope of the variable &apos;crateTZero&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageBaseAnalyzer.cpp">
            <location file="src/VImageBaseAnalyzer.cpp" line="325" column="16"/>
            <symbol>crateTZero</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;offset&apos; can be reduced." verbose="The scope of the variable &apos;offset&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageBaseAnalyzer.cpp">
            <location file="src/VImageBaseAnalyzer.cpp" line="326" column="16"/>
            <symbol>offset</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iPix&apos; can be reduced." verbose="The scope of the variable &apos;iPix&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageBaseAnalyzer.cpp">
            <location file="src/VImageBaseAnalyzer.cpp" line="1058" column="22"/>
            <symbol>iPix</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_channelHitID&apos; can be reduced." verbose="The scope of the variable &apos;i_channelHitID&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageBaseAnalyzer.cpp">
            <location file="src/VImageBaseAnalyzer.cpp" line="1248" column="22"/>
            <symbol>i_channelHitID</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_channelHitID&apos; can be reduced." verbose="The scope of the variable &apos;i_channelHitID&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageBaseAnalyzer.cpp">
            <location file="src/VImageBaseAnalyzer.cpp" line="1294" column="22"/>
            <symbol>i_channelHitID</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iPix&apos; is assigned a value that is never used." verbose="Variable &apos;iPix&apos; is assigned a value that is never used." cwe="563" file0="src/VImageBaseAnalyzer.cpp">
            <location file="src/VImageBaseAnalyzer.cpp" line="1058" column="27"/>
            <symbol>iPix</symbol>
        </error>
        <error id="duplicateConditionalAssign" severity="style" msg="The statement &apos;if (VALIDITYBOUND[idx]!=refvalidity) VALIDITYBOUND[idx]=refvalidity&apos; is logically equivalent to &apos;VALIDITYBOUND[idx]=refvalidity&apos;." verbose="The statement &apos;if (VALIDITYBOUND[idx]!=refvalidity) VALIDITYBOUND[idx]=refvalidity&apos; is logically equivalent to &apos;VALIDITYBOUND[idx]=refvalidity&apos;." cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="693" column="36" info="Condition &apos;VALIDITYBOUND[idx]!=refvalidity&apos; is redundant"/>
            <location file="src/VImageCleaning.cpp" line="695" column="36" info="Assignment &apos;VALIDITYBOUND[idx]=refvalidity&apos;"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_cenx&apos; can be reduced." verbose="The scope of the variable &apos;i_cenx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2610" column="12"/>
            <symbol>i_cenx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_ceny&apos; can be reduced." verbose="The scope of the variable &apos;i_ceny&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2610" column="20"/>
            <symbol>i_ceny</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_clusterX&apos; can be reduced." verbose="The scope of the variable &apos;i_clusterX&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2686" column="11"/>
            <symbol>i_clusterX</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_clusterY&apos; can be reduced." verbose="The scope of the variable &apos;i_clusterY&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2686" column="23"/>
            <symbol>i_clusterY</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_clusterXpos&apos; can be reduced." verbose="The scope of the variable &apos;i_clusterXpos&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2687" column="11"/>
            <symbol>i_clusterXpos</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_clusterXtime&apos; can be reduced." verbose="The scope of the variable &apos;i_clusterXtime&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2688" column="11"/>
            <symbol>i_clusterXtime</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_cluster&apos; can be reduced." verbose="The scope of the variable &apos;i_cluster&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2969" column="9"/>
            <symbol>i_cluster</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;dont_remove&apos; can be reduced." verbose="The scope of the variable &apos;dont_remove&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2998" column="14"/>
            <symbol>dont_remove</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_channelHitID&apos; can be reduced." verbose="The scope of the variable &apos;i_channelHitID&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="3260" column="22"/>
            <symbol>i_channelHitID</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;k&apos; can be reduced." verbose="The scope of the variable &apos;k&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="3299" column="22"/>
            <symbol>k</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;CombFactor&apos; can be declared with const" verbose="Variable &apos;CombFactor&apos; can be declared with const" cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="619" column="11" info="Variable &apos;CombFactor&apos; can be declared with const"/>
            <symbol>CombFactor</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;ThreshFreq&apos; can be declared with const" verbose="Variable &apos;ThreshFreq&apos; can be declared with const" cwe="398" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2122" column="11" info="Variable &apos;ThreshFreq&apos; can be declared with const"/>
            <symbol>ThreshFreq</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;RATE[thbin]&apos; is assigned a value that is never used." verbose="Variable &apos;RATE[thbin]&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2155" column="21"/>
            <symbol>RATE[thbin]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;RATE[thbin]&apos; is assigned a value that is never used." verbose="Variable &apos;RATE[thbin]&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2174" column="37"/>
            <symbol>RATE[thbin]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_clusterX&apos; is assigned a value that is never used." verbose="Variable &apos;i_clusterX&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2701" column="20"/>
            <symbol>i_clusterX</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_clusterY&apos; is assigned a value that is never used." verbose="Variable &apos;i_clusterY&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2702" column="20"/>
            <symbol>i_clusterY</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_clusterXpos&apos; is assigned a value that is never used." verbose="Variable &apos;i_clusterXpos&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2703" column="23"/>
            <symbol>i_clusterXpos</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_clusterXtime&apos; is assigned a value that is never used." verbose="Variable &apos;i_clusterXtime&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2704" column="24"/>
            <symbol>i_clusterXtime</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_cluster&apos; is assigned a value that is never used." verbose="Variable &apos;i_cluster&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="2969" column="19"/>
            <symbol>i_cluster</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_neigh&apos; is assigned a value that is never used." verbose="Variable &apos;i_neigh&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="3097" column="18"/>
            <symbol>i_neigh</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_neighbour_size&apos; is assigned a value that is never used." verbose="Variable &apos;i_neighbour_size&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="3098" column="35"/>
            <symbol>i_neighbour_size</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;k&apos; is assigned a value that is never used." verbose="Variable &apos;k&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="3099" column="20"/>
            <symbol>k</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_neigh&apos; is assigned a value that is never used." verbose="Variable &apos;i_neigh&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="3113" column="29"/>
            <symbol>i_neigh</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;k&apos; is assigned a value that is never used." verbose="Variable &apos;k&apos; is assigned a value that is never used." cwe="563" file0="src/VImageCleaning.cpp">
            <location file="src/VImageCleaning.cpp" line="3299" column="24"/>
            <symbol>k</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tmp&apos; is assigned a value that is never used." verbose="Variable &apos;tmp&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterCalculation.cpp">
            <location file="src/VImageParameterCalculation.cpp" line="435" column="13"/>
            <symbol>tmp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sum&apos; can be reduced." verbose="The scope of the variable &apos;sum&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="278" column="12"/>
            <symbol>sum</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="284" column="12"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="285" column="12"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="286" column="12"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;t&apos; can be reduced." verbose="The scope of the variable &apos;t&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="287" column="12"/>
            <symbol>t</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tx&apos; can be reduced." verbose="The scope of the variable &apos;tx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="288" column="12"/>
            <symbol>tx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sum&apos; can be reduced." verbose="The scope of the variable &apos;sum&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="517" column="12"/>
            <symbol>sum</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="523" column="12"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="524" column="12"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;r&apos; can be reduced." verbose="The scope of the variable &apos;r&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="525" column="12"/>
            <symbol>r</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x_p&apos; can be reduced." verbose="The scope of the variable &apos;x_p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="526" column="12"/>
            <symbol>x_p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y_p&apos; can be reduced." verbose="The scope of the variable &apos;y_p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="527" column="12"/>
            <symbol>y_p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="530" column="12"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;t&apos; can be reduced." verbose="The scope of the variable &apos;t&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="531" column="12"/>
            <symbol>t</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tx&apos; can be reduced." verbose="The scope of the variable &apos;tx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="532" column="12"/>
            <symbol>tx</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;par&apos; can be declared with const" verbose="Parameter &apos;par&apos; can be declared with const" cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="274" column="88" info="Parameter &apos;par&apos; can be declared with const"/>
            <symbol>par</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;par&apos; can be declared with const" verbose="Parameter &apos;par&apos; can be declared with const" cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="1245" column="50" info="Parameter &apos;par&apos; can be declared with const"/>
            <symbol>par</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;x&apos; can be declared with const" verbose="Parameter &apos;x&apos; can be declared with const" cwe="398" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="1245" column="37" info="Parameter &apos;x&apos; can be declared with const"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sum&apos; is assigned a value that is never used." verbose="Variable &apos;sum&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="278" column="16"/>
            <symbol>sum</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;gin&apos; is assigned a value that is never used." verbose="Variable &apos;gin&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="281" column="9"/>
            <symbol>gin</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iflag&apos; is assigned a value that is never used." verbose="Variable &apos;iflag&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="282" column="11"/>
            <symbol>iflag</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="284" column="14"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="285" column="14"/>
            <symbol>y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;n&apos; is assigned a value that is never used." verbose="Variable &apos;n&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="286" column="14"/>
            <symbol>n</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;t&apos; is assigned a value that is never used." verbose="Variable &apos;t&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="287" column="14"/>
            <symbol>t</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tx&apos; is assigned a value that is never used." verbose="Variable &apos;tx&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="288" column="15"/>
            <symbol>tx</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sum&apos; is assigned a value that is never used." verbose="Variable &apos;sum&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="517" column="16"/>
            <symbol>sum</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;gin&apos; is assigned a value that is never used." verbose="Variable &apos;gin&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="520" column="9"/>
            <symbol>gin</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iflag&apos; is assigned a value that is never used." verbose="Variable &apos;iflag&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="521" column="11"/>
            <symbol>iflag</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="523" column="14"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="524" column="14"/>
            <symbol>y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;r&apos; is assigned a value that is never used." verbose="Variable &apos;r&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="525" column="14"/>
            <symbol>r</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x_p&apos; is assigned a value that is never used." verbose="Variable &apos;x_p&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="526" column="16"/>
            <symbol>x_p</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y_p&apos; is assigned a value that is never used." verbose="Variable &apos;y_p&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="527" column="16"/>
            <symbol>y_p</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;n&apos; is assigned a value that is never used." verbose="Variable &apos;n&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="530" column="14"/>
            <symbol>n</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;t&apos; is assigned a value that is never used." verbose="Variable &apos;t&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="531" column="14"/>
            <symbol>t</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tx&apos; is assigned a value that is never used." verbose="Variable &apos;tx&apos; is assigned a value that is never used." cwe="563" file0="src/VImageParameterFitter.cpp">
            <location file="src/VImageParameterFitter.cpp" line="532" column="15"/>
            <symbol>tx</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VInstrumentResponseFunction.cpp">
            <location file="src/VInstrumentResponseFunction.cpp" line="123" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VInstrumentResponseFunction.cpp">
            <location file="src/VInstrumentResponseFunction.cpp" line="123" column="13"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iTemp&apos; can be reduced." verbose="The scope of the variable &apos;iTemp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VInstrumentResponseFunctionData.cpp">
            <location file="src/VInstrumentResponseFunctionData.cpp" line="623" column="11"/>
            <symbol>iTemp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_energy&apos; can be reduced." verbose="The scope of the variable &apos;i_energy&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VInstrumentResponseFunctionData.cpp">
            <location file="src/VInstrumentResponseFunctionData.cpp" line="636" column="12"/>
            <symbol>i_energy</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iTemp&apos; is assigned a value that is never used." verbose="Variable &apos;iTemp&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionData.cpp">
            <location file="src/VInstrumentResponseFunctionData.cpp" line="623" column="17"/>
            <symbol>iTemp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_energy&apos; is assigned a value that is never used." verbose="Variable &apos;i_energy&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionData.cpp">
            <location file="src/VInstrumentResponseFunctionData.cpp" line="636" column="21"/>
            <symbol>i_energy</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionData.cpp">
            <location file="src/VInstrumentResponseFunctionData.cpp" line="731" column="14"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionData.cpp">
            <location file="src/VInstrumentResponseFunctionData.cpp" line="732" column="14"/>
            <symbol>y</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;bUseMedian&apos; is always true" verbose="Condition &apos;bUseMedian&apos; is always true" cwe="571" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="863" column="9" info="Condition &apos;bUseMedian&apos; is always true"/>
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="858" column="23" info="Assignment &apos;bUseMedian=true&apos;, assigned value is 1"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;bXaxisIsEtrue&apos; is always false" verbose="Condition &apos;bXaxisIsEtrue&apos; is always false" cwe="570" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="904" column="9" info="Condition &apos;bXaxisIsEtrue&apos; is always false"/>
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="903" column="21" info="Assignment &apos;bXaxisIsEtrue=false&apos;, assigned value is 0"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;iFile&apos; is redundant or there is possible null pointer dereference: iFile." verbose="Either the condition &apos;iFile&apos; is redundant or there is possible null pointer dereference: iFile." cwe="476" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="295" column="9" info="Null pointer dereference"/>
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="316" column="17" info="Assuming that condition &apos;iFile&apos; is not redundant"/>
            <symbol>iFile</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;iFile&apos; is redundant or there is possible null pointer dereference: iFile." verbose="Either the condition &apos;iFile&apos; is redundant or there is possible null pointer dereference: iFile." cwe="476" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="303" column="26" info="Null pointer dereference"/>
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="316" column="17" info="Assuming that condition &apos;iFile&apos; is not redundant"/>
            <symbol>iFile</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_ffactor_80p&apos; can be reduced." verbose="The scope of the variable &apos;i_ffactor_80p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="668" column="27"/>
            <symbol>i_ffactor_80p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y1_U&apos; can be reduced." verbose="The scope of the variable &apos;y1_U&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="1297" column="12"/>
            <symbol>y1_U</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y1_L&apos; can be reduced." verbose="The scope of the variable &apos;y1_L&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="1298" column="12"/>
            <symbol>y1_L</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;yE&apos; can be reduced." verbose="The scope of the variable &apos;yE&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="1752" column="28"/>
            <symbol>yE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;z&apos; is assigned a value that is never used." verbose="Variable &apos;z&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="653" column="15"/>
            <symbol>z</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_ffactor_80p&apos; is assigned a value that is never used." verbose="Variable &apos;i_ffactor_80p&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="668" column="41"/>
            <symbol>i_ffactor_80p</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;energy&apos; is assigned a value that is never used." verbose="Variable &apos;energy&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="897" column="19"/>
            <symbol>energy</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;e_res&apos; is assigned a value that is never used." verbose="Variable &apos;e_res&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="1085" column="18"/>
            <symbol>e_res</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;e&apos; is assigned a value that is never used." verbose="Variable &apos;e&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="1287" column="14"/>
            <symbol>e</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y0_U&apos; is assigned a value that is never used." verbose="Variable &apos;y0_U&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="1292" column="17"/>
            <symbol>y0_U</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y0_L&apos; is assigned a value that is never used." verbose="Variable &apos;y0_L&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="1293" column="17"/>
            <symbol>y0_L</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y1_U&apos; is assigned a value that is never used." verbose="Variable &apos;y1_U&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="1297" column="17"/>
            <symbol>y1_U</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y1_L&apos; is assigned a value that is never used." verbose="Variable &apos;y1_L&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="1298" column="17"/>
            <symbol>y1_L</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iTemp&apos; is assigned a value that is never used." verbose="Variable &apos;iTemp&apos; is assigned a value that is never used." cwe="563" file0="src/VInstrumentResponseFunctionReader.cpp">
            <location file="src/VInstrumentResponseFunctionReader.cpp" line="1536" column="17"/>
            <symbol>iTemp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;xc&apos; can be reduced." verbose="The scope of the variable &apos;xc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VInterpolate2DHistos.cpp">
            <location file="src/VInterpolate2DHistos.cpp" line="228" column="12"/>
            <symbol>xc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VInterpolate2DHistos.cpp">
            <location file="src/VInterpolate2DHistos.cpp" line="226" column="14"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VInterpolate2DHistos.cpp">
            <location file="src/VInterpolate2DHistos.cpp" line="227" column="14"/>
            <symbol>y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;xc&apos; is assigned a value that is never used." verbose="Variable &apos;xc&apos; is assigned a value that is never used." cwe="563" file0="src/VInterpolate2DHistos.cpp">
            <location file="src/VInterpolate2DHistos.cpp" line="228" column="15"/>
            <symbol>xc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;yc&apos; is assigned a value that is never used." verbose="Variable &apos;yc&apos; is assigned a value that is never used." cwe="563" file0="src/VInterpolate2DHistos.cpp">
            <location file="src/VInterpolate2DHistos.cpp" line="229" column="15"/>
            <symbol>yc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;z&apos; is assigned a value that is never used." verbose="Variable &apos;z&apos; is assigned a value that is never used." cwe="563" file0="src/VInterpolate2DHistos.cpp">
            <location file="src/VInterpolate2DHistos.cpp" line="230" column="14"/>
            <symbol>z</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hname&apos; can be reduced." verbose="The scope of the variable &apos;hname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VLightCurvePlotter.cpp">
            <location file="src/VLightCurvePlotter.cpp" line="285" column="10"/>
            <symbol>hname</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;p&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;p&apos; is reassigned a value before the old one has been used." cwe="563" file0="src/VLikelihoodFitter.cpp">
            <location file="src/VLikelihoodFitter.cpp" line="3658" column="5" info="p is overwritten"/>
            <location file="src/VLikelihoodFitter.cpp" line="3639" column="5" info="p is assigned"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_bInc&apos; can be reduced." verbose="The scope of the variable &apos;i_bInc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VLikelihoodFitter.cpp">
            <location file="src/VLikelihoodFitter.cpp" line="3004" column="8"/>
            <symbol>i_bInc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_J_Rec_Cur&apos; is assigned a value that is never used." verbose="Variable &apos;i_J_Rec_Cur&apos; is assigned a value that is never used." cwe="563" file0="src/VLikelihoodFitter.cpp">
            <location file="src/VLikelihoodFitter.cpp" line="505" column="19"/>
            <symbol>i_J_Rec_Cur</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_L_MC_Cur&apos; is assigned a value that is never used." verbose="Variable &apos;i_L_MC_Cur&apos; is assigned a value that is never used." cwe="563" file0="src/VLikelihoodFitter.cpp">
            <location file="src/VLikelihoodFitter.cpp" line="506" column="18"/>
            <symbol>i_L_MC_Cur</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_bInc&apos; is assigned a value that is never used." verbose="Variable &apos;i_bInc&apos; is assigned a value that is never used." cwe="563" file0="src/VLikelihoodFitter.cpp">
            <location file="src/VLikelihoodFitter.cpp" line="3004" column="15"/>
            <symbol>i_bInc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_ExcessRes[i]&apos; is assigned a value that is never used." verbose="Variable &apos;i_ExcessRes[i]&apos; is assigned a value that is never used." cwe="563" file0="src/VLikelihoodFitter.cpp">
            <location file="src/VLikelihoodFitter.cpp" line="3521" column="20"/>
            <symbol>i_ExcessRes[i]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;p&apos; is assigned a value that is never used." verbose="Variable &apos;p&apos; is assigned a value that is never used." cwe="563" file0="src/VLikelihoodFitter.cpp">
            <location file="src/VLikelihoodFitter.cpp" line="3658" column="5"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;f&apos; can be reduced." verbose="The scope of the variable &apos;f&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VLombScargle.cpp">
            <location file="src/VLombScargle.cpp" line="88" column="12"/>
            <symbol>f</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;w&apos; can be reduced." verbose="The scope of the variable &apos;w&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VLombScargle.cpp">
            <location file="src/VLombScargle.cpp" line="89" column="12"/>
            <symbol>w</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tau&apos; can be reduced." verbose="The scope of the variable &apos;tau&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VLombScargle.cpp">
            <location file="src/VLombScargle.cpp" line="90" column="12"/>
            <symbol>tau</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_wtau&apos; can be reduced." verbose="The scope of the variable &apos;i_wtau&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VLombScargle.cpp">
            <location file="src/VLombScargle.cpp" line="115" column="16"/>
            <symbol>i_wtau</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_fdev&apos; can be reduced." verbose="The scope of the variable &apos;i_fdev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VLombScargle.cpp">
            <location file="src/VLombScargle.cpp" line="116" column="16"/>
            <symbol>i_fdev</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_z&apos; can be reduced." verbose="The scope of the variable &apos;i_z&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VLombScargle.cpp">
            <location file="src/VLombScargle.cpp" line="224" column="12"/>
            <symbol>i_z</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;f&apos; is assigned a value that is never used." verbose="Variable &apos;f&apos; is assigned a value that is never used." cwe="563" file0="src/VLombScargle.cpp">
            <location file="src/VLombScargle.cpp" line="88" column="14"/>
            <symbol>f</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;w&apos; is assigned a value that is never used." verbose="Variable &apos;w&apos; is assigned a value that is never used." cwe="563" file0="src/VLombScargle.cpp">
            <location file="src/VLombScargle.cpp" line="89" column="14"/>
            <symbol>w</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tau&apos; is assigned a value that is never used." verbose="Variable &apos;tau&apos; is assigned a value that is never used." cwe="563" file0="src/VLombScargle.cpp">
            <location file="src/VLombScargle.cpp" line="90" column="16"/>
            <symbol>tau</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_z&apos; is assigned a value that is never used." verbose="Variable &apos;i_z&apos; is assigned a value that is never used." cwe="563" file0="src/VLombScargle.cpp">
            <location file="src/VLombScargle.cpp" line="224" column="16"/>
            <symbol>i_z</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;par&apos; can be declared with const" verbose="Parameter &apos;par&apos; can be declared with const" cwe="398" file0="src/VLowGainCalibrator.cpp">
            <location file="src/VLowGainCalibrator.cpp" line="175" column="37" info="Parameter &apos;par&apos; can be declared with const"/>
            <symbol>par</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iNfound&apos; is assigned a value that is never used." verbose="Variable &apos;iNfound&apos; is assigned a value that is never used." cwe="563" file0="src/VLowGainCalibrator.cpp">
            <location file="src/VLowGainCalibrator.cpp" line="456" column="21"/>
            <symbol>iNfound</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y1&apos; can be reduced." verbose="The scope of the variable &apos;y1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="82" column="12"/>
            <symbol>y1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_bflux&apos; can be reduced." verbose="The scope of the variable &apos;i_bflux&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="87" column="12"/>
            <symbol>i_bflux</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y1&apos; is assigned a value that is never used." verbose="Variable &apos;y1&apos; is assigned a value that is never used." cwe="563" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="82" column="15"/>
            <symbol>y1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x1&apos; is assigned a value that is never used." verbose="Variable &apos;x1&apos; is assigned a value that is never used." cwe="563" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="85" column="15"/>
            <symbol>x1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x2&apos; is assigned a value that is never used." verbose="Variable &apos;x2&apos; is assigned a value that is never used." cwe="563" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="86" column="15"/>
            <symbol>x2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_bflux&apos; is assigned a value that is never used." verbose="Variable &apos;i_bflux&apos; is assigned a value that is never used." cwe="563" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="87" column="20"/>
            <symbol>i_bflux</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y1&apos; is assigned a value that is never used." verbose="Variable &apos;y1&apos; is assigned a value that is never used." cwe="563" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="343" column="15"/>
            <symbol>y1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x1&apos; is assigned a value that is never used." verbose="Variable &apos;x1&apos; is assigned a value that is never used." cwe="563" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="346" column="15"/>
            <symbol>x1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x2&apos; is assigned a value that is never used." verbose="Variable &apos;x2&apos; is assigned a value that is never used." cwe="563" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="347" column="15"/>
            <symbol>x2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_bflux&apos; is assigned a value that is never used." verbose="Variable &apos;i_bflux&apos; is assigned a value that is never used." cwe="563" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="348" column="20"/>
            <symbol>i_bflux</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_Rec_Bin&apos; is assigned a value that is never used." verbose="Variable &apos;i_Rec_Bin&apos; is assigned a value that is never used." cwe="563" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="349" column="19"/>
            <symbol>i_Rec_Bin</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;j_Rec_Bin&apos; is assigned a value that is never used." verbose="Variable &apos;j_Rec_Bin&apos; is assigned a value that is never used." cwe="563" file0="src/VMonteCarloRateCalculator.cpp">
            <location file="src/VMonteCarloRateCalculator.cpp" line="350" column="19"/>
            <symbol>j_Rec_Bin</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VMultipleGrIsuReader.cpp">
            <location file="src/VMultipleGrIsuReader.cpp" line="63" column="17"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ihname&apos; is assigned a value that is never used." verbose="Variable &apos;ihname&apos; is assigned a value that is never used." cwe="563" file0="src/VOnOff.cpp">
            <location file="src/VOnOff.cpp" line="85" column="16"/>
            <symbol>ihname</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hTemp&apos; is assigned a value that is never used." verbose="Variable &apos;hTemp&apos; is assigned a value that is never used." cwe="563" file0="src/VOnOff.cpp">
            <location file="src/VOnOff.cpp" line="267" column="17"/>
            <symbol>hTemp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ir&apos; is assigned a value that is never used." verbose="Variable &apos;ir&apos; is assigned a value that is never used." cwe="563" file0="src/VOnOff.cpp">
            <location file="src/VOnOff.cpp" line="534" column="15"/>
            <symbol>ir</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPEReader.cpp">
            <location file="src/VPEReader.cpp" line="121" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPedestalCalculator.cpp">
            <location file="src/VPedestalCalculator.cpp" line="125" column="13"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;chanID&apos; can be reduced." verbose="The scope of the variable &apos;chanID&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPedestalCalculator.cpp">
            <location file="src/VPedestalCalculator.cpp" line="278" column="30"/>
            <symbol>chanID</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPedestalLowGain.cpp">
            <location file="src/VPedestalLowGain.cpp" line="76" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPedestalLowGain.cpp">
            <location file="src/VPedestalLowGain.cpp" line="76" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPedestalLowGain.cpp">
            <location file="src/VPedestalLowGain.cpp" line="193" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPedestalLowGain.cpp">
            <location file="src/VPedestalLowGain.cpp" line="194" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPedestalLowGain.cpp">
            <location file="src/VPedestalLowGain.cpp" line="197" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="521" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="522" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="526" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="527" column="17"/>
        </error>
        <error id="duplicateAssignExpression" severity="style" msg="Same expression used in consecutive assignments of &apos;Xmin&apos; and &apos;Xmax&apos;." verbose="Finding variables &apos;Xmin&apos; and &apos;Xmax&apos; that are assigned the same expression is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="1263" column="16"/>
            <location file="src/VPlotAnasumHistograms.cpp" line="1264" column="16"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hname&apos; can be reduced." verbose="The scope of the variable &apos;hname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="207" column="10"/>
            <symbol>hname</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;htitle&apos; can be reduced." verbose="The scope of the variable &apos;htitle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="208" column="10"/>
            <symbol>htitle</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;setYMax&apos; can be reduced." verbose="The scope of the variable &apos;setYMax&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="671" column="12"/>
            <symbol>setYMax</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;htitle&apos; can be reduced." verbose="The scope of the variable &apos;htitle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="674" column="10"/>
            <symbol>htitle</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nt2_68&apos; can be reduced." verbose="The scope of the variable &apos;nt2_68&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="725" column="16"/>
            <symbol>nt2_68</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;htitle&apos; can be reduced." verbose="The scope of the variable &apos;htitle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="801" column="10"/>
            <symbol>htitle</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c_sig1D&apos; can be reduced." verbose="The scope of the variable &apos;c_sig1D&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="972" column="14"/>
            <symbol>c_sig1D</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;htitle&apos; can be reduced." verbose="The scope of the variable &apos;htitle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="1096" column="10"/>
            <symbol>htitle</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;f1&apos; can be reduced." verbose="The scope of the variable &apos;f1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="1772" column="12"/>
            <symbol>f1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hNull&apos; can be reduced." verbose="The scope of the variable &apos;hNull&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="1788" column="11"/>
            <symbol>hNull</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;h_xrange&apos; can be reduced." verbose="The scope of the variable &apos;h_xrange&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="2340" column="12"/>
            <symbol>h_xrange</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;h_yrange&apos; can be reduced." verbose="The scope of the variable &apos;h_yrange&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="2341" column="12"/>
            <symbol>h_yrange</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;itemp&apos; can be reduced." verbose="The scope of the variable &apos;itemp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="2732" column="10"/>
            <symbol>itemp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hname&apos; can be reduced." verbose="The scope of the variable &apos;hname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="2820" column="10"/>
            <symbol>hname</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;htitle&apos; can be reduced." verbose="The scope of the variable &apos;htitle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="2821" column="10"/>
            <symbol>htitle</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bZetaTau&apos; can be reduced." verbose="The scope of the variable &apos;bZetaTau&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="2875" column="10"/>
            <symbol>bZetaTau</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c_skyAlphaNorm&apos; can be reduced." verbose="The scope of the variable &apos;c_skyAlphaNorm&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="3014" column="14"/>
            <symbol>c_skyAlphaNorm</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;htitle&apos; can be reduced." verbose="The scope of the variable &apos;htitle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="3057" column="10"/>
            <symbol>htitle</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;c_sig1D&apos; is assigned a value that is never used." verbose="Variable &apos;c_sig1D&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="972" column="22"/>
            <symbol>c_sig1D</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;f1&apos; is assigned a value that is never used." verbose="Variable &apos;f1&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="1772" column="15"/>
            <symbol>f1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hNull&apos; is assigned a value that is never used." verbose="Variable &apos;hNull&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="1788" column="17"/>
            <symbol>hNull</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;currrentDir&apos; is assigned a value that is never used." verbose="Variable &apos;currrentDir&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="2268" column="29"/>
            <symbol>currrentDir</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;h_xrange&apos; is assigned a value that is never used." verbose="Variable &apos;h_xrange&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="2340" column="21"/>
            <symbol>h_xrange</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;h_yrange&apos; is assigned a value that is never used." verbose="Variable &apos;h_yrange&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="2341" column="21"/>
            <symbol>h_yrange</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;c_skyAlphaNorm&apos; is assigned a value that is never used." verbose="Variable &apos;c_skyAlphaNorm&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotAnasumHistograms.cpp">
            <location file="src/VPlotAnasumHistograms.cpp" line="3014" column="29"/>
            <symbol>c_skyAlphaNorm</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPlotArrayReconstruction.cpp">
            <location file="src/VPlotArrayReconstruction.cpp" line="140" column="9"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;fPlotTelescopeScale&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;fPlotTelescopeScale&apos;. The initialized value is overwritten before it is read." cwe="563" file0="src/VPlotArrayReconstruction.cpp">
            <location file="src/VPlotArrayReconstruction.cpp" line="563" column="41" info="fPlotTelescopeScale is overwritten"/>
            <location file="src/VPlotArrayReconstruction.cpp" line="557" column="44" info="fPlotTelescopeScale is initialized"/>
            <symbol>fPlotTelescopeScale</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;iScale&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;iScale&apos;. The initialized value is overwritten before it is read." cwe="563" file0="src/VPlotArrayReconstruction.cpp">
            <location file="src/VPlotArrayReconstruction.cpp" line="715" column="32" info="iScale is overwritten"/>
            <location file="src/VPlotArrayReconstruction.cpp" line="711" column="39" info="iScale is initialized"/>
            <symbol>iScale</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="1566" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="1567" column="13"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;hR_sims[i]&apos; is redundant or there is possible null pointer dereference: hR_sims[i]." verbose="Either the condition &apos;hR_sims[i]&apos; is redundant or there is possible null pointer dereference: hR_sims[i]." cwe="476" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="1627" column="16" info="Null pointer dereference"/>
            <location file="src/VPlotCompareDataWithMC.cpp" line="1639" column="20" info="Assuming that condition &apos;hR_sims[i]&apos; is not redundant"/>
            <symbol>hR_sims[i]</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;hR_diff[i]&apos; is redundant or there is possible null pointer dereference: hR_diff[i]." verbose="Either the condition &apos;hR_diff[i]&apos; is redundant or there is possible null pointer dereference: hR_diff[i]." cwe="476" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="1628" column="16" info="Null pointer dereference"/>
            <location file="src/VPlotCompareDataWithMC.cpp" line="1639" column="34" info="Assuming that condition &apos;hR_diff[i]&apos; is not redundant"/>
            <symbol>hR_diff[i]</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;KSProb&apos; can be reduced." verbose="The scope of the variable &apos;KSProb&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="750" column="12"/>
            <symbol>KSProb</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;KSSig&apos; can be reduced." verbose="The scope of the variable &apos;KSSig&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="751" column="12"/>
            <symbol>KSSig</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;Chi2Prob&apos; can be reduced." verbose="The scope of the variable &apos;Chi2Prob&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="752" column="12"/>
            <symbol>Chi2Prob</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;Chi2Sig&apos; can be reduced." verbose="The scope of the variable &apos;Chi2Sig&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="753" column="12"/>
            <symbol>Chi2Sig</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="892" column="19"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;error_sims&apos; can be reduced." verbose="The scope of the variable &apos;error_sims&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="1198" column="12"/>
            <symbol>error_sims</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;error_diff&apos; can be reduced." verbose="The scope of the variable &apos;error_diff&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="1199" column="12"/>
            <symbol>error_diff</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;htitle&apos; can be reduced." verbose="The scope of the variable &apos;htitle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="1550" column="10"/>
            <symbol>htitle</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;hname&apos; shadows outer variable" verbose="Local variable &apos;hname&apos; shadows outer variable" cwe="398" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="437" column="14" info="Shadow variable"/>
            <location file="src/VPlotCompareDataWithMC.cpp" line="424" column="10" info="Shadowed declaration"/>
            <symbol>hname</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;hname&apos; shadows outer variable" verbose="Local variable &apos;hname&apos; shadows outer variable" cwe="398" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="571" column="14" info="Shadow variable"/>
            <location file="src/VPlotCompareDataWithMC.cpp" line="499" column="10" info="Shadowed declaration"/>
            <symbol>hname</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;hname&apos; shadows outer variable" verbose="Local variable &apos;hname&apos; shadows outer variable" cwe="398" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="588" column="14" info="Shadow variable"/>
            <location file="src/VPlotCompareDataWithMC.cpp" line="499" column="10" info="Shadowed declaration"/>
            <symbol>hname</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;KSProb&apos; is assigned a value that is never used." verbose="Variable &apos;KSProb&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="750" column="19"/>
            <symbol>KSProb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;KSSig&apos; is assigned a value that is never used." verbose="Variable &apos;KSSig&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="751" column="18"/>
            <symbol>KSSig</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;Chi2Prob&apos; is assigned a value that is never used." verbose="Variable &apos;Chi2Prob&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="752" column="21"/>
            <symbol>Chi2Prob</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;Chi2Sig&apos; is assigned a value that is never used." verbose="Variable &apos;Chi2Sig&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="753" column="20"/>
            <symbol>Chi2Sig</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;error_sims&apos; is assigned a value that is never used." verbose="Variable &apos;error_sims&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="759" column="23"/>
            <symbol>error_sims</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;error_diff&apos; is assigned a value that is never used." verbose="Variable &apos;error_diff&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="760" column="23"/>
            <symbol>error_diff</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;error_sims&apos; is assigned a value that is never used." verbose="Variable &apos;error_sims&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="1198" column="23"/>
            <symbol>error_sims</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;error_diff&apos; is assigned a value that is never used." verbose="Variable &apos;error_diff&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="1199" column="23"/>
            <symbol>error_diff</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hrel&apos; is assigned a value that is never used." verbose="Variable &apos;hrel&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="1591" column="16"/>
            <symbol>hrel</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hsims&apos; is assigned a value that is never used." verbose="Variable &apos;hsims&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotCompareDataWithMC.cpp">
            <location file="src/VPlotCompareDataWithMC.cpp" line="1869" column="17"/>
            <symbol>hsims</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;addEntry&apos; is always true" verbose="Condition &apos;addEntry&apos; is always true" cwe="571" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1060" column="28" info="Condition &apos;addEntry&apos; is always true"/>
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1056" column="25" info="Assignment &apos;addEntry=true&apos;, assigned value is 1"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;g&apos; is always true" verbose="Condition &apos;g&apos; is always true" cwe="571" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1750" column="13" info="Condition &apos;g&apos; is always true"/>
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1713" column="13" info="Assuming that condition &apos;!g&apos; is not redundant"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1945" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1949" column="13"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hname&apos; can be reduced." verbose="The scope of the variable &apos;hname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="191" column="10"/>
            <symbol>hname</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;he0&apos; can be reduced." verbose="The scope of the variable &apos;he0&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="921" column="11"/>
            <symbol>he0</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_Plotting_Min&apos; can be reduced." verbose="The scope of the variable &apos;i_Plotting_Min&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1399" column="12"/>
            <symbol>i_Plotting_Min</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_Plotting_Max&apos; can be reduced." verbose="The scope of the variable &apos;i_Plotting_Max&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1400" column="12"/>
            <symbol>i_Plotting_Max</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_Plotting_Min&apos; is assigned a value that is never used." verbose="Variable &apos;i_Plotting_Min&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1399" column="27"/>
            <symbol>i_Plotting_Min</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_Plotting_Max&apos; is assigned a value that is never used." verbose="Variable &apos;i_Plotting_Max&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1400" column="27"/>
            <symbol>i_Plotting_Max</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iXTitle&apos; is assigned a value that is never used." verbose="Variable &apos;iXTitle&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1404" column="20"/>
            <symbol>iXTitle</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iXTitle&apos; is assigned a value that is never used." verbose="Variable &apos;iXTitle&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1449" column="17"/>
            <symbol>iXTitle</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;h2D&apos; is assigned a value that is never used." verbose="Variable &apos;h2D&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotInstrumentResponseFunction.cpp">
            <location file="src/VPlotInstrumentResponseFunction.cpp" line="1853" column="15"/>
            <symbol>h2D</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ii&apos; is assigned a value that is never used." verbose="Variable &apos;ii&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotLookupTable.cpp">
            <location file="src/VPlotLookupTable.cpp" line="107" column="12"/>
            <symbol>ii</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;jj&apos; is assigned a value that is never used." verbose="Variable &apos;jj&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotLookupTable.cpp">
            <location file="src/VPlotLookupTable.cpp" line="108" column="12"/>
            <symbol>jj</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VPlotMonteCarloQualityFactor.cpp">
            <location file="src/VPlotMonteCarloQualityFactor.cpp" line="67" column="55"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VPlotMonteCarloQualityFactor.cpp">
            <location file="src/VPlotMonteCarloQualityFactor.cpp" line="112" column="55"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VPlotMonteCarloQualityFactor.cpp">
            <location file="src/VPlotMonteCarloQualityFactor.cpp" line="204" column="59"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VPlotMonteCarloQualityFactor.cpp">
            <location file="src/VPlotMonteCarloQualityFactor.cpp" line="242" column="55"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VPlotMonteCarloQualityFactor.cpp">
            <location file="src/VPlotMonteCarloQualityFactor.cpp" line="469" column="55"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fix_MSCW_max&apos; can be reduced." verbose="The scope of the variable &apos;fix_MSCW_max&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotOptimalCut.cpp">
            <location file="src/VPlotOptimalCut.cpp" line="241" column="12"/>
            <symbol>fix_MSCW_max</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fix_MSCL_max&apos; can be reduced." verbose="The scope of the variable &apos;fix_MSCL_max&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotOptimalCut.cpp">
            <location file="src/VPlotOptimalCut.cpp" line="242" column="12"/>
            <symbol>fix_MSCL_max</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fix_theta2_max&apos; can be reduced." verbose="The scope of the variable &apos;fix_theta2_max&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotOptimalCut.cpp">
            <location file="src/VPlotOptimalCut.cpp" line="243" column="12"/>
            <symbol>fix_theta2_max</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cVar&apos; is assigned a value that is never used." verbose="Variable &apos;cVar&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotOptimalCut.cpp">
            <location file="src/VPlotOptimalCut.cpp" line="267" column="13"/>
            <symbol>cVar</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iTitle&apos; is assigned a value that is never used." verbose="Variable &apos;iTitle&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotRadialAcceptance.cpp">
            <location file="src/VPlotRadialAcceptance.cpp" line="528" column="23"/>
            <symbol>iTitle</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iTitle&apos; is assigned a value that is never used." verbose="Variable &apos;iTitle&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotRadialAcceptance.cpp">
            <location file="src/VPlotRadialAcceptance.cpp" line="615" column="23"/>
            <symbol>iTitle</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hname&apos; can be reduced." verbose="The scope of the variable &apos;hname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotSensitivityfromLisFiles.cpp">
            <location file="src/VPlotSensitivityfromLisFiles.cpp" line="256" column="10"/>
            <symbol>hname</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;htitle&apos; can be reduced." verbose="The scope of the variable &apos;htitle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotSensitivityfromLisFiles.cpp">
            <location file="src/VPlotSensitivityfromLisFiles.cpp" line="257" column="10"/>
            <symbol>htitle</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;w1&apos; can be reduced." verbose="The scope of the variable &apos;w1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotUtilities.cpp">
            <location file="src/VPlotUtilities.cpp" line="292" column="12"/>
            <symbol>w1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;w2&apos; can be reduced." verbose="The scope of the variable &apos;w2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotUtilities.cpp">
            <location file="src/VPlotUtilities.cpp" line="292" column="16"/>
            <symbol>w2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotUtilities.cpp">
            <location file="src/VPlotUtilities.cpp" line="424" column="12"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotUtilities.cpp">
            <location file="src/VPlotUtilities.cpp" line="424" column="14"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotUtilities.cpp">
            <location file="src/VPlotUtilities.cpp" line="425" column="14"/>
            <symbol>y</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VPlotUtilities.cpp">
            <location file="src/VPlotUtilities.cpp" line="475" column="81"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;bUpsideDown&apos; is always false" verbose="Condition &apos;bUpsideDown&apos; is always false" cwe="570" file0="src/VPlotWPPhysSensitivity.cpp">
            <location file="src/VPlotWPPhysSensitivity.cpp" line="388" column="13" info="Condition &apos;bUpsideDown&apos; is always false"/>
            <location file="src/VPlotWPPhysSensitivity.cpp" line="370" column="24" info="Assignment &apos;bUpsideDown=false&apos;, assigned value is 0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;bUpsideDown&apos; is always false" verbose="Condition &apos;bUpsideDown&apos; is always false" cwe="570" file0="src/VPlotWPPhysSensitivity.cpp">
            <location file="src/VPlotWPPhysSensitivity.cpp" line="440" column="29" info="Condition &apos;bUpsideDown&apos; is always false"/>
            <location file="src/VPlotWPPhysSensitivity.cpp" line="370" column="24" info="Assignment &apos;bUpsideDown=false&apos;, assigned value is 0"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VPlotWPPhysSensitivity.cpp">
            <location file="src/VPlotWPPhysSensitivity.cpp" line="285" column="17"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;x&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;x&apos;. The initialized value is overwritten before it is read." cwe="563" file0="src/VPlotWPPhysSensitivity.cpp">
            <location file="src/VPlotWPPhysSensitivity.cpp" line="955" column="7" info="x is overwritten"/>
            <location file="src/VPlotWPPhysSensitivity.cpp" line="953" column="14" info="x is initialized"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fsys&apos; can be reduced." verbose="The scope of the variable &apos;fsys&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotWPPhysSensitivity.cpp">
            <location file="src/VPlotWPPhysSensitivity.cpp" line="1111" column="12"/>
            <symbol>fsys</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;dy&apos; can be reduced." verbose="The scope of the variable &apos;dy&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPlotWPPhysSensitivity.cpp">
            <location file="src/VPlotWPPhysSensitivity.cpp" line="1311" column="16"/>
            <symbol>dy</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/VPlotWPPhysSensitivity.cpp">
            <location file="src/VPlotWPPhysSensitivity.cpp" line="677" column="27" info="Shadow variable"/>
            <location file="src/VPlotWPPhysSensitivity.cpp" line="584" column="23" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;hname&apos; shadows outer variable" verbose="Local variable &apos;hname&apos; shadows outer variable" cwe="398" file0="src/VPlotWPPhysSensitivity.cpp">
            <location file="src/VPlotWPPhysSensitivity.cpp" line="736" column="18" info="Shadow variable"/>
            <location file="src/VPlotWPPhysSensitivity.cpp" line="507" column="10" info="Shadowed declaration"/>
            <symbol>hname</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fsys&apos; is assigned a value that is never used." verbose="Variable &apos;fsys&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotWPPhysSensitivity.cpp">
            <location file="src/VPlotWPPhysSensitivity.cpp" line="1111" column="17"/>
            <symbol>fsys</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;dy&apos; is assigned a value that is never used." verbose="Variable &apos;dy&apos; is assigned a value that is never used." cwe="563" file0="src/VPlotWPPhysSensitivity.cpp">
            <location file="src/VPlotWPPhysSensitivity.cpp" line="1311" column="19"/>
            <symbol>dy</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VPlotWPPhysSensitivity.cpp">
            <location file="src/VPlotWPPhysSensitivity.cpp" line="414" column="13"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iITime&apos; can be reduced." verbose="The scope of the variable &apos;iITime&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPointingDB.cpp">
            <location file="src/VPointingDB.cpp" line="624" column="12"/>
            <symbol>iITime</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iRA&apos; can be reduced." verbose="The scope of the variable &apos;iRA&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPointingDB.cpp">
            <location file="src/VPointingDB.cpp" line="625" column="12"/>
            <symbol>iRA</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iDec&apos; can be reduced." verbose="The scope of the variable &apos;iDec&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPointingDB.cpp">
            <location file="src/VPointingDB.cpp" line="626" column="12"/>
            <symbol>iDec</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;decoff&apos; can be reduced." verbose="The scope of the variable &apos;decoff&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPointingDB.cpp">
            <location file="src/VPointingDB.cpp" line="677" column="12"/>
            <symbol>decoff</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;raoff&apos; can be reduced." verbose="The scope of the variable &apos;raoff&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VPointingDB.cpp">
            <location file="src/VPointingDB.cpp" line="678" column="12"/>
            <symbol>raoff</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iMJD&apos; is assigned a value that is never used." verbose="Variable &apos;iMJD&apos; is assigned a value that is never used." cwe="563" file0="src/VPointingDB.cpp">
            <location file="src/VPointingDB.cpp" line="623" column="17"/>
            <symbol>iMJD</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iITime&apos; is assigned a value that is never used." verbose="Variable &apos;iITime&apos; is assigned a value that is never used." cwe="563" file0="src/VPointingDB.cpp">
            <location file="src/VPointingDB.cpp" line="624" column="19"/>
            <symbol>iITime</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iRA&apos; is assigned a value that is never used." verbose="Variable &apos;iRA&apos; is assigned a value that is never used." cwe="563" file0="src/VPointingDB.cpp">
            <location file="src/VPointingDB.cpp" line="625" column="16"/>
            <symbol>iRA</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iDec&apos; is assigned a value that is never used." verbose="Variable &apos;iDec&apos; is assigned a value that is never used." cwe="563" file0="src/VPointingDB.cpp">
            <location file="src/VPointingDB.cpp" line="626" column="17"/>
            <symbol>iDec</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;decoff&apos; is assigned a value that is never used." verbose="Variable &apos;decoff&apos; is assigned a value that is never used." cwe="563" file0="src/VPointingDB.cpp">
            <location file="src/VPointingDB.cpp" line="677" column="19"/>
            <symbol>decoff</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;raoff&apos; is assigned a value that is never used." verbose="Variable &apos;raoff&apos; is assigned a value that is never used." cwe="563" file0="src/VPointingDB.cpp">
            <location file="src/VPointingDB.cpp" line="678" column="18"/>
            <symbol>raoff</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bincentx&apos; can be reduced." verbose="The scope of the variable &apos;bincentx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VRadialAcceptance.cpp">
            <location file="src/VRadialAcceptance.cpp" line="907" column="12"/>
            <symbol>bincentx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bincenty&apos; can be reduced." verbose="The scope of the variable &apos;bincenty&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VRadialAcceptance.cpp">
            <location file="src/VRadialAcceptance.cpp" line="907" column="22"/>
            <symbol>bincenty</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iradius&apos; can be reduced." verbose="The scope of the variable &apos;iradius&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VRadialAcceptance.cpp">
            <location file="src/VRadialAcceptance.cpp" line="907" column="32"/>
            <symbol>iradius</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;binCont&apos; can be reduced." verbose="The scope of the variable &apos;binCont&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VRadialAcceptance.cpp">
            <location file="src/VRadialAcceptance.cpp" line="907" column="41"/>
            <symbol>binCont</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;x&apos; can be declared with const" verbose="Parameter &apos;x&apos; can be declared with const" cwe="398" file0="src/VRadialAcceptance.cpp">
            <location file="src/VRadialAcceptance.cpp" line="871" column="63" info="Parameter &apos;x&apos; can be declared with const"/>
            <symbol>x</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;par&apos; can be declared with const" verbose="Parameter &apos;par&apos; can be declared with const" cwe="398" file0="src/VRadialAcceptance.cpp">
            <location file="src/VRadialAcceptance.cpp" line="871" column="76" info="Parameter &apos;par&apos; can be declared with const"/>
            <symbol>par</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VReadRunParameter.cpp">
            <location file="src/VReadRunParameter.cpp" line="1690" column="13"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;run_min&apos; can be reduced." verbose="The scope of the variable &apos;run_min&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VReadRunParameter.cpp">
            <location file="src/VReadRunParameter.cpp" line="1983" column="17"/>
            <symbol>run_min</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;run_max&apos; can be reduced." verbose="The scope of the variable &apos;run_max&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VReadRunParameter.cpp">
            <location file="src/VReadRunParameter.cpp" line="1984" column="17"/>
            <symbol>run_max</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iTelNum&apos; can be reduced." verbose="The scope of the variable &apos;iTelNum&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VReadRunParameter.cpp">
            <location file="src/VReadRunParameter.cpp" line="2079" column="30"/>
            <symbol>iTelNum</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VRunStats.cpp">
            <location file="src/VRunStats.cpp" line="376" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VRunStats.cpp">
            <location file="src/VRunStats.cpp" line="462" column="9"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iMJD&apos; can be reduced." verbose="The scope of the variable &apos;iMJD&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VRunStats.cpp">
            <location file="src/VRunStats.cpp" line="401" column="17"/>
            <symbol>iMJD</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iTime&apos; can be reduced." verbose="The scope of the variable &apos;iTime&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VRunStats.cpp">
            <location file="src/VRunStats.cpp" line="402" column="20"/>
            <symbol>iTime</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iMJD&apos; can be reduced." verbose="The scope of the variable &apos;iMJD&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VRunStats.cpp">
            <location file="src/VRunStats.cpp" line="489" column="17"/>
            <symbol>iMJD</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iTime&apos; can be reduced." verbose="The scope of the variable &apos;iTime&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VRunStats.cpp">
            <location file="src/VRunStats.cpp" line="490" column="20"/>
            <symbol>iTime</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;l&apos; shadows outer variable" verbose="Local variable &apos;l&apos; shadows outer variable" cwe="398" file0="src/VRunStats.cpp">
            <location file="src/VRunStats.cpp" line="1688" column="35" info="Shadow variable"/>
            <location file="src/VRunStats.cpp" line="1191" column="12" info="Shadowed declaration"/>
            <symbol>l</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2769" column="9" info="Second condition"/>
            <location file="src/VSensitivityCalculator.cpp" line="2765" column="9" info="First condition"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;s&apos; can be reduced." verbose="The scope of the variable &apos;s&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="169" column="12"/>
            <symbol>s</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iE&apos; can be reduced." verbose="The scope of the variable &apos;iE&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="517" column="16"/>
            <symbol>iE</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iY&apos; can be reduced." verbose="The scope of the variable &apos;iY&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="518" column="16"/>
            <symbol>iY</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iE&apos; can be reduced." verbose="The scope of the variable &apos;iE&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="560" column="20"/>
            <symbol>iE</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iY&apos; can be reduced." verbose="The scope of the variable &apos;iY&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="561" column="20"/>
            <symbol>iY</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iE&apos; can be reduced." verbose="The scope of the variable &apos;iE&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="584" column="20"/>
            <symbol>iE</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iY&apos; can be reduced." verbose="The scope of the variable &apos;iY&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="585" column="20"/>
            <symbol>iY</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="1453" column="12"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iTotG&apos; can be reduced." verbose="The scope of the variable &apos;iTotG&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2259" column="12"/>
            <symbol>iTotG</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iTotB&apos; can be reduced." verbose="The scope of the variable &apos;iTotB&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2260" column="12"/>
            <symbol>iTotB</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bGoodBin&apos; can be reduced." verbose="The scope of the variable &apos;bGoodBin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2614" column="10"/>
            <symbol>bGoodBin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;e&apos; can be reduced." verbose="The scope of the variable &apos;e&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2730" column="16"/>
            <symbol>e</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;itheta2&apos; can be reduced." verbose="The scope of the variable &apos;itheta2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2732" column="16"/>
            <symbol>itheta2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3329" column="16"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3330" column="16"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_x&apos; can be reduced." verbose="The scope of the variable &apos;i_x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3331" column="13"/>
            <symbol>i_x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3471" column="12"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3472" column="12"/>
            <symbol>y</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;iMCR&apos; shadows outer variable" verbose="Local variable &apos;iMCR&apos; shadows outer variable" cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2128" column="35" info="Shadow variable"/>
            <location file="src/VSensitivityCalculator.cpp" line="2084" column="31" info="Shadowed declaration"/>
            <symbol>iMCR</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2540" column="22" info="Shadow variable"/>
            <location file="src/VSensitivityCalculator.cpp" line="2487" column="23" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2548" column="22" info="Shadow variable"/>
            <location file="src/VSensitivityCalculator.cpp" line="2487" column="23" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2566" column="31" info="Shadow variable"/>
            <location file="src/VSensitivityCalculator.cpp" line="2487" column="23" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;c&apos; shadows outer variable" verbose="Local variable &apos;c&apos; shadows outer variable" cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2714" column="27" info="Shadow variable"/>
            <location file="src/VSensitivityCalculator.cpp" line="2469" column="15" info="Shadowed declaration"/>
            <symbol>c</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;c&apos; shadows outer variable" verbose="Local variable &apos;c&apos; shadows outer variable" cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2739" column="31" info="Shadow variable"/>
            <location file="src/VSensitivityCalculator.cpp" line="2469" column="15" info="Shadowed declaration"/>
            <symbol>c</symbol>
        </error>
        <error id="incorrectStringBooleanError" severity="warning" msg="Conversion of string literal &quot;CTA-PHYSTREE&quot; to bool always evaluates to true." verbose="Conversion of string literal &quot;CTA-PHYSTREE&quot; to bool always evaluates to true." cwe="571" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="789" column="14"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;s&apos; is assigned a value that is never used." verbose="Variable &apos;s&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="169" column="14"/>
            <symbol>s</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iE&apos; is assigned a value that is never used." verbose="Variable &apos;iE&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="517" column="19"/>
            <symbol>iE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iY&apos; is assigned a value that is never used." verbose="Variable &apos;iY&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="518" column="19"/>
            <symbol>iY</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iE&apos; is assigned a value that is never used." verbose="Variable &apos;iE&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="560" column="23"/>
            <symbol>iE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iY&apos; is assigned a value that is never used." verbose="Variable &apos;iY&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="561" column="23"/>
            <symbol>iY</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iE&apos; is assigned a value that is never used." verbose="Variable &apos;iE&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="584" column="23"/>
            <symbol>iE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iY&apos; is assigned a value that is never used." verbose="Variable &apos;iY&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="585" column="23"/>
            <symbol>iY</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;s&apos; is assigned a value that is never used." verbose="Variable &apos;s&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="1451" column="14"/>
            <symbol>s</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="1453" column="14"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;e&apos; is assigned a value that is never used." verbose="Variable &apos;e&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2730" column="18"/>
            <symbol>e</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;itheta2&apos; is assigned a value that is never used." verbose="Variable &apos;itheta2&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2732" column="24"/>
            <symbol>itheta2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3329" column="18"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3330" column="18"/>
            <symbol>y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_x&apos; is assigned a value that is never used." verbose="Variable &apos;i_x&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3331" column="17"/>
            <symbol>i_x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3471" column="14"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3472" column="14"/>
            <symbol>y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;yN&apos; is assigned a value that is never used." verbose="Variable &apos;yN&apos; is assigned a value that is never used." cwe="563" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3599" column="19"/>
            <symbol>yN</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="1881" column="85"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="1894" column="85"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="1925" column="85"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2103" column="85"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2223" column="85"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="2969" column="89"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VSensitivityCalculator.cpp">
            <location file="src/VSensitivityCalculator.cpp" line="3151" column="79"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VShowerParameters.cpp">
            <location file="src/VShowerParameters.cpp" line="70" column="24" info="Second condition"/>
            <location file="src/VShowerParameters.cpp" line="65" column="14" info="First condition"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;m&apos; shadows outer variable" verbose="Local variable &apos;m&apos; shadows outer variable" cwe="398" file0="src/VSimpleStereoReconstructor.cpp">
            <location file="src/VSimpleStereoReconstructor.cpp" line="251" column="27" info="Shadow variable"/>
            <location file="src/VSimpleStereoReconstructor.cpp" line="98" column="21" info="Shadowed declaration"/>
            <symbol>m</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_cenx&apos; is assigned a value that is never used." verbose="Variable &apos;i_cenx&apos; is assigned a value that is never used." cwe="563" file0="src/VSimpleStereoReconstructor.cpp">
            <location file="src/VSimpleStereoReconstructor.cpp" line="295" column="18"/>
            <symbol>i_cenx</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_ceny&apos; is assigned a value that is never used." verbose="Variable &apos;i_ceny&apos; is assigned a value that is never used." cwe="563" file0="src/VSimpleStereoReconstructor.cpp">
            <location file="src/VSimpleStereoReconstructor.cpp" line="296" column="18"/>
            <symbol>i_ceny</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSourceGeometryFitter.cpp">
            <location file="src/VSourceGeometryFitter.cpp" line="464" column="20"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VSourceGeometryFitter.cpp">
            <location file="src/VSourceGeometryFitter.cpp" line="464" column="22"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VSourceGeometryFitter.cpp">
            <location file="src/VSourceGeometryFitter.cpp" line="465" column="22"/>
            <symbol>y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;t2&apos; is assigned a value that is never used." verbose="Variable &apos;t2&apos; is assigned a value that is never used." cwe="563" file0="src/VSourceGeometryFitter.cpp">
            <location file="src/VSourceGeometryFitter.cpp" line="466" column="23"/>
            <symbol>t2</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VSpecialChannel.cpp">
            <location file="src/VSpecialChannel.cpp" line="196" column="83"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VSpecialChannel.cpp">
            <location file="src/VSpecialChannel.cpp" line="208" column="75"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VSpectralEnergyDistribution.cpp">
            <location file="src/VSpectralEnergyDistribution.cpp" line="647" column="21" info="Second condition"/>
            <location file="src/VSpectralEnergyDistribution.cpp" line="642" column="21" info="First condition"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hname&apos; can be reduced." verbose="The scope of the variable &apos;hname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VSpectralEnergyDistribution.cpp">
            <location file="src/VSpectralEnergyDistribution.cpp" line="1258" column="22"/>
            <symbol>hname</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/VSpectralEnergyDistribution.cpp">
            <location file="src/VSpectralEnergyDistribution.cpp" line="1070" column="27" info="Shadow variable"/>
            <location file="src/VSpectralEnergyDistribution.cpp" line="1031" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x_rot&apos; can be reduced." verbose="The scope of the variable &apos;x_rot&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStarCatalogue.cpp">
            <location file="src/VStarCatalogue.cpp" line="1585" column="12"/>
            <symbol>x_rot</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y_rot&apos; can be reduced." verbose="The scope of the variable &apos;y_rot&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStarCatalogue.cpp">
            <location file="src/VStarCatalogue.cpp" line="1586" column="12"/>
            <symbol>y_rot</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iTemp&apos; is assigned a value that is never used." verbose="Variable &apos;iTemp&apos; is assigned a value that is never used." cwe="563" file0="src/VStarCatalogue.cpp">
            <location file="src/VStarCatalogue.cpp" line="965" column="15"/>
            <symbol>iTemp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x_rot&apos; is assigned a value that is never used." verbose="Variable &apos;x_rot&apos; is assigned a value that is never used." cwe="563" file0="src/VStarCatalogue.cpp">
            <location file="src/VStarCatalogue.cpp" line="1585" column="18"/>
            <symbol>x_rot</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y_rot&apos; is assigned a value that is never used." verbose="Variable &apos;y_rot&apos; is assigned a value that is never used." cwe="563" file0="src/VStarCatalogue.cpp">
            <location file="src/VStarCatalogue.cpp" line="1586" column="18"/>
            <symbol>y_rot</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VStereoAnalysis.cpp">
            <location file="src/VStereoAnalysis.cpp" line="55" column="9" info="Second condition"/>
            <location file="src/VStereoAnalysis.cpp" line="49" column="9" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VStereoAnalysis.cpp">
            <location file="src/VStereoAnalysis.cpp" line="744" column="26" info="Second condition"/>
            <location file="src/VStereoAnalysis.cpp" line="715" column="26" info="First condition"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;bDirectionCuts&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;bDirectionCuts&apos; is reassigned a value before the old one has been used." cwe="563" file0="src/VStereoAnalysis.cpp">
            <location file="src/VStereoAnalysis.cpp" line="577" column="28" info="bDirectionCuts is overwritten"/>
            <location file="src/VStereoAnalysis.cpp" line="575" column="28" info="bDirectionCuts is assigned"/>
            <symbol>bDirectionCuts</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_UTC&apos; is assigned a value that is never used." verbose="Variable &apos;i_UTC&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoAnalysis.cpp">
            <location file="src/VStereoAnalysis.cpp" line="456" column="18"/>
            <symbol>i_UTC</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VStereoHistograms.cpp">
            <location file="src/VStereoHistograms.cpp" line="744" column="111"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_weight&apos; can be reduced." verbose="The scope of the variable &apos;i_weight&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="158" column="12"/>
            <symbol>i_weight</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="515" column="12"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ix_start&apos; can be reduced." verbose="The scope of the variable &apos;ix_start&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="517" column="9"/>
            <symbol>ix_start</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ix_stopp&apos; can be reduced." verbose="The scope of the variable &apos;ix_stopp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="518" column="9"/>
            <symbol>ix_stopp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_xLE&apos; can be reduced." verbose="The scope of the variable &apos;i_xLE&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="553" column="12"/>
            <symbol>i_xLE</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_cx&apos; can be reduced." verbose="The scope of the variable &apos;i_cx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="800" column="16"/>
            <symbol>i_cx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;remo_iter&apos; can be reduced." verbose="The scope of the variable &apos;remo_iter&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1198" column="42"/>
            <symbol>remo_iter</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1350" column="16"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_cx&apos; can be reduced." verbose="The scope of the variable &apos;i_cx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1463" column="12"/>
            <symbol>i_cx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_cy&apos; can be reduced." verbose="The scope of the variable &apos;i_cy&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1464" column="12"/>
            <symbol>i_cy</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1685" column="12"/>
            <symbol>x</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;x_bin_wobble&apos; shadows outer variable" verbose="Local variable &apos;x_bin_wobble&apos; shadows outer variable" cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1013" column="13" info="Shadow variable"/>
            <location file="src/VStereoMaps.cpp" line="906" column="9" info="Shadowed declaration"/>
            <symbol>x_bin_wobble</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;y_bin_wobble&apos; shadows outer variable" verbose="Local variable &apos;y_bin_wobble&apos; shadows outer variable" cwe="398" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1017" column="13" info="Shadow variable"/>
            <location file="src/VStereoMaps.cpp" line="907" column="9" info="Shadowed declaration"/>
            <symbol>y_bin_wobble</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_xbin&apos; is assigned a value that is never used." verbose="Variable &apos;i_xbin&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="383" column="19"/>
            <symbol>i_xbin</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_ybin&apos; is assigned a value that is never used." verbose="Variable &apos;i_ybin&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="384" column="19"/>
            <symbol>i_ybin</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="515" column="14"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ix_start&apos; is assigned a value that is never used." verbose="Variable &apos;ix_start&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="517" column="18"/>
            <symbol>ix_start</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ix_stopp&apos; is assigned a value that is never used." verbose="Variable &apos;ix_stopp&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="518" column="18"/>
            <symbol>ix_stopp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="519" column="14"/>
            <symbol>y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_xLE&apos; is assigned a value that is never used." verbose="Variable &apos;i_xLE&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="553" column="18"/>
            <symbol>i_xLE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_yLE&apos; is assigned a value that is never used." verbose="Variable &apos;i_yLE&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="554" column="18"/>
            <symbol>i_yLE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_cx&apos; is assigned a value that is never used." verbose="Variable &apos;i_cx&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="800" column="21"/>
            <symbol>i_cx</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_cy&apos; is assigned a value that is never used." verbose="Variable &apos;i_cy&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="801" column="21"/>
            <symbol>i_cy</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_binDist&apos; is assigned a value that is never used." verbose="Variable &apos;i_binDist&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="802" column="26"/>
            <symbol>i_binDist</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ids&apos; is assigned a value that is never used." verbose="Variable &apos;ids&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1036" column="16"/>
            <symbol>ids</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1350" column="18"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1351" column="18"/>
            <symbol>y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_tAcc&apos; is assigned a value that is never used." verbose="Variable &apos;i_tAcc&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1355" column="23"/>
            <symbol>i_tAcc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_cx&apos; is assigned a value that is never used." verbose="Variable &apos;i_cx&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1463" column="17"/>
            <symbol>i_cx</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_cy&apos; is assigned a value that is never used." verbose="Variable &apos;i_cy&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1464" column="17"/>
            <symbol>i_cy</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;theta2&apos; is assigned a value that is never used." verbose="Variable &apos;theta2&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1533" column="19"/>
            <symbol>theta2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_phaseSpaceCorrection&apos; is assigned a value that is never used." verbose="Variable &apos;i_phaseSpaceCorrection&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1535" column="35"/>
            <symbol>i_phaseSpaceCorrection</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1685" column="14"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1686" column="14"/>
            <symbol>y</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;r&apos; is assigned a value that is never used." verbose="Variable &apos;r&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoMaps.cpp">
            <location file="src/VStereoMaps.cpp" line="1687" column="14"/>
            <symbol>r</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hname&apos; can be reduced." verbose="The scope of the variable &apos;hname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoReconstruction.cpp">
            <location file="src/VStereoReconstruction.cpp" line="79" column="10"/>
            <symbol>hname</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;htitle&apos; can be reduced." verbose="The scope of the variable &apos;htitle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoReconstruction.cpp">
            <location file="src/VStereoReconstruction.cpp" line="80" column="10"/>
            <symbol>htitle</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hNull&apos; can be reduced." verbose="The scope of the variable &apos;hNull&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VStereoReconstruction.cpp">
            <location file="src/VStereoReconstruction.cpp" line="82" column="11"/>
            <symbol>hNull</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hNull&apos; is assigned a value that is never used." verbose="Variable &apos;hNull&apos; is assigned a value that is never used." cwe="563" file0="src/VStereoReconstruction.cpp">
            <location file="src/VStereoReconstruction.cpp" line="82" column="17"/>
            <symbol>hNull</symbol>
        </error>
        <error id="arrayIndexThenCheck" severity="style" msg="Array index &apos;w&apos; is used before limits check." verbose="Defensive programming: The variable &apos;w&apos; is used as an array index before it is checked that is within limits. This can mean that the array might be accessed out of bounds. Reorder conditions such as &apos;(a[i] &amp;&amp; i &lt; 10)&apos; to &apos;(i &lt; 10 &amp;&amp; a[i])&apos;. That way the array will not be accessed if the index is out of limits." cwe="398" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="1624" column="19"/>
            <symbol>w</symbol>
        </error>
        <error id="arrayIndexThenCheck" severity="style" msg="Array index &apos;w&apos; is used before limits check." verbose="Defensive programming: The variable &apos;w&apos; is used as an array index before it is checked that is within limits. This can mean that the array might be accessed out of bounds. Reorder conditions such as &apos;(a[i] &amp;&amp; i &lt; 10)&apos; to &apos;(i &lt; 10 &amp;&amp; a[i])&apos;. That way the array will not be accessed if the index is out of limits." cwe="398" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="1682" column="19"/>
            <symbol>w</symbol>
        </error>
        <error id="arrayIndexThenCheck" severity="style" msg="Array index &apos;w&apos; is used before limits check." verbose="Defensive programming: The variable &apos;w&apos; is used as an array index before it is checked that is within limits. This can mean that the array might be accessed out of bounds. Reorder conditions such as &apos;(a[i] &amp;&amp; i &lt; 10)&apos; to &apos;(i &lt; 10 &amp;&amp; a[i])&apos;. That way the array will not be accessed if the index is out of limits." cwe="398" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="1765" column="29"/>
            <symbol>w</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;i_dE&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;i_dE&apos;. The initialized value is overwritten before it is read." cwe="563" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="2272" column="10" info="i_dE is overwritten"/>
            <location file="src/VTMVAEvaluator.cpp" line="2269" column="17" info="i_dE is initialized"/>
            <symbol>i_dE</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_xmax&apos; can be reduced." verbose="The scope of the variable &apos;i_xmax&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="2604" column="16"/>
            <symbol>i_xmax</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;eS&apos; can be reduced." verbose="The scope of the variable &apos;eS&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="2878" column="12"/>
            <symbol>eS</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;eB&apos; can be reduced." verbose="The scope of the variable &apos;eB&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="2879" column="12"/>
            <symbol>eB</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;z&apos; can be reduced." verbose="The scope of the variable &apos;z&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="2926" column="9"/>
            <symbol>z</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iC&apos; can be reduced." verbose="The scope of the variable &apos;iC&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="3130" column="12"/>
            <symbol>iC</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iR&apos; can be reduced." verbose="The scope of the variable &apos;iR&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="3131" column="12"/>
            <symbol>iR</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;hnull&apos; shadows outer variable" verbose="Local variable &apos;hnull&apos; shadows outer variable" cwe="398" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="1379" column="15" info="Shadow variable"/>
            <location file="src/VTMVAEvaluator.cpp" line="1335" column="11" info="Shadowed declaration"/>
            <symbol>hnull</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;z&apos; shadows outer variable" verbose="Local variable &apos;z&apos; shadows outer variable" cwe="398" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="2040" column="23" info="Shadow variable"/>
            <location file="src/VTMVAEvaluator.cpp" line="2021" column="18" info="Shadowed declaration"/>
            <symbol>z</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nVar&apos; is assigned a value that is never used." verbose="Variable &apos;nVar&apos; is assigned a value that is never used." cwe="563" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="115" column="14"/>
            <symbol>nVar</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iMeanEnergy&apos; is assigned a value that is never used." verbose="Variable &apos;iMeanEnergy&apos; is assigned a value that is never used." cwe="563" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="1117" column="30"/>
            <symbol>iMeanEnergy</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iG&apos; is assigned a value that is never used." verbose="Variable &apos;iG&apos; is assigned a value that is never used." cwe="563" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="1486" column="27"/>
            <symbol>iG</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;e_log10_G&apos; is assigned a value that is never used." verbose="Variable &apos;e_log10_G&apos; is assigned a value that is never used." cwe="563" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="1740" column="23"/>
            <symbol>e_log10_G</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;e_log10_G&apos; is assigned a value that is never used." verbose="Variable &apos;e_log10_G&apos; is assigned a value that is never used." cwe="563" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="1840" column="23"/>
            <symbol>e_log10_G</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;q&apos; is assigned a value that is never used." verbose="Variable &apos;q&apos; is assigned a value that is never used." cwe="563" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="2877" column="14"/>
            <symbol>q</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;eS&apos; is assigned a value that is never used." verbose="Variable &apos;eS&apos; is assigned a value that is never used." cwe="563" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="2878" column="15"/>
            <symbol>eS</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;eB&apos; is assigned a value that is never used." verbose="Variable &apos;eB&apos; is assigned a value that is never used." cwe="563" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="2879" column="15"/>
            <symbol>eB</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iC&apos; is assigned a value that is never used." verbose="Variable &apos;iC&apos; is assigned a value that is never used." cwe="563" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="3130" column="15"/>
            <symbol>iC</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iR&apos; is assigned a value that is never used." verbose="Variable &apos;iR&apos; is assigned a value that is never used." cwe="563" file0="src/VTMVAEvaluator.cpp">
            <location file="src/VTMVAEvaluator.cpp" line="3131" column="15"/>
            <symbol>iR</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VTS.analyzeMuonRings.cpp">
            <location file="src/VTS.analyzeMuonRings.cpp" line="128" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%i in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%i in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VTS.analyzeMuonRings.cpp">
            <location file="src/VTS.analyzeMuonRings.cpp" line="223" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%i in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%i in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VTS.analyzeMuonRings.cpp">
            <location file="src/VTS.analyzeMuonRings.cpp" line="248" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%i in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%i in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VTS.analyzeMuonRings.cpp">
            <location file="src/VTS.analyzeMuonRings.cpp" line="336" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%i in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%i in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VTS.analyzeMuonRings.cpp">
            <location file="src/VTS.analyzeMuonRings.cpp" line="351" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%i in format string (no. 6) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%i in format string (no. 6) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VTS.analyzeMuonRings.cpp">
            <location file="src/VTS.analyzeMuonRings.cpp" line="362" column="17"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared with const" verbose="Parameter &apos;argv&apos; can be declared with const" cwe="398" file0="src/VTS.analyzeMuonRings.cpp">
            <location file="src/VTS.analyzeMuonRings.cpp" line="25" column="27" info="Parameter &apos;argv&apos; can be declared with const"/>
            <symbol>argv</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;t&apos; shadows outer variable" verbose="Local variable &apos;t&apos; shadows outer variable" cwe="398" file0="src/VTS.calculateCrabRateFromMC.cpp">
            <location file="src/VTS.calculateCrabRateFromMC.cpp" line="160" column="27" info="Shadow variable"/>
            <location file="src/VTS.calculateCrabRateFromMC.cpp" line="78" column="12" info="Shadowed declaration"/>
            <symbol>t</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared with const" verbose="Parameter &apos;argv&apos; can be declared with const" cwe="398" file0="src/VTS.calculateExposureFromDB.cpp">
            <location file="src/VTS.calculateExposureFromDB.cpp" line="14" column="27" info="Parameter &apos;argv&apos; can be declared with const"/>
            <symbol>argv</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tmpelev&apos; can be reduced." verbose="The scope of the variable &apos;tmpelev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp">
            <location file="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp" line="225" column="12"/>
            <symbol>tmpelev</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tmpazim&apos; can be reduced." verbose="The scope of the variable &apos;tmpazim&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp">
            <location file="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp" line="226" column="12"/>
            <symbol>tmpazim</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;withinBounds&apos; can be reduced." verbose="The scope of the variable &apos;withinBounds&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp">
            <location file="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp" line="237" column="10"/>
            <symbol>withinBounds</symbol>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;decl.size()==0&apos; is redundant or expression &apos;decl[i_row]&apos; cause access out of bounds." verbose="Either the condition &apos;decl.size()==0&apos; is redundant or expression &apos;decl[i_row]&apos; cause access out of bounds." cwe="398" file0="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp">
            <location file="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp" line="244" column="35" info="Access out of bounds"/>
            <location file="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp" line="279" column="25" info="Assuming that condition &apos;decl.size()==0&apos; is not redundant"/>
            <symbol>decl</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tmpelev&apos; is assigned a value that is never used." verbose="Variable &apos;tmpelev&apos; is assigned a value that is never used." cwe="563" file0="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp">
            <location file="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp" line="225" column="20"/>
            <symbol>tmpelev</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tmpazim&apos; is assigned a value that is never used." verbose="Variable &apos;tmpazim&apos; is assigned a value that is never used." cwe="563" file0="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp">
            <location file="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp" line="226" column="20"/>
            <symbol>tmpazim</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;withinBounds&apos; is assigned a value that is never used." verbose="Variable &apos;withinBounds&apos; is assigned a value that is never used." cwe="563" file0="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp">
            <location file="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp" line="237" column="30"/>
            <symbol>withinBounds</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tdiff&apos; is assigned a value that is never used." verbose="Variable &apos;tdiff&apos; is assigned a value that is never used." cwe="563" file0="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp">
            <location file="src/VTS.getObservingTimesWithinTimeAzElBounds.cpp" line="238" column="20"/>
            <symbol>tdiff</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VTS.getRun_TimeElevAzim.cpp">
            <location file="src/VTS.getRun_TimeElevAzim.cpp" line="250" column="13"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;runnumber&apos; is assigned a value that is never used." verbose="Variable &apos;runnumber&apos; is assigned a value that is never used." cwe="563" file0="src/VTS.getRun_TimeElevAzim.cpp">
            <location file="src/VTS.getRun_TimeElevAzim.cpp" line="112" column="19"/>
            <symbol>runnumber</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fGamma&apos; can be reduced." verbose="The scope of the variable &apos;fGamma&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTS.next_day.cpp">
            <location file="src/VTS.next_day.cpp" line="59" column="12"/>
            <symbol>fGamma</symbol>
        </error>
        <error id="identicalInnerCondition" severity="warning" msg="Identical inner &apos;if&apos; condition is always true." verbose="Identical inner &apos;if&apos; condition is always true (outer condition is &apos;h&apos; and inner condition is &apos;h&apos;)." cwe="398" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="517" column="25" info="identical inner condition: h"/>
            <location file="src/VTableCalculator.cpp" line="514" column="21" info="outer condition: h"/>
        </error>
        <error id="identicalInnerCondition" severity="warning" msg="Identical inner &apos;if&apos; condition is always true." verbose="Identical inner &apos;if&apos; condition is always true (outer condition is &apos;h&apos; and inner condition is &apos;h&apos;)." cwe="398" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="532" column="25" info="identical inner condition: h"/>
            <location file="src/VTableCalculator.cpp" line="529" column="21" info="outer condition: h"/>
        </error>
        <error id="identicalInnerCondition" severity="warning" msg="Identical inner &apos;if&apos; condition is always true." verbose="Identical inner &apos;if&apos; condition is always true (outer condition is &apos;h&apos; and inner condition is &apos;h&apos;)." cwe="398" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="547" column="25" info="identical inner condition: h"/>
            <location file="src/VTableCalculator.cpp" line="544" column="21" info="outer condition: h"/>
        </error>
        <error id="identicalInnerCondition" severity="warning" msg="Identical inner &apos;if&apos; condition is always true." verbose="Identical inner &apos;if&apos; condition is always true (outer condition is &apos;h&apos; and inner condition is &apos;h&apos;)." cwe="398" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="562" column="25" info="identical inner condition: h"/>
            <location file="src/VTableCalculator.cpp" line="559" column="21" info="outer condition: h"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="100" column="9"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;j&apos; can be reduced." verbose="The scope of the variable &apos;j&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="101" column="9"/>
            <symbol>j</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="100" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;j&apos; is assigned a value that is never used." verbose="Variable &apos;j&apos; is assigned a value that is never used." cwe="563" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="101" column="11"/>
            <symbol>j</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;med&apos; is assigned a value that is never used." verbose="Variable &apos;med&apos; is assigned a value that is never used." cwe="563" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="410" column="19"/>
            <symbol>med</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;h&apos; is assigned a value that is never used." verbose="Variable &apos;h&apos; is assigned a value that is never used." cwe="563" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="495" column="21"/>
            <symbol>h</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ir&apos; is assigned a value that is never used." verbose="Variable &apos;ir&apos; is assigned a value that is never used." cwe="563" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="669" column="16"/>
            <symbol>ir</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;med&apos; is assigned a value that is never used." verbose="Variable &apos;med&apos; is assigned a value that is never used." cwe="563" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="765" column="20"/>
            <symbol>med</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sigma&apos; is assigned a value that is never used." verbose="Variable &apos;sigma&apos; is assigned a value that is never used." cwe="563" file0="src/VTableCalculator.cpp">
            <location file="src/VTableCalculator.cpp" line="766" column="22"/>
            <symbol>sigma</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="987" column="41" info="Second condition"/>
            <location file="src/VTableLookup.cpp" line="975" column="41" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="1136" column="41" info="Second condition"/>
            <location file="src/VTableLookup.cpp" line="1125" column="41" info="First condition"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;iPrint==true&apos; is always false" verbose="Condition &apos;iPrint==true&apos; is always false" cwe="570" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="654" column="32" info="Condition &apos;iPrint==true&apos; is always false"/>
            <location file="src/VTableLookup.cpp" line="646" column="24" info="Assuming that condition &apos;iPrint==true&apos; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;iPrint==true&apos; is always false" verbose="Condition &apos;iPrint==true&apos; is always false" cwe="570" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="673" column="36" info="Condition &apos;iPrint==true&apos; is always false"/>
            <location file="src/VTableLookup.cpp" line="665" column="28" info="Assuming that condition &apos;iPrint==true&apos; is not redundant"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iEventWeight&apos; can be reduced." verbose="The scope of the variable &apos;iEventWeight&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="736" column="12"/>
            <symbol>iEventWeight</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fevent&apos; can be reduced." verbose="The scope of the variable &apos;fevent&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="738" column="9"/>
            <symbol>fevent</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fevent&apos; can be reduced." verbose="The scope of the variable &apos;fevent&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="870" column="9"/>
            <symbol>fevent</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fnmscw&apos; can be reduced." verbose="The scope of the variable &apos;fnmscw&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="947" column="13"/>
            <symbol>fnmscw</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iEventWeight&apos; is assigned a value that is never used." verbose="Variable &apos;iEventWeight&apos; is assigned a value that is never used." cwe="563" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="736" column="25"/>
            <symbol>iEventWeight</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fevent&apos; is assigned a value that is never used." verbose="Variable &apos;fevent&apos; is assigned a value that is never used." cwe="563" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="738" column="16"/>
            <symbol>fevent</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fevent&apos; is assigned a value that is never used." verbose="Variable &apos;fevent&apos; is assigned a value that is never used." cwe="563" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="870" column="16"/>
            <symbol>fevent</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fevent&apos; is assigned a value that is never used." verbose="Variable &apos;fevent&apos; is assigned a value that is never used." cwe="563" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="1414" column="15"/>
            <symbol>fevent</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iTitle&apos; is assigned a value that is never used." verbose="Variable &apos;iTitle&apos; is assigned a value that is never used." cwe="563" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="1950" column="23"/>
            <symbol>iTitle</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="132" column="81"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="210" column="81"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="448" column="81"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="1431" column="81"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VTableLookup.cpp">
            <location file="src/VTableLookup.cpp" line="1482" column="85"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VTableLookupDataHandler.cpp">
            <location file="src/VTableLookupDataHandler.cpp" line="1619" column="13" info="Second condition"/>
            <location file="src/VTableLookupDataHandler.cpp" line="1615" column="13" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VTableLookupDataHandler.cpp">
            <location file="src/VTableLookupDataHandler.cpp" line="1623" column="13" info="Second condition"/>
            <location file="src/VTableLookupDataHandler.cpp" line="1619" column="13" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VTableLookupDataHandler.cpp">
            <location file="src/VTableLookupDataHandler.cpp" line="1627" column="13" info="Second condition"/>
            <location file="src/VTableLookupDataHandler.cpp" line="1623" column="13" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VTableLookupDataHandler.cpp">
            <location file="src/VTableLookupDataHandler.cpp" line="1656" column="9" info="Second condition"/>
            <location file="src/VTableLookupDataHandler.cpp" line="1652" column="9" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VTableLookupDataHandler.cpp">
            <location file="src/VTableLookupDataHandler.cpp" line="1669" column="9" info="Second condition"/>
            <location file="src/VTableLookupDataHandler.cpp" line="1665" column="9" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VTableLookupDataHandler.cpp">
            <location file="src/VTableLookupDataHandler.cpp" line="1679" column="9" info="Second condition"/>
            <location file="src/VTableLookupDataHandler.cpp" line="1675" column="9" info="First condition"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_pix_id&apos; can be reduced." verbose="The scope of the variable &apos;i_pix_id&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTableLookupDataHandler.cpp">
            <location file="src/VTableLookupDataHandler.cpp" line="619" column="30"/>
            <symbol>i_pix_id</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iMC_his&apos; can be reduced." verbose="The scope of the variable &apos;iMC_his&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTableLookupDataHandler.cpp">
            <location file="src/VTableLookupDataHandler.cpp" line="2296" column="43"/>
            <symbol>iMC_his</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="src/VTableLookupRunParameter.cpp">
            <location file="src/VTableLookupRunParameter.cpp" line="130" column="18"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iW&apos; is assigned a value that is never used." verbose="Variable &apos;iW&apos; is assigned a value that is never used." cwe="563" file0="src/VTableLookupRunParameter.cpp">
            <location file="src/VTableLookupRunParameter.cpp" line="729" column="15"/>
            <symbol>iW</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VTimeMask.cpp">
            <location file="src/VTimeMask.cpp" line="654" column="9" info="Second condition"/>
            <location file="src/VTimeMask.cpp" line="650" column="9" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VTimeMask.cpp">
            <location file="src/VTimeMask.cpp" line="666" column="13" info="Second condition"/>
            <location file="src/VTimeMask.cpp" line="662" column="13" info="First condition"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;currMJD&apos; can be reduced." verbose="The scope of the variable &apos;currMJD&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VTimeMask.cpp">
            <location file="src/VTimeMask.cpp" line="831" column="12"/>
            <symbol>currMJD</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;currMJD&apos; is assigned a value that is never used." verbose="Variable &apos;currMJD&apos; is assigned a value that is never used." cwe="563" file0="src/VTimeMask.cpp">
            <location file="src/VTimeMask.cpp" line="831" column="20"/>
            <symbol>currMJD</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;m_pos&apos; shadows outer variable" verbose="Local variable &apos;m_pos&apos; shadows outer variable" cwe="398" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="361" column="31" info="Shadow variable"/>
            <location file="src/VTraceHandler.cpp" line="299" column="18" info="Shadowed declaration"/>
            <symbol>m_pos</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;m_pos&apos; is assigned a value that is never used." verbose="Variable &apos;m_pos&apos; is assigned a value that is never used." cwe="563" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="299" column="24"/>
            <symbol>m_pos</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_trace&apos; is assigned a value that is never used." verbose="Variable &apos;i_trace&apos; is assigned a value that is never used." cwe="563" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="302" column="20"/>
            <symbol>i_trace</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ampl&apos; is assigned a value that is never used." verbose="Variable &apos;ampl&apos; is assigned a value that is never used." cwe="563" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="628" column="17"/>
            <symbol>ampl</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;charge&apos; is assigned a value that is never used." verbose="Variable &apos;charge&apos; is assigned a value that is never used." cwe="563" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="656" column="20"/>
            <symbol>charge</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ampl&apos; is assigned a value that is never used." verbose="Variable &apos;ampl&apos; is assigned a value that is never used." cwe="563" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="708" column="10"/>
            <symbol>ampl</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;max&apos; is assigned a value that is never used." verbose="Variable &apos;max&apos; is assigned a value that is never used." cwe="563" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="721" column="13"/>
            <symbol>max</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ampl&apos; is assigned a value that is never used." verbose="Variable &apos;ampl&apos; is assigned a value that is never used." cwe="563" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="735" column="42"/>
            <symbol>ampl</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;arrtime2&apos; is assigned a value that is never used." verbose="Variable &apos;arrtime2&apos; is assigned a value that is never used." cwe="563" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="856" column="18"/>
            <symbol>arrtime2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ampl&apos; is assigned a value that is never used." verbose="Variable &apos;ampl&apos; is assigned a value that is never used." cwe="563" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="858" column="10"/>
            <symbol>ampl</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;chargeAutoWin&apos; is assigned a value that is never used." verbose="Variable &apos;chargeAutoWin&apos; is assigned a value that is never used." cwe="563" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="865" column="25"/>
            <symbol>chargeAutoWin</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;chargeAutoWin&apos; is assigned a value that is never used." verbose="Variable &apos;chargeAutoWin&apos; is assigned a value that is never used." cwe="563" file0="src/VTraceHandler.cpp">
            <location file="src/VTraceHandler.cpp" line="894" column="23"/>
            <symbol>chargeAutoWin</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pos&apos; is assigned a value that is never used." verbose="Variable &apos;pos&apos; is assigned a value that is never used." cwe="563" file0="src/VUtilities.cpp">
            <location file="src/VUtilities.cpp" line="99" column="27"/>
            <symbol>pos</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pos&apos; is assigned a value that is never used." verbose="Variable &apos;pos&apos; is assigned a value that is never used." cwe="563" file0="src/VUtilities.cpp">
            <location file="src/VUtilities.cpp" line="125" column="27"/>
            <symbol>pos</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/VUtilities.cpp">
            <location file="src/VUtilities.cpp" line="43" column="39"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="src/VWPPhysSensitivityFile.cpp">
            <location file="src/VWPPhysSensitivityFile.cpp" line="139" column="24" info="Second condition"/>
            <location file="src/VWPPhysSensitivityFile.cpp" line="133" column="24" info="First condition"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/VWPPhysSensitivityFile.cpp">
            <location file="src/VWPPhysSensitivityFile.cpp" line="522" column="17"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hname&apos; can be reduced." verbose="The scope of the variable &apos;hname&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VZDCF.cpp">
            <location file="src/VZDCF.cpp" line="178" column="10"/>
            <symbol>hname</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;htitle&apos; can be reduced." verbose="The scope of the variable &apos;htitle&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/VZDCF.cpp">
            <location file="src/VZDCF.cpp" line="179" column="10"/>
            <symbol>htitle</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="490" column="13"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iMoonE&apos; can be reduced." verbose="The scope of the variable &apos;iMoonE&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="224" column="12"/>
            <symbol>iMoonE</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iSunE&apos; can be reduced." verbose="The scope of the variable &apos;iSunE&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="225" column="12"/>
            <symbol>iSunE</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iObjE&apos; can be reduced." verbose="The scope of the variable &apos;iObjE&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="226" column="12"/>
            <symbol>iObjE</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iMoonF&apos; can be reduced." verbose="The scope of the variable &apos;iMoonF&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="227" column="12"/>
            <symbol>iMoonF</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fNObj&apos; is assigned a value that is never used." verbose="Variable &apos;fNObj&apos; is assigned a value that is never used." cwe="563" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="210" column="24"/>
            <symbol>fNObj</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iMoonE&apos; is assigned a value that is never used." verbose="Variable &apos;iMoonE&apos; is assigned a value that is never used." cwe="563" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="224" column="19"/>
            <symbol>iMoonE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iSunE&apos; is assigned a value that is never used." verbose="Variable &apos;iSunE&apos; is assigned a value that is never used." cwe="563" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="225" column="18"/>
            <symbol>iSunE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iObjE&apos; is assigned a value that is never used." verbose="Variable &apos;iObjE&apos; is assigned a value that is never used." cwe="563" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="226" column="18"/>
            <symbol>iObjE</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iMoonF&apos; is assigned a value that is never used." verbose="Variable &apos;iMoonF&apos; is assigned a value that is never used." cwe="563" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="227" column="19"/>
            <symbol>iMoonF</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fPhase&apos; is assigned a value that is never used." verbose="Variable &apos;fPhase&apos; is assigned a value that is never used." cwe="563" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="236" column="19"/>
            <symbol>fPhase</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_oldMJD&apos; is assigned a value that is never used." verbose="Variable &apos;i_oldMJD&apos; is assigned a value that is never used." cwe="563" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="368" column="14"/>
            <symbol>i_oldMJD</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_newMJD&apos; is assigned a value that is never used." verbose="Variable &apos;i_newMJD&apos; is assigned a value that is never used." cwe="563" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="369" column="14"/>
            <symbol>i_newMJD</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i_oldMJD&apos; is assigned a value that is never used." verbose="Variable &apos;i_oldMJD&apos; is assigned a value that is never used." cwe="563" file0="src/binaryVisibility.cpp">
            <location file="src/binaryVisibility.cpp" line="396" column="22"/>
            <symbol>i_oldMJD</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared with const" verbose="Parameter &apos;argv&apos; can be declared with const" cwe="398" file0="src/combineDISPTables.cpp">
            <location file="src/combineDISPTables.cpp" line="22" column="27" info="Parameter &apos;argv&apos; can be declared with const"/>
            <symbol>argv</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fIn&apos; can be reduced." verbose="The scope of the variable &apos;fIn&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/combineLookupTables.cpp">
            <location file="src/combineLookupTables.cpp" line="241" column="12"/>
            <symbol>fIn</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fIn&apos; is assigned a value that is never used." verbose="Variable &apos;fIn&apos; is assigned a value that is never used." cwe="563" file0="src/combineLookupTables.cpp">
            <location file="src/combineLookupTables.cpp" line="241" column="16"/>
            <symbol>fIn</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared with const" verbose="Parameter &apos;argv&apos; can be declared with const" cwe="398" file0="src/fillDL2Trees.cpp">
            <location file="src/fillDL2Trees.cpp" line="38" column="27" info="Parameter &apos;argv&apos; can be declared with const"/>
            <symbol>argv</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared with const" verbose="Parameter &apos;argv&apos; can be declared with const" cwe="398" file0="src/logFile.cpp">
            <location file="src/logFile.cpp" line="40" column="27" info="Parameter &apos;argv&apos; can be declared with const"/>
            <symbol>argv</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: temp2" verbose="Unused variable: temp2" cwe="563" file0="src/makeDISPTables.cpp">
            <location file="src/makeDISPTables.cpp" line="72" column="12"/>
            <symbol>temp2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fMC_histoFile&apos; can be reduced." verbose="The scope of the variable &apos;fMC_histoFile&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/makeEffectiveArea.cpp">
            <location file="src/makeEffectiveArea.cpp" line="150" column="12"/>
            <symbol>fMC_histoFile</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;c&apos; shadows outer variable" verbose="Local variable &apos;c&apos; shadows outer variable" cwe="398" file0="src/makeEffectiveArea.cpp">
            <location file="src/makeEffectiveArea.cpp" line="416" column="26" info="Shadow variable"/>
            <location file="src/makeEffectiveArea.cpp" line="212" column="13" info="Shadowed declaration"/>
            <symbol>c</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;fMC_histoFile&apos; is assigned a value that is never used." verbose="Variable &apos;fMC_histoFile&apos; is assigned a value that is never used." cwe="563" file0="src/makeEffectiveArea.cpp">
            <location file="src/makeEffectiveArea.cpp" line="150" column="26"/>
            <symbol>fMC_histoFile</symbol>
        </error>
        <error id="identicalInnerCondition" severity="warning" msg="Identical inner &apos;if&apos; condition is always true." verbose="Identical inner &apos;if&apos; condition is always true (outer condition is &apos;facc_az[a]&apos; and inner condition is &apos;facc_az[a]&apos;)." cwe="398" file0="src/makeRadialAcceptance.cpp">
            <location file="src/makeRadialAcceptance.cpp" line="448" column="30" info="identical inner condition: facc_az[a]"/>
            <location file="src/makeRadialAcceptance.cpp" line="446" column="25" info="outer condition: facc_az[a]"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x_rotJ2000&apos; can be reduced." verbose="The scope of the variable &apos;x_rotJ2000&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/makeRadialAcceptance.cpp">
            <location file="src/makeRadialAcceptance.cpp" line="390" column="16"/>
            <symbol>x_rotJ2000</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y_rotJ2000&apos; can be reduced." verbose="The scope of the variable &apos;y_rotJ2000&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/makeRadialAcceptance.cpp">
            <location file="src/makeRadialAcceptance.cpp" line="391" column="16"/>
            <symbol>y_rotJ2000</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/makeRadialAcceptance.cpp">
            <location file="src/makeRadialAcceptance.cpp" line="298" column="31" info="Shadow variable"/>
            <location file="src/makeRadialAcceptance.cpp" line="265" column="23" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fMC&apos; can be reduced." verbose="The scope of the variable &apos;fMC&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/printRunParameter.cpp">
            <location file="src/printRunParameter.cpp" line="622" column="27"/>
            <symbol>fMC</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iPara&apos; should be passed by const reference." verbose="Parameter &apos;iPara&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/printRunParameter.cpp">
            <location file="src/printRunParameter.cpp" line="287" column="46"/>
            <symbol>iPara</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iPara&apos; should be passed by const reference." verbose="Parameter &apos;iPara&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/printRunParameter.cpp">
            <location file="src/printRunParameter.cpp" line="331" column="43"/>
            <symbol>iPara</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iPara&apos; should be passed by const reference." verbose="Parameter &apos;iPara&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/printRunParameter.cpp">
            <location file="src/printRunParameter.cpp" line="415" column="42"/>
            <symbol>iPara</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/printRunParameter.cpp">
            <location file="src/printRunParameter.cpp" line="244" column="17"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/printRunParameter.cpp">
            <location file="src/printRunParameter.cpp" line="261" column="21"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared with const" verbose="Parameter &apos;argv&apos; can be declared with const" cwe="398" file0="src/smoothLookupTables.cpp">
            <location file="src/smoothLookupTables.cpp" line="151" column="27" info="Parameter &apos;argv&apos; can be declared with const"/>
            <symbol>argv</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;writePacket&apos; is always true" verbose="Condition &apos;writePacket&apos; is always true" cwe="571" file0="src/splitVBF.cpp">
            <location file="src/splitVBF.cpp" line="155" column="16" info="Condition &apos;writePacket&apos; is always true"/>
            <location file="src/splitVBF.cpp" line="121" column="27" info="Assignment &apos;writePacket=true&apos;, assigned value is 1"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;rootfile&apos; should be passed by const reference." verbose="Parameter &apos;rootfile&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/testEvndispOutput.cpp">
            <location file="src/testEvndispOutput.cpp" line="37" column="27"/>
            <symbol>rootfile</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared with const" verbose="Parameter &apos;argv&apos; can be declared with const" cwe="398" file0="src/testEvndispOutput.cpp">
            <location file="src/testEvndispOutput.cpp" line="54" column="27" info="Parameter &apos;argv&apos; can be declared with const"/>
            <symbol>argv</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iTargetML&apos; should be passed by const reference." verbose="Parameter &apos;iTargetML&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/trainTMVAforAngularReconstruction.cpp">
            <location file="src/trainTMVAforAngularReconstruction.cpp" line="318" column="31"/>
            <symbol>iTargetML</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iDataDirectory&apos; should be passed by const reference." verbose="Parameter &apos;iDataDirectory&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/trainTMVAforAngularReconstruction.cpp">
            <location file="src/trainTMVAforAngularReconstruction.cpp" line="318" column="69"/>
            <symbol>iDataDirectory</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iInputFile&apos; should be passed by const reference." verbose="Parameter &apos;iInputFile&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/trainTMVAforAngularReconstruction.cpp">
            <location file="src/trainTMVAforAngularReconstruction.cpp" line="404" column="38"/>
            <symbol>iInputFile</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iArrayList&apos; should be passed by const reference." verbose="Parameter &apos;iArrayList&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/trainTMVAforAngularReconstruction.cpp">
            <location file="src/trainTMVAforAngularReconstruction.cpp" line="405" column="53"/>
            <symbol>iArrayList</symbol>
        </error>
        <error id="multiCondition" severity="style" msg="Expression is always true because &apos;else if&apos; condition is opposite to previous condition at line 450." verbose="Expression is always true because &apos;else if&apos; condition is opposite to previous condition at line 450." cwe="398" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="473" column="38" info="else if condition is opposite to first condition"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="450" column="33" info="first condition"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." verbose="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." cwe="476" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="108" column="5" info="Null pointer dereference"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="135" column="18" info="Assuming that condition &apos;!iDataTree_reduced&apos; is not redundant"/>
            <symbol>iDataTree_reduced</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." verbose="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." cwe="476" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="109" column="5" info="Null pointer dereference"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="135" column="18" info="Assuming that condition &apos;!iDataTree_reduced&apos; is not redundant"/>
            <symbol>iDataTree_reduced</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." verbose="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." cwe="476" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="110" column="5" info="Null pointer dereference"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="135" column="18" info="Assuming that condition &apos;!iDataTree_reduced&apos; is not redundant"/>
            <symbol>iDataTree_reduced</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." verbose="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." cwe="476" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="111" column="5" info="Null pointer dereference"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="135" column="18" info="Assuming that condition &apos;!iDataTree_reduced&apos; is not redundant"/>
            <symbol>iDataTree_reduced</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." verbose="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." cwe="476" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="112" column="5" info="Null pointer dereference"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="135" column="18" info="Assuming that condition &apos;!iDataTree_reduced&apos; is not redundant"/>
            <symbol>iDataTree_reduced</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." verbose="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." cwe="476" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="113" column="5" info="Null pointer dereference"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="135" column="18" info="Assuming that condition &apos;!iDataTree_reduced&apos; is not redundant"/>
            <symbol>iDataTree_reduced</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." verbose="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." cwe="476" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="114" column="5" info="Null pointer dereference"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="135" column="18" info="Assuming that condition &apos;!iDataTree_reduced&apos; is not redundant"/>
            <symbol>iDataTree_reduced</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." verbose="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." cwe="476" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="115" column="5" info="Null pointer dereference"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="135" column="18" info="Assuming that condition &apos;!iDataTree_reduced&apos; is not redundant"/>
            <symbol>iDataTree_reduced</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." verbose="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." cwe="476" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="116" column="5" info="Null pointer dereference"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="135" column="18" info="Assuming that condition &apos;!iDataTree_reduced&apos; is not redundant"/>
            <symbol>iDataTree_reduced</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." verbose="Either the condition &apos;!iDataTree_reduced&apos; is redundant or there is possible null pointer dereference: iDataTree_reduced." cwe="476" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="117" column="5" info="Null pointer dereference"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="135" column="18" info="Assuming that condition &apos;!iDataTree_reduced&apos; is not redundant"/>
            <symbol>iDataTree_reduced</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="477" column="31" info="Shadow variable"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="436" column="23" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="481" column="31" info="Shadow variable"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="436" column="23" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="485" column="31" info="Shadow variable"/>
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="436" column="23" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;a&apos; should be passed by const reference." verbose="Parameter &apos;a&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="43" column="44"/>
            <symbol>a</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;fRunOption&apos; should be passed by const reference." verbose="Parameter &apos;fRunOption&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="226" column="41"/>
            <symbol>fRunOption</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;fRunOption&apos; should be passed by const reference." verbose="Parameter &apos;fRunOption&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="233" column="41"/>
            <symbol>fRunOption</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;fRunOption&apos; should be passed by const reference." verbose="Parameter &apos;fRunOption&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/trainTMVAforGammaHadronSeparation.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation.cpp" line="242" column="20"/>
            <symbol>fRunOption</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_theta&apos; can be reduced." verbose="The scope of the variable &apos;i_theta&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/trainTMVAforGammaHadronSeparation_TrainingFile.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation_TrainingFile.cpp" line="153" column="16"/>
            <symbol>i_theta</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i_r&apos; can be reduced." verbose="The scope of the variable &apos;i_r&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/trainTMVAforGammaHadronSeparation_TrainingFile.cpp">
            <location file="src/trainTMVAforGammaHadronSeparation_TrainingFile.cpp" line="154" column="16"/>
            <symbol>i_r</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;list_of_valid_tel.size()&gt;0&apos; is always true" verbose="Condition &apos;list_of_valid_tel.size()&gt;0&apos; is always true" cwe="571" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="734" column="42" info="Condition &apos;list_of_valid_tel.size()&gt;0&apos; is always true"/>
            <location file="src/updateDBlaserRUN.cpp" line="685" column="38" info="Assuming that condition &apos;list_of_valid_tel.size()&gt;0&apos; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;list_tel_missing.size()&gt;counter&apos; is always true" verbose="Condition &apos;list_tel_missing.size()&gt;counter&apos; is always true" cwe="571" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="745" column="50" info="Condition &apos;list_tel_missing.size()&gt;counter&apos; is always true"/>
            <location file="src/updateDBlaserRUN.cpp" line="741" column="50" info="Assuming that condition &apos;list_tel_missing.size()==counter&apos; is not redundant"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="352" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="352" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="352" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="352" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="359" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="359" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="359" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="359" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="360" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="360" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="360" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="360" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="364" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="364" column="17"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="394" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="394" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="394" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 4) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 4) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="394" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="424" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="534" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="534" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="534" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="534" column="13"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="813" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="813" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="814" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="814" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="1568" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="1568" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="1947" column="5"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="1947" column="5"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;counter&apos; can be reduced." verbose="The scope of the variable &apos;counter&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="684" column="22"/>
            <symbol>counter</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="691" column="31" info="Shadow variable"/>
            <location file="src/updateDBlaserRUN.cpp" line="636" column="23" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;want&apos; is assigned a value that is never used." verbose="Variable &apos;want&apos; is assigned a value that is never used." cwe="563" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="1037" column="18"/>
            <symbol>want</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;histo_bin&apos; is assigned a value that is never used." verbose="Variable &apos;histo_bin&apos; is assigned a value that is never used." cwe="563" file0="src/updateDBlaserRUN.cpp">
            <location file="src/updateDBlaserRUN.cpp" line="1040" column="23"/>
            <symbol>histo_bin</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;VWPPhysFile&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;VWPPhysFile&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp">
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="350" column="5"/>
            <symbol>VWPPhysFile</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;VWPPhysFile&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;VWPPhysFile&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp">
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="350" column="5"/>
            <symbol>VWPPhysFile</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iNameBegin&apos; should be passed by const reference." verbose="Parameter &apos;iNameBegin&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp">
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="347" column="34"/>
            <symbol>iNameBegin</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iNameMultiplicity&apos; should be passed by const reference." verbose="Parameter &apos;iNameMultiplicity&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp">
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="347" column="53"/>
            <symbol>iNameMultiplicity</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iDatadirectory&apos; should be passed by const reference." verbose="Parameter &apos;iDatadirectory&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp">
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="371" column="32"/>
            <symbol>iDatadirectory</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iSite&apos; should be passed by const reference." verbose="Parameter &apos;iSite&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp">
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="371" column="55"/>
            <symbol>iSite</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iSubArray&apos; should be passed by const reference." verbose="Parameter &apos;iSubArray&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp">
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="371" column="69"/>
            <symbol>iSubArray</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iPointingDirection&apos; should be passed by const reference." verbose="Parameter &apos;iPointingDirection&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp">
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="371" column="113"/>
            <symbol>iPointingDirection</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iOutFileName&apos; should be passed by const reference." verbose="Parameter &apos;iOutFileName&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp">
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="451" column="50"/>
            <symbol>iOutFileName</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared with const" verbose="Parameter &apos;argv&apos; can be declared with const" cwe="398" file0="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp">
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="589" column="27" info="Parameter &apos;argv&apos; can be declared with const"/>
            <symbol>argv</symbol>
        </error>
        <error id="containerOutOfBounds" severity="error" msg="Out of bounds access in expression &apos;i_Sens.begin()&apos; because &apos;i_Sens&apos; is empty." verbose="Out of bounds access in expression &apos;i_Sens.begin()&apos; because &apos;i_Sens&apos; is empty." cwe="398" file0="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp">
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="553" column="25" info="Access out of bounds"/>
            <location file="src/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp" line="541" column="36" info="Assuming condition is false"/>
            <symbol>i_Sens</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;fTelType&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;fTelType&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="39" column="5"/>
            <symbol>fTelType</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;fTelTypeName&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;fTelTypeName&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="40" column="5"/>
            <symbol>fTelTypeName</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;fPointingDirection&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;fPointingDirection&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="137" column="5"/>
            <symbol>fPointingDirection</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;h2&apos; shadows outer variable" verbose="Local variable &apos;h2&apos; shadows outer variable" cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="593" column="23" info="Shadow variable"/>
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="568" column="11" info="Shadowed declaration"/>
            <symbol>h2</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iPointingDirection&apos; should be passed by const reference." verbose="Parameter &apos;iPointingDirection&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="116" column="44"/>
            <symbol>iPointingDirection</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iSite&apos; should be passed by const reference." verbose="Parameter &apos;iSite&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="237" column="42"/>
            <symbol>iSite</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iWPPhysDirectory&apos; should be passed by const reference." verbose="Parameter &apos;iWPPhysDirectory&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="245" column="42"/>
            <symbol>iWPPhysDirectory</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iMSTDateID&apos; should be passed by const reference." verbose="Parameter &apos;iMSTDateID&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="246" column="42"/>
            <symbol>iMSTDateID</symbol>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;fTelescopeData.size()&gt;1&apos; is redundant or fTelescopeData size can be 2. Expression &apos;fTelescopeData[2]&apos; cause access out of bounds." verbose="Either the condition &apos;fTelescopeData.size()&gt;1&apos; is redundant or fTelescopeData size can be 2. Expression &apos;fTelescopeData[2]&apos; cause access out of bounds." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="396" column="31" info="Access out of bounds"/>
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="394" column="39" info="Assuming that condition &apos;fTelescopeData.size()&gt;1&apos; is not redundant"/>
            <symbol>fTelescopeData</symbol>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;fTelescopeData.size()&gt;1&apos; is redundant or fTelescopeData size can be 2. Expression &apos;fTelescopeData[2]&apos; cause access out of bounds." verbose="Either the condition &apos;fTelescopeData.size()&gt;1&apos; is redundant or fTelescopeData size can be 2. Expression &apos;fTelescopeData[2]&apos; cause access out of bounds." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="397" column="31" info="Access out of bounds"/>
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="394" column="39" info="Assuming that condition &apos;fTelescopeData.size()&gt;1&apos; is not redundant"/>
            <symbol>fTelescopeData</symbol>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;fTelescopeData.size()&gt;1&apos; is redundant or fTelescopeData size can be 2. Expression &apos;fTelescopeData[2]&apos; cause access out of bounds." verbose="Either the condition &apos;fTelescopeData.size()&gt;1&apos; is redundant or fTelescopeData size can be 2. Expression &apos;fTelescopeData[2]&apos; cause access out of bounds." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="398" column="31" info="Access out of bounds"/>
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="394" column="39" info="Assuming that condition &apos;fTelescopeData.size()&gt;1&apos; is not redundant"/>
            <symbol>fTelescopeData</symbol>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;fTelescopeData.size()&gt;1&apos; is redundant or fTelescopeData size can be 2. Expression &apos;fTelescopeData[2]&apos; cause access out of bounds." verbose="Either the condition &apos;fTelescopeData.size()&gt;1&apos; is redundant or fTelescopeData size can be 2. Expression &apos;fTelescopeData[2]&apos; cause access out of bounds." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="399" column="31" info="Access out of bounds"/>
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="394" column="39" info="Assuming that condition &apos;fTelescopeData.size()&gt;1&apos; is not redundant"/>
            <symbol>fTelescopeData</symbol>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;fTelescopeData.size()&gt;2&apos; is redundant or fTelescopeData size can be 3. Expression &apos;fTelescopeData[3]&apos; cause access out of bounds." verbose="Either the condition &apos;fTelescopeData.size()&gt;2&apos; is redundant or fTelescopeData size can be 3. Expression &apos;fTelescopeData[3]&apos; cause access out of bounds." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="408" column="31" info="Access out of bounds"/>
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="406" column="39" info="Assuming that condition &apos;fTelescopeData.size()&gt;2&apos; is not redundant"/>
            <symbol>fTelescopeData</symbol>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;fTelescopeData.size()&gt;2&apos; is redundant or fTelescopeData size can be 3. Expression &apos;fTelescopeData[3]&apos; cause access out of bounds." verbose="Either the condition &apos;fTelescopeData.size()&gt;2&apos; is redundant or fTelescopeData size can be 3. Expression &apos;fTelescopeData[3]&apos; cause access out of bounds." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="409" column="31" info="Access out of bounds"/>
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="406" column="39" info="Assuming that condition &apos;fTelescopeData.size()&gt;2&apos; is not redundant"/>
            <symbol>fTelescopeData</symbol>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;fTelescopeData.size()&gt;2&apos; is redundant or fTelescopeData size can be 3. Expression &apos;fTelescopeData[3]&apos; cause access out of bounds." verbose="Either the condition &apos;fTelescopeData.size()&gt;2&apos; is redundant or fTelescopeData size can be 3. Expression &apos;fTelescopeData[3]&apos; cause access out of bounds." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="410" column="31" info="Access out of bounds"/>
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="406" column="39" info="Assuming that condition &apos;fTelescopeData.size()&gt;2&apos; is not redundant"/>
            <symbol>fTelescopeData</symbol>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;fTelescopeData.size()&gt;2&apos; is redundant or fTelescopeData size can be 3. Expression &apos;fTelescopeData[3]&apos; cause access out of bounds." verbose="Either the condition &apos;fTelescopeData.size()&gt;2&apos; is redundant or fTelescopeData size can be 3. Expression &apos;fTelescopeData[3]&apos; cause access out of bounds." cwe="398" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="411" column="31" info="Access out of bounds"/>
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="406" column="39" info="Assuming that condition &apos;fTelescopeData.size()&gt;2&apos; is not redundant"/>
            <symbol>fTelescopeData</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: iEffDate" verbose="Unused variable: iEffDate" cwe="563" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="301" column="12"/>
            <symbol>iEffDate</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: iMSCWDate" verbose="Unused variable: iMSCWDate" cwe="563" file0="src/writeCTAWPPhysSensitivityTree.cpp">
            <location file="src/writeCTAWPPhysSensitivityTree.cpp" line="302" column="12"/>
            <symbol>iMSCWDate</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared with const" verbose="Parameter &apos;argv&apos; can be declared with const" cwe="398" file0="src/writeEventListTMVA.cpp">
            <location file="src/writeEventListTMVA.cpp" line="28" column="27" info="Parameter &apos;argv&apos; can be declared with const"/>
            <symbol>argv</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iZenithperrun&apos; can be reduced." verbose="The scope of the variable &apos;iZenithperrun&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/writeParticleRateFilesForTMVA.cpp">
            <location file="src/writeParticleRateFilesForTMVA.cpp" line="183" column="12"/>
            <symbol>iZenithperrun</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iSecantperrrun&apos; can be reduced." verbose="The scope of the variable &apos;iSecantperrrun&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/writeParticleRateFilesForTMVA.cpp">
            <location file="src/writeParticleRateFilesForTMVA.cpp" line="184" column="12"/>
            <symbol>iSecantperrrun</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iEffAreaDirectory&apos; should be passed by const reference." verbose="Parameter &apos;iEffAreaDirectory&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeParticleRateFilesForTMVA.cpp">
            <location file="src/writeParticleRateFilesForTMVA.cpp" line="44" column="56"/>
            <symbol>iEffAreaDirectory</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iEffAreaFile&apos; should be passed by const reference." verbose="Parameter &apos;iEffAreaFile&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeParticleRateFilesForTMVA.cpp">
            <location file="src/writeParticleRateFilesForTMVA.cpp" line="45" column="22"/>
            <symbol>iEffAreaFile</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iZenithperrun&apos; is assigned a value that is never used." verbose="Variable &apos;iZenithperrun&apos; is assigned a value that is never used." cwe="563" file0="src/writeParticleRateFilesForTMVA.cpp">
            <location file="src/writeParticleRateFilesForTMVA.cpp" line="183" column="26"/>
            <symbol>iZenithperrun</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iSecantperrrun&apos; is assigned a value that is never used." verbose="Variable &apos;iSecantperrrun&apos; is assigned a value that is never used." cwe="563" file0="src/writeParticleRateFilesForTMVA.cpp">
            <location file="src/writeParticleRateFilesForTMVA.cpp" line="184" column="27"/>
            <symbol>iSecantperrrun</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;iMC_Gamma_onSource.size()&gt;0&apos; is always true" verbose="Condition &apos;iMC_Gamma_onSource.size()&gt;0&apos; is always true" cwe="571" file0="src/writeParticleRateFilesFromEffectiveAreas.cpp">
            <location file="src/writeParticleRateFilesFromEffectiveAreas.cpp" line="197" column="35" info="Condition &apos;iMC_Gamma_onSource.size()&gt;0&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;iMC_Electron_onSource.size()&gt;0&apos; is always true" verbose="Condition &apos;iMC_Electron_onSource.size()&gt;0&apos; is always true" cwe="571" file0="src/writeParticleRateFilesFromEffectiveAreas.cpp">
            <location file="src/writeParticleRateFilesFromEffectiveAreas.cpp" line="202" column="42" info="Condition &apos;iMC_Electron_onSource.size()&gt;0&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;iMC_Electron.size()&gt;0&apos; is always true" verbose="Condition &apos;iMC_Electron.size()&gt;0&apos; is always true" cwe="571" file0="src/writeParticleRateFilesFromEffectiveAreas.cpp">
            <location file="src/writeParticleRateFilesFromEffectiveAreas.cpp" line="227" column="33" info="Condition &apos;iMC_Electron.size()&gt;0&apos; is always true"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;iObservatory&apos; should be passed by const reference." verbose="Parameter &apos;iObservatory&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/writeParticleRateFilesFromEffectiveAreas.cpp">
            <location file="src/writeParticleRateFilesFromEffectiveAreas.cpp" line="76" column="38"/>
            <symbol>iObservatory</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;list_of_valid_tel.size()&gt;0&apos; is always true" verbose="Condition &apos;list_of_valid_tel.size()&gt;0&apos; is always true" cwe="571" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="438" column="38" info="Condition &apos;list_of_valid_tel.size()&gt;0&apos; is always true"/>
            <location file="src/writelaserinDB.cpp" line="395" column="34" info="Assuming that condition &apos;list_of_valid_tel.size()&gt;0&apos; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;list_tel_missing.size()&gt;counter&apos; is always true" verbose="Condition &apos;list_tel_missing.size()&gt;counter&apos; is always true" cwe="571" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="449" column="46" info="Condition &apos;list_tel_missing.size()&gt;counter&apos; is always true"/>
            <location file="src/writelaserinDB.cpp" line="445" column="46" info="Assuming that condition &apos;list_tel_missing.size()==counter&apos; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!run_in_voff_db&apos; is always true" verbose="Condition &apos;!run_in_voff_db&apos; is always true" cwe="571" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="880" column="13" info="Condition &apos;!run_in_voff_db&apos; is always true"/>
            <location file="src/writelaserinDB.cpp" line="872" column="45" info="Assuming condition is false"/>
            <location file="src/writelaserinDB.cpp" line="871" column="31" info="Assignment &apos;run_in_voff_db=false&apos;, assigned value is 0"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="289" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="289" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="289" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="289" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="496" column="5"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="496" column="5"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="1535" column="5"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="1535" column="5"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;counter&apos; can be reduced." verbose="The scope of the variable &apos;counter&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="394" column="18"/>
            <symbol>counter</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pbRunFile_name&apos; is assigned a value that is never used." verbose="Variable &apos;pbRunFile_name&apos; is assigned a value that is never used." cwe="563" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="326" column="29"/>
            <symbol>pbRunFile_name</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;want&apos; is assigned a value that is never used." verbose="Variable &apos;want&apos; is assigned a value that is never used." cwe="563" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="684" column="18"/>
            <symbol>want</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;histo_bin&apos; is assigned a value that is never used." verbose="Variable &apos;histo_bin&apos; is assigned a value that is never used." cwe="563" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="687" column="23"/>
            <symbol>histo_bin</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;run_in_voff_db&apos; is assigned a value that is never used." verbose="Variable &apos;run_in_voff_db&apos; is assigned a value that is never used." cwe="563" file0="src/writelaserinDB.cpp">
            <location file="src/writelaserinDB.cpp" line="875" column="28"/>
            <symbol>run_in_voff_db</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Cut&apos; is never used." verbose="The function &apos;Cut&apos; is never used." cwe="561">
            <location file="inc/CData.h" line="1191" column="0"/>
            <symbol>Cut</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;DoEval&apos; is never used." verbose="The function &apos;DoEval&apos; is never used." cwe="561">
            <location file="inc/VSourceGeometryFitter.h" line="129" column="0"/>
            <symbol>DoEval</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_goal50_CU_north&apos; is never used." verbose="The function &apos;Flux_goal50_CU_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="263" column="0"/>
            <symbol>Flux_goal50_CU_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_goal50_CU_south&apos; is never used." verbose="The function &apos;Flux_goal50_CU_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="236" column="0"/>
            <symbol>Flux_goal50_CU_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_goal50_E2erg_north&apos; is never used." verbose="The function &apos;Flux_goal50_E2erg_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="259" column="0"/>
            <symbol>Flux_goal50_E2erg_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_goal50_E2erg_south&apos; is never used." verbose="The function &apos;Flux_goal50_E2erg_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="232" column="0"/>
            <symbol>Flux_goal50_E2erg_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_goal50_north&apos; is never used." verbose="The function &apos;Flux_goal50_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="255" column="0"/>
            <symbol>Flux_goal50_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_goal50_south&apos; is never used." verbose="The function &apos;Flux_goal50_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="228" column="0"/>
            <symbol>Flux_goal50_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req05_CU_north&apos; is never used." verbose="The function &apos;Flux_req05_CU_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="207" column="0"/>
            <symbol>Flux_req05_CU_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req05_CU_south&apos; is never used." verbose="The function &apos;Flux_req05_CU_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="180" column="0"/>
            <symbol>Flux_req05_CU_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req05_E2erg_north&apos; is never used." verbose="The function &apos;Flux_req05_E2erg_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="203" column="0"/>
            <symbol>Flux_req05_E2erg_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req05_E2erg_south&apos; is never used." verbose="The function &apos;Flux_req05_E2erg_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="175" column="0"/>
            <symbol>Flux_req05_E2erg_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req05_north&apos; is never used." verbose="The function &apos;Flux_req05_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="199" column="0"/>
            <symbol>Flux_req05_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req05_south&apos; is never used." verbose="The function &apos;Flux_req05_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="171" column="0"/>
            <symbol>Flux_req05_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req50_CU_north&apos; is never used." verbose="The function &apos;Flux_req50_CU_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="98" column="0"/>
            <symbol>Flux_req50_CU_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req50_CU_south&apos; is never used." verbose="The function &apos;Flux_req50_CU_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="71" column="0"/>
            <symbol>Flux_req50_CU_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req50_E2erg_north&apos; is never used." verbose="The function &apos;Flux_req50_E2erg_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="94" column="0"/>
            <symbol>Flux_req50_E2erg_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req50_E2erg_south&apos; is never used." verbose="The function &apos;Flux_req50_E2erg_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="67" column="0"/>
            <symbol>Flux_req50_E2erg_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req50_north&apos; is never used." verbose="The function &apos;Flux_req50_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="90" column="0"/>
            <symbol>Flux_req50_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req50_south&apos; is never used." verbose="The function &apos;Flux_req50_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="63" column="0"/>
            <symbol>Flux_req50_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req5_CU_north&apos; is never used." verbose="The function &apos;Flux_req5_CU_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="152" column="0"/>
            <symbol>Flux_req5_CU_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req5_CU_south&apos; is never used." verbose="The function &apos;Flux_req5_CU_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="125" column="0"/>
            <symbol>Flux_req5_CU_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req5_E2erg_north&apos; is never used." verbose="The function &apos;Flux_req5_E2erg_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="148" column="0"/>
            <symbol>Flux_req5_E2erg_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req5_E2erg_south&apos; is never used." verbose="The function &apos;Flux_req5_E2erg_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="121" column="0"/>
            <symbol>Flux_req5_E2erg_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req5_north&apos; is never used." verbose="The function &apos;Flux_req5_north&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="144" column="0"/>
            <symbol>Flux_req5_north</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Flux_req5_south&apos; is never used." verbose="The function &apos;Flux_req5_south&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="117" column="0"/>
            <symbol>Flux_req5_south</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Get_Query_Status&apos; is never used." verbose="The function &apos;Get_Query_Status&apos; is never used." cwe="561">
            <location file="inc/VDB_Connection.h" line="62" column="0"/>
            <symbol>Get_Query_Status</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;NDim&apos; is never used." verbose="The function &apos;NDim&apos; is never used." cwe="561">
            <location file="inc/VSourceGeometryFitter.h" line="208" column="0"/>
            <symbol>NDim</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;addDebugChannel&apos; is never used." verbose="The function &apos;addDebugChannel&apos; is never used." cwe="561">
            <location file="inc/VLowGainCalibrator.h" line="173" column="0"/>
            <symbol>addDebugChannel</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ergs&apos; is never used." verbose="The function &apos;ergs&apos; is never used." cwe="561">
            <location file="inc/VCTASensitivityRequirements.h" line="44" column="0"/>
            <symbol>ergs</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;excludeRun&apos; is never used." verbose="The function &apos;excludeRun&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="188" column="0"/>
            <symbol>excludeRun</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getAcceptanceFunction&apos; is never used." verbose="The function &apos;getAcceptanceFunction&apos; is never used." cwe="561">
            <location file="inc/VPlotRadialAcceptance.h" line="62" column="0"/>
            <symbol>getAcceptanceFunction</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getAcceptanceHisto&apos; is never used." verbose="The function &apos;getAcceptanceHisto&apos; is never used." cwe="561">
            <location file="inc/VPlotRadialAcceptance.h" line="66" column="0"/>
            <symbol>getAcceptanceHisto</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getAllinOneCanvas&apos; is never used." verbose="The function &apos;getAllinOneCanvas&apos; is never used." cwe="561">
            <location file="inc/VWPPhysSensitivityPlotsMaker.h" line="85" column="0"/>
            <symbol>getAllinOneCanvas</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getAngularResolutionAbsoluteMinimum&apos; is never used." verbose="The function &apos;getAngularResolutionAbsoluteMinimum&apos; is never used." cwe="561">
            <location file="inc/VGammaHadronCuts.h" line="273" column="0"/>
            <symbol>getAngularResolutionAbsoluteMinimum</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getAngularResolutionFunction&apos; is never used." verbose="The function &apos;getAngularResolutionFunction&apos; is never used." cwe="561">
            <location file="inc/VGammaHadronCuts.h" line="269" column="0"/>
            <symbol>getAngularResolutionFunction</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getAngularResolutionScaleFactor&apos; is never used." verbose="The function &apos;getAngularResolutionScaleFactor&apos; is never used." cwe="561">
            <location file="inc/VGammaHadronCuts.h" line="281" column="0"/>
            <symbol>getAngularResolutionScaleFactor</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getArrayConfig&apos; is never used." verbose="The function &apos;getArrayConfig&apos; is never used." cwe="561">
            <location file="inc/VDSTTree.h" line="141" column="0"/>
            <symbol>getArrayConfig</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getArrayReconstructionMethod&apos; is never used." verbose="The function &apos;getArrayReconstructionMethod&apos; is never used." cwe="561">
            <location file="inc/VTableLookupDataHandler.h" line="396" column="0"/>
            <symbol>getArrayReconstructionMethod</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getAverageProfile&apos; is never used." verbose="The function &apos;getAverageProfile&apos; is never used." cwe="561">
            <location file="inc/VAtmosphereSoundings.h" line="293" column="0"/>
            <symbol>getAverageProfile</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getAverageTZerosvars&apos; is never used." verbose="The function &apos;getAverageTZerosvars&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="980" column="0"/>
            <symbol>getAverageTZerosvars</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getBorderBorderNeighbour&apos; is never used." verbose="The function &apos;getBorderBorderNeighbour&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="459" column="0"/>
            <symbol>getBorderBorderNeighbour</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getCameraName&apos; is never used." verbose="The function &apos;getCameraName&apos; is never used." cwe="561">
            <location file="inc/VCameraRead.h" line="131" column="0"/>
            <symbol>getCameraName</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getClusterSize&apos; is never used." verbose="The function &apos;getClusterSize&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1477" column="0"/>
            <symbol>getClusterSize</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getColor&apos; is never used." verbose="The function &apos;getColor&apos; is never used." cwe="561">
            <location file="inc/VAtmosphereSoundingData.h" line="167" column="0"/>
            <symbol>getColor</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getConfidinceInterval&apos; is never used." verbose="The function &apos;getConfidinceInterval&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="178" column="0"/>
            <symbol>getConfidinceInterval</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getCountingHistogramOff&apos; is never used." verbose="The function &apos;getCountingHistogramOff&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="121" column="0"/>
            <symbol>getCountingHistogramOff</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getCountingHistogramOn&apos; is never used." verbose="The function &apos;getCountingHistogramOn&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="116" column="0"/>
            <symbol>getCountingHistogramOn</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getCurrents_DeadChannelList&apos; is never used." verbose="The function &apos;getCurrents_DeadChannelList&apos; is never used." cwe="561">
            <location file="inc/VDB_PixelDataReader.h" line="83" column="0"/>
            <symbol>getCurrents_DeadChannelList</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getCutNTrigger&apos; is never used." verbose="The function &apos;getCutNTrigger&apos; is never used." cwe="561">
            <location file="inc/VEventLoop.h" line="101" column="0"/>
            <symbol>getCutNTrigger</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDSTNumTelescopes&apos; is never used." verbose="The function &apos;getDSTNumTelescopes&apos; is never used." cwe="561">
            <location file="inc/VDSTTree.h" line="231" column="0"/>
            <symbol>getDSTNumTelescopes</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDataInterpol&apos; is never used." verbose="The function &apos;getDataInterpol&apos; is never used." cwe="561">
            <location file="inc/VAtmosphereSoundings.h" line="281" column="0"/>
            <symbol>getDataInterpol</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDataStartTimeHMS&apos; is never used." verbose="The function &apos;getDataStartTimeHMS&apos; is never used." cwe="561">
            <location file="inc/VDBRunInfo.h" line="91" column="0"/>
            <symbol>getDataStartTimeHMS</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDataStoppTimeHMS&apos; is never used." verbose="The function &apos;getDataStoppTimeHMS&apos; is never used." cwe="561">
            <location file="inc/VDBRunInfo.h" line="95" column="0"/>
            <symbol>getDataStoppTimeHMS</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDataUserProfile&apos; is never used." verbose="The function &apos;getDataUserProfile&apos; is never used." cwe="561">
            <location file="inc/VAtmosphereSoundings.h" line="289" column="0"/>
            <symbol>getDataUserProfile</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDeadTimeFraction_status&apos; is never used." verbose="The function &apos;getDeadTimeFraction_status&apos; is never used." cwe="561">
            <location file="inc/VDeadTime.h" line="82" column="0"/>
            <symbol>getDeadTimeFraction_status</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDeadTimeMS&apos; is never used." verbose="The function &apos;getDeadTimeMS&apos; is never used." cwe="561">
            <location file="inc/VDeadTime.h" line="75" column="0"/>
            <symbol>getDeadTimeMS</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDebug&apos; is never used." verbose="The function &apos;getDebug&apos; is never used." cwe="561">
            <location file="inc/VSensitivityCalculator.h" line="250" column="0"/>
            <symbol>getDebug</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDirectionCutFixedAboveEnergy_TeV&apos; is never used." verbose="The function &apos;getDirectionCutFixedAboveEnergy_TeV&apos; is never used." cwe="561">
            <location file="inc/VGammaHadronCuts.h" line="297" column="0"/>
            <symbol>getDirectionCutFixedAboveEnergy_TeV</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDisp&apos; is never used." verbose="The function &apos;getDisp&apos; is never used." cwe="561">
            <location file="inc/VDispAnalyzer.h" line="145" column="0"/>
            <symbol>getDisp</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDispMiss&apos; is never used." verbose="The function &apos;getDispMiss&apos; is never used." cwe="561">
            <location file="inc/VDispTableAnalyzer.h" line="73" column="0"/>
            <symbol>getDispMiss</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDispPhi&apos; is never used." verbose="The function &apos;getDispPhi&apos; is never used." cwe="561">
            <location file="inc/VDispTableAnalyzer.h" line="65" column="0"/>
            <symbol>getDispPhi</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getDispPhiE&apos; is never used." verbose="The function &apos;getDispPhiE&apos; is never used." cwe="561">
            <location file="inc/VDispTableAnalyzer.h" line="69" column="0"/>
            <symbol>getDispPhiE</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getEnergyAxisMax_log10&apos; is never used." verbose="The function &apos;getEnergyAxisMax_log10&apos; is never used." cwe="561">
            <location file="inc/VEffectiveAreaCalculatorMCHistograms.h" line="67" column="0"/>
            <symbol>getEnergyAxisMax_log10</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getEnergyAxisMin_log10&apos; is never used." verbose="The function &apos;getEnergyAxisMin_log10&apos; is never used." cwe="561">
            <location file="inc/VEffectiveAreaCalculatorMCHistograms.h" line="63" column="0"/>
            <symbol>getEnergyAxisMin_log10</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getEnergyCountingOnHistogram&apos; is never used." verbose="The function &apos;getEnergyCountingOnHistogram&apos; is never used." cwe="561">
            <location file="inc/VEnergySpectrum.h" line="162" column="0"/>
            <symbol>getEnergyCountingOnHistogram</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getEnergy_per_telescope&apos; is never used." verbose="The function &apos;getEnergy_per_telescope&apos; is never used." cwe="561">
            <location file="inc/CData.h" line="445" column="0"/>
            <symbol>getEnergy_per_telescope</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getEventMJDVector&apos; is never used." verbose="The function &apos;getEventMJDVector&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="336" column="0"/>
            <symbol>getEventMJDVector</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getEventTimeVector&apos; is never used." verbose="The function &apos;getEventTimeVector&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="352" column="0"/>
            <symbol>getEventTimeVector</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getFADC_channels&apos; is never used." verbose="The function &apos;getFADC_channels&apos; is never used." cwe="561">
            <location file="inc/VDB_PixelDataReader.h" line="127" column="0"/>
            <symbol>getFADC_channels</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getFADC_modules&apos; is never used." verbose="The function &apos;getFADC_modules&apos; is never used." cwe="561">
            <location file="inc/VDB_PixelDataReader.h" line="123" column="0"/>
            <symbol>getFADC_modules</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getGalacticMap&apos; is never used." verbose="The function &apos;getGalacticMap&apos; is never used." cwe="561">
            <location file="inc/VExposure.h" line="177" column="0"/>
            <symbol>getGalacticMap</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getGalacticMapAcceptanceCorrected&apos; is never used." verbose="The function &apos;getGalacticMapAcceptanceCorrected&apos; is never used." cwe="561">
            <location file="inc/VExposure.h" line="181" column="0"/>
            <symbol>getGalacticMapAcceptanceCorrected</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getGalacticMapAcceptanceCorrectedAitoff&apos; is never used." verbose="The function &apos;getGalacticMapAcceptanceCorrectedAitoff&apos; is never used." cwe="561">
            <location file="inc/VExposure.h" line="189" column="0"/>
            <symbol>getGalacticMapAcceptanceCorrectedAitoff</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getGalacticMapAitoff&apos; is never used." verbose="The function &apos;getGalacticMapAitoff&apos; is never used." cwe="561">
            <location file="inc/VExposure.h" line="185" column="0"/>
            <symbol>getGalacticMapAitoff</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getHeights&apos; is never used." verbose="The function &apos;getHeights&apos; is never used." cwe="561">
            <location file="inc/VAtmosphereSoundings.h" line="259" column="0"/>
            <symbol>getHeights</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getHistograms&apos; is never used." verbose="The function &apos;getHistograms&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="446" column="0"/>
            <symbol>getHistograms</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getImgSel_list&apos; is never used." verbose="The function &apos;getImgSel_list&apos; is never used." cwe="561">
            <location file="inc/CData.h" line="428" column="0"/>
            <symbol>getImgSel_list</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getIndexScan&apos; is never used." verbose="The function &apos;getIndexScan&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="196" column="0"/>
            <symbol>getIndexScan</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getIndexScanLikelihood&apos; is never used." verbose="The function &apos;getIndexScanLikelihood&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="200" column="0"/>
            <symbol>getIndexScanLikelihood</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getListOfStars&apos; is never used." verbose="The function &apos;getListOfStars&apos; is never used." cwe="561">
            <location file="inc/VStarCatalogue.h" line="92" column="0"/>
            <symbol>getListOfStars</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getListofHistograms&apos; is never used." verbose="The function &apos;getListofHistograms&apos; is never used." cwe="561">
            <location file="inc/VInstrumentResponseFunctionData.h" line="89" column="0"/>
            <symbol>getListofHistograms</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getMC_FADC_TraceStart&apos; is never used." verbose="The function &apos;getMC_FADC_TraceStart&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="602" column="0"/>
            <symbol>getMC_FADC_TraceStart</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getMSCLtel&apos; is never used." verbose="The function &apos;getMSCLtel&apos; is never used." cwe="561">
            <location file="inc/VTableLookupDataHandler.h" line="489" column="0"/>
            <symbol>getMSCLtel</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getMSCWtel&apos; is never used." verbose="The function &apos;getMSCWtel&apos; is never used." cwe="561">
            <location file="inc/VTableLookupDataHandler.h" line="485" column="0"/>
            <symbol>getMSCWtel</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getMaskStartUTC&apos; is never used." verbose="The function &apos;getMaskStartUTC&apos; is never used." cwe="561">
            <location file="inc/VTimeMask.h" line="130" column="0"/>
            <symbol>getMaskStartUTC</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getMaskStatus&apos; is never used." verbose="The function &apos;getMaskStatus&apos; is never used." cwe="561">
            <location file="inc/VTimeMask.h" line="114" column="0"/>
            <symbol>getMaskStatus</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getMeanUTC_Accepted&apos; is never used." verbose="The function &apos;getMeanUTC_Accepted&apos; is never used." cwe="561">
            <location file="inc/VTimeMask.h" line="170" column="0"/>
            <symbol>getMeanUTC_Accepted</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getMeanUTC_Events&apos; is never used." verbose="The function &apos;getMeanUTC_Events&apos; is never used." cwe="561">
            <location file="inc/VTimeMask.h" line="166" column="0"/>
            <symbol>getMeanUTC_Events</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getMeanUTC_Run&apos; is never used." verbose="The function &apos;getMeanUTC_Run&apos; is never used." cwe="561">
            <location file="inc/VTimeMask.h" line="158" column="0"/>
            <symbol>getMeanUTC_Run</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getMedianAbsoluteDeviation&apos; is never used." verbose="The function &apos;getMedianAbsoluteDeviation&apos; is never used." cwe="561">
            <location file="inc/VStatistics.h" line="424" column="0"/>
            <symbol>getMedianAbsoluteDeviation</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getModtranHeights&apos; is never used." verbose="The function &apos;getModtranHeights&apos; is never used." cwe="561">
            <location file="inc/VAtmosphereSoundings.h" line="255" column="0"/>
            <symbol>getModtranHeights</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getNArrayMaxReconstructionMethods&apos; is never used." verbose="The function &apos;getNArrayMaxReconstructionMethods&apos; is never used." cwe="561">
            <location file="inc/VShowerParameters.h" line="163" column="0"/>
            <symbol>getNArrayMaxReconstructionMethods</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getNArrayReconstructionMethods&apos; is never used." verbose="The function &apos;getNArrayReconstructionMethods&apos; is never used." cwe="561">
            <location file="inc/VShowerParameters.h" line="159" column="0"/>
            <symbol>getNArrayReconstructionMethods</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getNEvents&apos; is never used." verbose="The function &apos;getNEvents&apos; is never used." cwe="561">
            <location file="inc/VTableLookupDataHandler.h" line="513" column="0"/>
            <symbol>getNEvents</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getNPatches&apos; is never used." verbose="The function &apos;getNPatches&apos; is never used." cwe="561">
            <location file="inc/VCameraRead.h" line="204" column="0"/>
            <symbol>getNPatches</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getNcluster_cleaned&apos; is never used." verbose="The function &apos;getNcluster_cleaned&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1511" column="0"/>
            <symbol>getNcluster_cleaned</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getNcluster_uncleaned&apos; is never used." verbose="The function &apos;getNcluster_uncleaned&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1519" column="0"/>
            <symbol>getNcluster_uncleaned</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getNormScan&apos; is never used." verbose="The function &apos;getNormScan&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="206" column="0"/>
            <symbol>getNormScan</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getNormScanLikelihood&apos; is never used." verbose="The function &apos;getNormScanLikelihood&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="210" column="0"/>
            <symbol>getNormScanLikelihood</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getNumberOfDataSets&apos; is never used." verbose="The function &apos;getNumberOfDataSets&apos; is never used." cwe="561">
            <location file="inc/VPlotInstrumentResponseFunction.h" line="84" column="0"/>
            <symbol>getNumberOfDataSets</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getNumberofRawFiles&apos; is never used." verbose="The function &apos;getNumberofRawFiles&apos; is never used." cwe="561">
            <location file="inc/VRadialAcceptance.h" line="153" column="0"/>
            <symbol>getNumberofRawFiles</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getObservingMode&apos; is never used." verbose="The function &apos;getObservingMode&apos; is never used." cwe="561">
            <location file="inc/VDBRunInfo.h" line="135" column="0"/>
            <symbol>getObservingMode</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getOffCounts&apos; is never used." verbose="The function &apos;getOffCounts&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="136" column="0"/>
            <symbol>getOffCounts</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getOnCounts&apos; is never used." verbose="The function &apos;getOnCounts&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="131" column="0"/>
            <symbol>getOnCounts</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPatch&apos; is never used." verbose="The function &apos;getPatch&apos; is never used." cwe="561">
            <location file="inc/VCameraRead.h" line="208" column="0"/>
            <symbol>getPatch</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPedestalTree&apos; is never used." verbose="The function &apos;getPedestalTree&apos; is never used." cwe="561">
            <location file="inc/VPedestalCalculator.h" line="74" column="0"/>
            <symbol>getPedestalTree</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPedsFromPLine&apos; is never used." verbose="The function &apos;getPedsFromPLine&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="693" column="0"/>
            <symbol>getPedsFromPLine</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPedsLowGainrms&apos; is never used." verbose="The function &apos;getPedsLowGainrms&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="764" column="0"/>
            <symbol>getPedsLowGainrms</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPixelType&apos; is never used." verbose="The function &apos;getPixelType&apos; is never used." cwe="561">
            <location file="inc/VCameraRead.h" line="240" column="0"/>
            <symbol>getPixelType</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPlottingCanvas&apos; is never used." verbose="The function &apos;getPlottingCanvas&apos; is never used." cwe="561">
            <location file="inc/VEnergySpectrum.h" line="276" column="0"/>
            <symbol>getPlottingCanvas</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPlottingColor&apos; is never used." verbose="The function &apos;getPlottingColor&apos; is never used." cwe="561">
            <location file="inc/VPlotUtilities.h" line="95" column="0"/>
            <symbol>getPlottingColor</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPlottingFillStyle&apos; is never used." verbose="The function &apos;getPlottingFillStyle&apos; is never used." cwe="561">
            <location file="inc/VPlotUtilities.h" line="115" column="0"/>
            <symbol>getPlottingFillStyle</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPlottingLineStyle&apos; is never used." verbose="The function &apos;getPlottingLineStyle&apos; is never used." cwe="561">
            <location file="inc/VPlotUtilities.h" line="107" column="0"/>
            <symbol>getPlottingLineStyle</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPlottingLineWidth&apos; is never used." verbose="The function &apos;getPlottingLineWidth&apos; is never used." cwe="561">
            <location file="inc/VPlotUtilities.h" line="111" column="0"/>
            <symbol>getPlottingLineWidth</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPlottingMarkerSize&apos; is never used." verbose="The function &apos;getPlottingMarkerSize&apos; is never used." cwe="561">
            <location file="inc/VPlotUtilities.h" line="103" column="0"/>
            <symbol>getPlottingMarkerSize</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPlottingMarkerStyle&apos; is never used." verbose="The function &apos;getPlottingMarkerStyle&apos; is never used." cwe="561">
            <location file="inc/VPlotUtilities.h" line="99" column="0"/>
            <symbol>getPlottingMarkerStyle</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPointingType&apos; is never used." verbose="The function &apos;getPointingType&apos; is never used." cwe="561">
            <location file="inc/VPointing.h" line="66" column="0"/>
            <symbol>getPointingType</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPrevEvent&apos; is never used." verbose="The function &apos;getPrevEvent&apos; is never used." cwe="561">
            <location file="inc/VVirtualDataReader.h" line="187" column="0"/>
            <symbol>getPrevEvent</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getProjectedSensitivityCanvas&apos; is never used." verbose="The function &apos;getProjectedSensitivityCanvas&apos; is never used." cwe="561">
            <location file="inc/VWPPhysSensitivityPlotsMaker.h" line="89" column="0"/>
            <symbol>getProjectedSensitivityCanvas</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getPulseTimingStatus&apos; is never used." verbose="The function &apos;getPulseTimingStatus&apos; is never used." cwe="561">
            <location file="inc/VTraceHandler.h" line="95" column="0"/>
            <symbol>getPulseTimingStatus</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRandomErrorHistograms&apos; is never used." verbose="The function &apos;getRandomErrorHistograms&apos; is never used." cwe="561">
            <location file="inc/VEnergySpectrumfromLiterature.h" line="91" column="0"/>
            <symbol>getRandomErrorHistograms</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRequestedPhaseBins_start&apos; is never used." verbose="The function &apos;getRequestedPhaseBins_start&apos; is never used." cwe="561">
            <location file="inc/VFluxCalculation.h" line="133" column="0"/>
            <symbol>getRequestedPhaseBins_start</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRequestedPhaseBins_stopp&apos; is never used." verbose="The function &apos;getRequestedPhaseBins_stopp&apos; is never used." cwe="561">
            <location file="inc/VFluxCalculation.h" line="137" column="0"/>
            <symbol>getRequestedPhaseBins_stopp</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRequestedTimeBins_MJD_start&apos; is never used." verbose="The function &apos;getRequestedTimeBins_MJD_start&apos; is never used." cwe="561">
            <location file="inc/VFluxCalculation.h" line="125" column="0"/>
            <symbol>getRequestedTimeBins_MJD_start</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRequestedTimeBins_MJD_stopp&apos; is never used." verbose="The function &apos;getRequestedTimeBins_MJD_stopp&apos; is never used." cwe="561">
            <location file="inc/VFluxCalculation.h" line="129" column="0"/>
            <symbol>getRequestedTimeBins_MJD_stopp</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getResponseMatrix&apos; is never used." verbose="The function &apos;getResponseMatrix&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="126" column="0"/>
            <symbol>getResponseMatrix</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRunID&apos; is never used." verbose="The function &apos;getRunID&apos; is never used." cwe="561">
            <location file="inc/VTimeMask.h" line="118" column="0"/>
            <symbol>getRunID</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRunListCut_MJD_maxVector&apos; is never used." verbose="The function &apos;getRunListCut_MJD_maxVector&apos; is never used." cwe="561">
            <location file="inc/VAnalysisUtilities.h" line="97" column="0"/>
            <symbol>getRunListCut_MJD_maxVector</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRunListCut_MJD_minVector&apos; is never used." verbose="The function &apos;getRunListCut_MJD_minVector&apos; is never used." cwe="561">
            <location file="inc/VAnalysisUtilities.h" line="93" column="0"/>
            <symbol>getRunListCut_MJD_minVector</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRunList_MJD_max&apos; is never used." verbose="The function &apos;getRunList_MJD_max&apos; is never used." cwe="561">
            <location file="inc/VAnalysisUtilities.h" line="89" column="0"/>
            <symbol>getRunList_MJD_max</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRunList_MJD_min&apos; is never used." verbose="The function &apos;getRunList_MJD_min&apos; is never used." cwe="561">
            <location file="inc/VAnalysisUtilities.h" line="85" column="0"/>
            <symbol>getRunList_MJD_min</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRunMJD&apos; is never used." verbose="The function &apos;getRunMJD&apos; is never used." cwe="561">
            <location file="inc/VStereoAnalysis.h" line="88" column="0"/>
            <symbol>getRunMJD</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRunStatus&apos; is never used." verbose="The function &apos;getRunStatus&apos; is never used." cwe="561">
            <location file="inc/VDBRunInfo.h" line="143" column="0"/>
            <symbol>getRunStatus</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getSLocalTrigger&apos; is never used." verbose="The function &apos;getSLocalTrigger&apos; is never used." cwe="561">
            <location file="inc/VSimulationDataReader.h" line="60" column="0"/>
            <symbol>getSLocalTrigger</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getSMC_runNumber&apos; is never used." verbose="The function &apos;getSMC_runNumber&apos; is never used." cwe="561">
            <location file="inc/VSimulationDataReader.h" line="68" column="0"/>
            <symbol>getSMC_runNumber</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getScalarDeadTimeFraction&apos; is never used." verbose="The function &apos;getScalarDeadTimeFraction&apos; is never used." cwe="561">
            <location file="inc/VDeadTime.h" line="71" column="0"/>
            <symbol>getScalarDeadTimeFraction</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getSensitivityFOM&apos; is never used." verbose="The function &apos;getSensitivityFOM&apos; is never used." cwe="561">
            <location file="inc/VPlotWPPhysSensitivity.h" line="137" column="0"/>
            <symbol>getSensitivityFOM</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getSensitivityFOM_error&apos; is never used." verbose="The function &apos;getSensitivityFOM_error&apos; is never used." cwe="561">
            <location file="inc/VPlotWPPhysSensitivity.h" line="141" column="0"/>
            <symbol>getSensitivityFOM_error</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getSkyMap&apos; is never used." verbose="The function &apos;getSkyMap&apos; is never used." cwe="561">
            <location file="inc/VSourceGeometryFitter.h" line="78" column="0"/>
            <symbol>getSkyMap</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getSourceFileName&apos; is never used." verbose="The function &apos;getSourceFileName&apos; is never used." cwe="561">
            <location file="inc/VBaseRawDataReader.h" line="82" column="0"/>
            <symbol>getSourceFileName</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getSourceNameDB&apos; is never used." verbose="The function &apos;getSourceNameDB&apos; is never used." cwe="561">
            <location file="inc/VPointingDB.h" line="114" column="0"/>
            <symbol>getSourceNameDB</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getStarCatalogueName&apos; is never used." verbose="The function &apos;getStarCatalogueName&apos; is never used." cwe="561">
            <location file="inc/VStarCatalogue.h" line="71" column="0"/>
            <symbol>getStarCatalogueName</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getSumWindowMaxTimedifferenceToDoublePassPosition&apos; is never used." verbose="The function &apos;getSumWindowMaxTimedifferenceToDoublePassPosition&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="898" column="0"/>
            <symbol>getSumWindowMaxTimedifferenceToDoublePassPosition</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTMVAThetaCutVariable&apos; is never used." verbose="The function &apos;getTMVAThetaCutVariable&apos; is never used." cwe="561">
            <location file="inc/VTMVAEvaluator.h" line="253" column="0"/>
            <symbol>getTMVAThetaCutVariable</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTargetDecDB&apos; is never used." verbose="The function &apos;getTargetDecDB&apos; is never used." cwe="561">
            <location file="inc/VPointingDB.h" line="118" column="0"/>
            <symbol>getTargetDecDB</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTargetRADB&apos; is never used." verbose="The function &apos;getTargetRADB&apos; is never used." cwe="561">
            <location file="inc/VPointingDB.h" line="122" column="0"/>
            <symbol>getTargetRADB</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTelExpectedAzimuthDB&apos; is never used." verbose="The function &apos;getTelExpectedAzimuthDB&apos; is never used." cwe="561">
            <location file="inc/VPointingDB.h" line="126" column="0"/>
            <symbol>getTelExpectedAzimuthDB</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTelExpectedElevationDB&apos; is never used." verbose="The function &apos;getTelExpectedElevationDB&apos; is never used." cwe="561">
            <location file="inc/VPointingDB.h" line="130" column="0"/>
            <symbol>getTelExpectedElevationDB</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTelLatitude&apos; is never used." verbose="The function &apos;getTelLatitude&apos; is never used." cwe="561">
            <location file="inc/VSkyCoordinates.h" line="108" column="0"/>
            <symbol>getTelLatitude</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTelLongitude&apos; is never used." verbose="The function &apos;getTelLongitude&apos; is never used." cwe="561">
            <location file="inc/VSkyCoordinates.h" line="112" column="0"/>
            <symbol>getTelLongitude</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTemplateMu&apos; is never used." verbose="The function &apos;getTemplateMu&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="811" column="0"/>
            <symbol>getTemplateMu</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTemplateMuMax&apos; is never used." verbose="The function &apos;getTemplateMuMax&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="819" column="0"/>
            <symbol>getTemplateMuMax</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTemplateMuMin&apos; is never used." verbose="The function &apos;getTemplateMuMin&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="815" column="0"/>
            <symbol>getTemplateMuMin</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTime&apos; is never used." verbose="The function &apos;getTime&apos; is never used." cwe="561">
            <location file="inc/VSkyCoordinates.h" line="132" column="0"/>
            <symbol>getTime</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTimeSinceRunStart&apos; is never used." verbose="The function &apos;getTimeSinceRunStart&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="949" column="0"/>
            <symbol>getTimeSinceRunStart</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTraceLength&apos; is never used." verbose="The function &apos;getTraceLength&apos; is never used." cwe="561">
            <location file="inc/VTraceHandler.h" line="69" column="0"/>
            <symbol>getTraceLength</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTreeWithSelectedEvents&apos; is never used." verbose="The function &apos;getTreeWithSelectedEvents&apos; is never used." cwe="561">
            <location file="inc/VStereoAnalysis.h" line="106" column="0"/>
            <symbol>getTreeWithSelectedEvents</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getWeather&apos; is never used." verbose="The function &apos;getWeather&apos; is never used." cwe="561">
            <location file="inc/VDBRunInfo.h" line="147" column="0"/>
            <symbol>getWeather</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getWeightedMean&apos; is never used." verbose="The function &apos;getWeightedMean&apos; is never used." cwe="561">
            <location file="inc/VStatistics.h" line="384" column="0"/>
            <symbol>getWeightedMean</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getWobbleEastDB&apos; is never used." verbose="The function &apos;getWobbleEastDB&apos; is never used." cwe="561">
            <location file="inc/VPointingDB.h" line="147" column="0"/>
            <symbol>getWobbleEastDB</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getWobbleNorthDB&apos; is never used." verbose="The function &apos;getWobbleNorthDB&apos; is never used." cwe="561">
            <location file="inc/VPointingDB.h" line="143" column="0"/>
            <symbol>getWobbleNorthDB</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getifIPRmeasure&apos; is never used." verbose="The function &apos;getifIPRmeasure&apos; is never used." cwe="561">
            <location file="inc/VTraceHandler.h" line="108" column="0"/>
            <symbol>getifIPRmeasure</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;hasAT&apos; is never used." verbose="The function &apos;hasAT&apos; is never used." cwe="561">
            <location file="inc/VBFDataReader.h" line="43" column="0"/>
            <symbol>hasAT</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;isCutSet&apos; is never used." verbose="The function &apos;isCutSet&apos; is never used." cwe="561">
            <location file="inc/VEvndispReconstructionParameter.h" line="47" column="0"/>
            <symbol>isCutSet</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;isMCCuts&apos; is never used." verbose="The function &apos;isMCCuts&apos; is never used." cwe="561">
            <location file="inc/VEffectiveAreaCalculatorMCHistograms.h" line="78" column="0"/>
            <symbol>isMCCuts</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;isPEFormat&apos; is never used." verbose="The function &apos;isPEFormat&apos; is never used." cwe="561">
            <location file="inc/VVirtualDataReader.h" line="234" column="0"/>
            <symbol>isPEFormat</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;isShort&apos; is never used." verbose="The function &apos;isShort&apos; is never used." cwe="561">
            <location file="inc/Cshowerpars.h" line="206" column="0"/>
            <symbol>isShort</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;isVBFMC&apos; is never used." verbose="The function &apos;isVBFMC&apos; is never used." cwe="561">
            <location file="inc/VVirtualDataReader.h" line="245" column="0"/>
            <symbol>isVBFMC</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;isZeroSuppressed&apos; is never used." verbose="The function &apos;isZeroSuppressed&apos; is never used." cwe="561">
            <location file="inc/VVirtualDataReader.h" line="331" column="0"/>
            <symbol>isZeroSuppressed</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;listEntries&apos; is never used." verbose="The function &apos;listEntries&apos; is never used." cwe="561">
            <location file="inc/VEffectiveAreaCalculatorMCHistograms.h" line="82" column="0"/>
            <symbol>listEntries</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;normal2DRotated&apos; is never used." verbose="The function &apos;normal2DRotated&apos; is never used." cwe="561">
            <location file="src/VImageParameterFitter.cpp" line="1245" column="0"/>
            <symbol>normal2DRotated</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;plotCORSIKA_IndexofRefraction_vs_Height&apos; is never used." verbose="The function &apos;plotCORSIKA_IndexofRefraction_vs_Height&apos; is never used." cwe="561">
            <location file="inc/VAtmosphereSoundings.h" line="145" column="0"/>
            <symbol>plotCORSIKA_IndexofRefraction_vs_Height</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;plotCORSIKA_Ozone_vs_Height&apos; is never used." verbose="The function &apos;plotCORSIKA_Ozone_vs_Height&apos; is never used." cwe="561">
            <location file="inc/VAtmosphereSoundings.h" line="149" column="0"/>
            <symbol>plotCORSIKA_Ozone_vs_Height</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;plotMigrationMatrix&apos; is never used." verbose="The function &apos;plotMigrationMatrix&apos; is never used." cwe="561">
            <location file="inc/VPlotInstrumentResponseFunction.h" line="116" column="0"/>
            <symbol>plotMigrationMatrix</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;plotUserAtmosphere_IndexofRefraction_vs_Height&apos; is never used." verbose="The function &apos;plotUserAtmosphere_IndexofRefraction_vs_Height&apos; is never used." cwe="561">
            <location file="inc/VAtmosphereSoundings.h" line="178" column="0"/>
            <symbol>plotUserAtmosphere_IndexofRefraction_vs_Height</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;plotUserAtmosphere_Ozone_vs_Height&apos; is never used." verbose="The function &apos;plotUserAtmosphere_Ozone_vs_Height&apos; is never used." cwe="561">
            <location file="inc/VAtmosphereSoundings.h" line="182" column="0"/>
            <symbol>plotUserAtmosphere_Ozone_vs_Height</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;resetEventTotals&apos; is never used." verbose="The function &apos;resetEventTotals&apos; is never used." cwe="561">
            <location file="inc/VTimeMask.h" line="146" column="0"/>
            <symbol>resetEventTotals</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setAllDebugChannels&apos; is never used." verbose="The function &apos;setAllDebugChannels&apos; is never used." cwe="561">
            <location file="inc/VLowGainCalibrator.h" line="177" column="0"/>
            <symbol>setAllDebugChannels</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setBorderThresh&apos; is never used." verbose="The function &apos;setBorderThresh&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1178" column="0"/>
            <symbol>setBorderThresh</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setBrightNonImageThresh&apos; is never used." verbose="The function &apos;setBrightNonImageThresh&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1185" column="0"/>
            <symbol>setBrightNonImageThresh</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setCalData&apos; is never used." verbose="The function &apos;setCalData&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1192" column="0"/>
            <symbol>setCalData</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setDSTEventLimits&apos; is never used." verbose="The function &apos;setDSTEventLimits&apos; is never used." cwe="561">
            <location file="inc/VLowGainCalibrator.h" line="190" column="0"/>
            <symbol>setDSTEventLimits</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setDebugChannels&apos; is never used." verbose="The function &apos;setDebugChannels&apos; is never used." cwe="561">
            <location file="inc/VLowGainCalibrator.h" line="169" column="0"/>
            <symbol>setDebugChannels</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setDebugInfo&apos; is never used." verbose="The function &apos;setDebugInfo&apos; is never used." cwe="561">
            <location file="inc/VPlotAnasumHistograms.h" line="143" column="0"/>
            <symbol>setDebugInfo</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setDynamicRange&apos; is never used." verbose="The function &apos;setDynamicRange&apos; is never used." cwe="561">
            <location file="inc/VTraceHandler.h" line="118" column="0"/>
            <symbol>setDynamicRange</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setEffectiveArea&apos; is never used." verbose="The function &apos;setEffectiveArea&apos; is never used." cwe="561">
            <location file="inc/VEffectiveAreaCalculator.h" line="363" column="0"/>
            <symbol>setEffectiveArea</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setEnergyCuts&apos; is never used." verbose="The function &apos;setEnergyCuts&apos; is never used." cwe="561">
            <location file="inc/VGammaHadronCuts.h" line="401" column="0"/>
            <symbol>setEnergyCuts</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setEnergySpectrum&apos; is never used." verbose="The function &apos;setEnergySpectrum&apos; is never used." cwe="561">
            <location file="inc/VSpectralWeight.h" line="44" column="0"/>
            <symbol>setEnergySpectrum</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setEnergyThreshold&apos; is never used." verbose="The function &apos;setEnergyThreshold&apos; is never used." cwe="561">
            <location file="inc/VEnergySpectrum.h" line="232" column="0"/>
            <symbol>setEnergyThreshold</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setFADCtoPhe&apos; is never used." verbose="The function &apos;setFADCtoPhe&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1255" column="0"/>
            <symbol>setFADCtoPhe</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setHistoFilling&apos; is never used." verbose="The function &apos;setHistoFilling&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1340" column="0"/>
            <symbol>setHistoFilling</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setIgnoreCFGVersions&apos; is never used." verbose="The function &apos;setIgnoreCFGVersions&apos; is never used." cwe="561">
            <location file="inc/VGrIsuReader.h" line="309" column="0"/>
            <symbol>setIgnoreCFGVersions</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setIgnoreUpperLimits&apos; is never used." verbose="The function &apos;setIgnoreUpperLimits&apos; is never used." cwe="561">
            <location file="inc/VLightCurvePlotter.h" line="98" column="0"/>
            <symbol>setIgnoreUpperLimits</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setImageThresh&apos; is never used." verbose="The function &apos;setImageThresh&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1360" column="0"/>
            <symbol>setImageThresh</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setMJDMinMax&apos; is never used." verbose="The function &apos;setMJDMinMax&apos; is never used." cwe="561">
            <location file="inc/VLikelihoodFitter.h" line="98" column="0"/>
            <symbol>setMJDMinMax</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setOutputDirectory&apos; is never used." verbose="The function &apos;setOutputDirectory&apos; is never used." cwe="561">
            <location file="inc/VTableCalculator.h" line="68" column="0"/>
            <symbol>setOutputDirectory</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setPSF&apos; is never used." verbose="The function &apos;setPSF&apos; is never used." cwe="561">
            <location file="inc/VSourceGeometryFitter.h" line="91" column="0"/>
            <symbol>setPSF</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setPlotCrabFluxLineValues&apos; is never used." verbose="The function &apos;setPlotCrabFluxLineValues&apos; is never used." cwe="561">
            <location file="inc/VSensitivityCalculator.h" line="306" column="0"/>
            <symbol>setPlotCrabFluxLineValues</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setPlotDebug&apos; is never used." verbose="The function &apos;setPlotDebug&apos; is never used." cwe="561">
            <location file="inc/VSensitivityCalculator.h" line="310" column="0"/>
            <symbol>setPlotDebug</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setPlotExtendedSourcesFromCataloge&apos; is never used." verbose="The function &apos;setPlotExtendedSourcesFromCataloge&apos; is never used." cwe="561">
            <location file="inc/VExposure.h" line="207" column="0"/>
            <symbol>setPlotExtendedSourcesFromCataloge</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setPlotOtherInstrumentColor&apos; is never used." verbose="The function &apos;setPlotOtherInstrumentColor&apos; is never used." cwe="561">
            <location file="inc/VPlotVERITASPerformance.h" line="86" column="0"/>
            <symbol>setPlotOtherInstrumentColor</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setPlotSourceNames&apos; is never used." verbose="The function &apos;setPlotSourceNames&apos; is never used." cwe="561">
            <location file="inc/VExposure.h" line="211" column="0"/>
            <symbol>setPlotSourceNames</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setPlotVTSObjects&apos; is never used." verbose="The function &apos;setPlotVTSObjects&apos; is never used." cwe="561">
            <location file="inc/VExposure.h" line="244" column="0"/>
            <symbol>setPlotVTSObjects</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setPlottingRangeHeight&apos; is never used." verbose="The function &apos;setPlottingRangeHeight&apos; is never used." cwe="561">
            <location file="inc/VAtmosphereSoundings.h" line="225" column="0"/>
            <symbol>setPlottingRangeHeight</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setReBinningGroupings&apos; is never used." verbose="The function &apos;setReBinningGroupings&apos; is never used." cwe="561">
            <location file="inc/VEnergySpectrum.h" line="225" column="0"/>
            <symbol>setReBinningGroupings</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setReadFullHVEvndispData&apos; is never used." verbose="The function &apos;setReadFullHVEvndispData&apos; is never used." cwe="561">
            <location file="inc/VRunStats.h" line="273" column="0"/>
            <symbol>setReadFullHVEvndispData</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setSpectralFitRangeLog&apos; is never used." verbose="The function &apos;setSpectralFitRangeLog&apos; is never used." cwe="561">
            <location file="inc/VEnergySpectrum.h" line="269" column="0"/>
            <symbol>setSpectralFitRangeLog</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setSumFirst&apos; is never used." verbose="The function &apos;setSumFirst&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1545" column="0"/>
            <symbol>setSumFirst</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setTemplateMu&apos; is never used." verbose="The function &apos;setTemplateMu&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1570" column="0"/>
            <symbol>setTemplateMu</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setTraceWidth&apos; is never used." verbose="The function &apos;setTraceWidth&apos; is never used." cwe="561">
            <location file="inc/VEvndispData.h" line="1724" column="0"/>
            <symbol>setTraceWidth</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setUseIntegratedSensitivityForOffAxisPlots&apos; is never used." verbose="The function &apos;setUseIntegratedSensitivityForOffAxisPlots&apos; is never used." cwe="561">
            <location file="inc/VPlotWPPhysSensitivity.h" line="204" column="0"/>
            <symbol>setUseIntegratedSensitivityForOffAxisPlots</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config."/>
    </errors>
</results>
