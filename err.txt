[1minc/VGlobalRunParameter.h:148:57: [31mperformance:[39m Function parameter 'iDir' should be passed by const reference. [passedByValue][0m
        void         setDirectory_EVNDISPOutput( string iDir )
                                                        ^
[1minc/CData.h:468:8: [31mwarning:[39m Member variable 'CData::b_loss' is not initialized in the constructor. [uninitMemberVar][0m
CData::CData( TTree* tree, bool bMC, bool bShort )
       ^
[1minc/CData.h:468:8: [31mwarning:[39m Member variable 'CData::b_nsat' is not initialized in the constructor. [uninitMemberVar][0m
CData::CData( TTree* tree, bool bMC, bool bShort )
       ^
[1minc/CData.h:468:8: [31mwarning:[39m Member variable 'CData::b_nlowgain' is not initialized in the constructor. [uninitMemberVar][0m
CData::CData( TTree* tree, bool bMC, bool bShort )
       ^
[1minc/CData.h:274:26: [31mstyle:[39m Virtual function 'Init' is called from constructor 'CData(TTree*tree=0,bool bMC=false,bool bShort=false)' at line 474. Dynamic binding is not used. [virtualCallInConstructor][0m
        virtual void     Init( TTree* tree );
                         ^
[1minc/CData.h:474:5: [2mnote:[0m Calling Init
    Init( tree );
    ^
[1minc/CData.h:274:26: [2mnote:[0m Init is a virtual function
        virtual void     Init( TTree* tree );
                         ^
[1minc/CData.h:1196:11: [31mstyle:[39m Variable 'entry' is assigned a value that is never used. [unreadVariable][0m
    entry = 0;
          ^
[1minc/CEffArea.h:613:11: [31mstyle:[39m Variable 'entry' is assigned a value that is never used. [unreadVariable][0m
    entry = 1;
          ^
[1minc/CRunSummary.h:128:26: [31mstyle:[39m Virtual function 'Init' is called from constructor 'CRunSummary(TTree*tree=0)' at line 142. Dynamic binding is not used. [virtualCallInConstructor][0m
        virtual void     Init( TTree* tree );
                         ^
[1minc/CRunSummary.h:142:5: [2mnote:[0m Calling Init
    Init( tree );
    ^
[1minc/CRunSummary.h:128:26: [2mnote:[0m Init is a virtual function
        virtual void     Init( TTree* tree );
                         ^
[1minc/Cshowerpars.h:215:14: [31mwarning:[39m Member variable 'Cshowerpars::b_MCzcore_SC' is not initialized in the constructor. [uninitMemberVar][0m
Cshowerpars::Cshowerpars( TTree* tree, bool iMC, bool iShort )
             ^
[1minc/Cshowerpars.h:198:26: [31mstyle:[39m Virtual function 'Init' is called from constructor 'Cshowerpars(TTree*tree=0,bool iMC=false,bool iShort=false)' at line 226. Dynamic binding is not used. [virtualCallInConstructor][0m
        virtual void     Init( TTree* tree );
                         ^
[1minc/Cshowerpars.h:226:5: [2mnote:[0m Calling Init
    Init( tree );
    ^
[1minc/Cshowerpars.h:198:26: [2mnote:[0m Init is a virtual function
        virtual void     Init( TTree* tree );
                         ^
[1minc/Ctelconfig.h:95:26: [31mstyle:[39m Virtual function 'Init' is called from constructor 'Ctelconfig(TTree*tree=0)' at line 106. Dynamic binding is not used. [virtualCallInConstructor][0m
        virtual void     Init( TTree* tree );
                         ^
[1minc/Ctelconfig.h:106:5: [2mnote:[0m Calling Init
    Init( tree );
    ^
[1minc/Ctelconfig.h:95:26: [2mnote:[0m Init is a virtual function
        virtual void     Init( TTree* tree );
                         ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_telID' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_runNumber' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_MJD' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_Time' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_fimagethresh' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_fborderthresh' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_fsumfirst' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_fsumwindow' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_fsumwindow_2' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_fsumwindowsmall' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_LocalTrigger' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_MCprim' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_MCe0' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_MCxcore' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_MCycore' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_MCxcos' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_MCycos' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_MCLocalTriggerTime' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_MCLocalDelayedTriggerTime' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_MCTel_Xoff' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_MCTel_Yoff' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_azwidth' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_miss' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_ntrig' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_ntrig_per_patch' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_bad' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_frac' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_tgrad_y' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_tgrad_r' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_tint_x' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_tgrad_dx' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_tint_dx' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_tmin' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_tmax' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:238:9: [31mwarning:[39m Member variable 'Ctpars::b_tmean' is not initialized in the constructor. [uninitMemberVar][0m
Ctpars::Ctpars( TTree* tree, bool iMC, unsigned int iShort )
        ^
[1minc/Ctpars.h:204:26: [31mstyle:[39m Virtual function 'Init' is called from constructor 'Ctpars(TTree*tree=0,bool iMC=false,int iShort=false)' at line 253. Dynamic binding is not used. [virtualCallInConstructor][0m
        virtual void     Init( TTree* tree );
                         ^
[1minc/Ctpars.h:253:5: [2mnote:[0m Calling Init
    Init( tree );
    ^
[1minc/Ctpars.h:204:26: [2mnote:[0m Init is a virtual function
        virtual void     Init( TTree* tree );
                         ^
[1minc/VSkyCoordinates.h:183:32: [31mstyle:[39m Boolean value assigned to floating point variable. [assignBoolToFloat][0m
            fSupressStdoutText = setting ;
                               ^
[1minc/VGammaHadronCuts.h:86:16: [31mwarning:[39m The class 'VGammaHadronCuts' defines member variable with name 'fDebug' also defined in its parent class 'VAnalysisUtilities'. [duplInheritedMember][0m
        bool   fDebug;                               // lots of debug output
               ^
[1minc/VAnalysisUtilities.h:35:22: [2mnote:[0m Parent variable 'VAnalysisUtilities::fDebug'
        unsigned int fDebug;
                     ^
[1minc/VGammaHadronCuts.h:86:16: [2mnote:[0m Derived variable 'VGammaHadronCuts::fDebug'
        bool   fDebug;                               // lots of debug output
               ^
[1minc/VRadialAcceptance.h:145:9: [31mstyle:[39m Class 'VRadialAcceptance' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VRadialAcceptance( string ifile, int irun = -1 );
        ^
[1minc/VAnaSum.h:45:9: [31mstyle:[39m Class 'VAnaSum' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VAnaSum( string i_datadir );
        ^
[1minc/VPlotUtilities.h:149:46: [31mperformance:[39m Function parameter 'iS' should be passed by const reference. [passedByValue][0m
        void   setPlotHistogramTitle( string iS = "", double x = -1., double y = -1. )
                                             ^
[1minc/VTMVARunData.h:110:30: [31mperformance:[39m Function parameter 'iN' should be passed by const reference. [passedByValue][0m
        void setName( string iN )
                             ^
[1minc/VTMVAEvaluator.h:306:46: [31mperformance:[39m Function parameter 'iParticleNumberFile' should be passed by const reference. [passedByValue][0m
        void   setParticleNumberFile( string iParticleNumberFile = "", double iConversionFactor_to_seconds = 60. )
                                             ^
[1minc/VGammaHadronCuts.h:392:41: [31mperformance:[39m Function parameter 'id' should be passed by const reference. [passedByValue][0m
        void   setDataDirectory( string id )
                                        ^
[1minc/VGammaHadronCuts.h:406:43: [31mperformance:[39m Function parameter 'iEpoch' should be passed by const reference. [passedByValue][0m
        void   setInstrumentEpoch( string iEpoch )
                                          ^
[1minc/VGammaHadronCuts.h:417:56: [31mperformance:[39m Function parameter 'iTelToAnalyze' should be passed by const reference. [passedByValue][0m
        void   setTelToAnalyze( vector< unsigned int > iTelToAnalyze )
                                                       ^
[1minc/VExclusionRegions.h:90:77: [31mperformance:[39m Function parameter 'iBS' should be passed by const reference. [passedByValue][0m
        void addBrightStarSettings( vector< VBrightStarExclusionSettings* > iBS )
                                                                            ^
[1minc/VExclusionRegions.h:115:39: [31mperformance:[39m Function parameter 'iCatalogue' should be passed by const reference. [passedByValue][0m
        void setStarCatalogue( string iCatalogue )
                                      ^
[1minc/VSkyCoordinates.h:155:38: [31mperformance:[39m Function parameter 'iTargetName' should be passed by const reference. [passedByValue][0m
        void   setTargetName( string iTargetName )
                                     ^
[1minc/VStereoAnalysis.h:117:51: [31mperformance:[39m Function parameter 'iExpl' should be passed by const reference. [passedByValue][0m
        void   setRunExposure( map< int, double > iExpl )
                                                  ^
[1minc/VStereoAnalysis.h:121:46: [31mperformance:[39m Function parameter 'iRunMJD' should be passed by const reference. [passedByValue][0m
        void   setRunMJD( map< int, double > iRunMJD )
                                             ^
[1minc/VStatistics.h:384:54: [31mstyle:[39m Parameter 'x' can be declared with const [constParameter][0m
    inline double getWeightedMean( vector< double >& x, vector< double >& w )
                                                     ^
[1minc/VStatistics.h:384:75: [31mstyle:[39m Parameter 'w' can be declared with const [constParameter][0m
    inline double getWeightedMean( vector< double >& x, vector< double >& w )
                                                                          ^
[1minc/VStatistics.h:148:38: [31mstyle:[39m Parameter 'x' can be declared with const [constParameter][0m
    inline Double_t funcg( Double_t* x, Double_t* par )
                                     ^
[1minc/VStatistics.h:148:51: [31mstyle:[39m Parameter 'par' can be declared with const [constParameter][0m
    inline Double_t funcg( Double_t* x, Double_t* par )
                                                  ^
[1minc/VStatistics.h:157:38: [31mstyle:[39m Parameter 'x' can be declared with const [constParameter][0m
    inline Double_t funcf( Double_t* x, Double_t* par )
                                     ^
[1minc/VStatistics.h:217:21: [31mstyle:[39m Variable 'nOn' is assigned a value that is never used. [unreadVariable][0m
                nOn = nOff;
                    ^
[1minc/VVirtualDataReader.h:419:13: [31mstyle:[39m Assignment of function parameter has no effect outside the function. [uselessAssignmentArg][0m
            iB = false;
            ^
[1minc/VPEReader.h:314:13: [31mstyle:[39m Assignment of function parameter has no effect outside the function. [uselessAssignmentArg][0m
            iB = false;
            ^
[1minc/VArrayAnalyzer.h:25:14: [31mwarning:[39m The class 'VArrayAnalyzer' defines member variable with name 'fDebug' also defined in its parent class 'VEvndispData'. [duplInheritedMember][0m
        bool fDebug;
             ^
[1minc/VEvndispData.h:46:21: [2mnote:[0m Parent variable 'VEvndispData::fDebug'
        static bool fDebug;
                    ^
[1minc/VArrayAnalyzer.h:25:14: [2mnote:[0m Derived variable 'VArrayAnalyzer::fDebug'
        bool fDebug;
             ^
[1minc/VImageAnalyzerHistograms.h:26:9: [31mstyle:[39m Class 'VImageAnalyzerHistograms' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VImageAnalyzerHistograms( unsigned int iTel );
        ^
[1minc/VSpecialChannel.h:34:9: [31mstyle:[39m Class 'VSpecialChannel' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VSpecialChannel( unsigned int iTelID );      // telescope ID: T1=0
        ^
[1minc/VImageAnalyzerData.h:118:9: [31mstyle:[39m Class 'VImageAnalyzerData' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VImageAnalyzerData( unsigned int iTelID, unsigned int iShortTree = 0,
        ^
[1minc/VDetectorGeometry.h:22:9: [31mstyle:[39m Class 'VDetectorGeometry' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VDetectorGeometry( unsigned int iNTel, bool iDebug = false );
        ^
[1minc/VPETree.h:39:9: [31mstyle:[39m Class 'VPETree' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VPETree( TTree* t );
        ^
[1minc/VDB_PixelDataReader.h:69:9: [31mstyle:[39m Class 'VDB_PixelDataReader' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VDB_PixelDataReader( vector< unsigned int > nPixel_per_telescope );
        ^
[1minc/VPointing.h:54:9: [31mstyle:[39m Class 'VPointing' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VPointing( unsigned int itelID );
        ^
[1minc/VDSTReader.h:68:14: [31mstyle:[39m The function 'isZeroSuppressed' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool isZeroSuppressed( unsigned int iChannel );
             ^
[1minc/VVirtualDataReader.h:331:22: [2mnote:[0m Virtual function in base class
        virtual bool isZeroSuppressed( unsigned int iChannel )
                     ^
[1minc/VDSTReader.h:68:14: [2mnote:[0m Function in derived class
        bool isZeroSuppressed( unsigned int iChannel );
             ^
[1minc/VDSTReader.h:69:28: [31mstyle:[39m The function 'getZeroSuppressionFlag' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned short int getZeroSuppressionFlag( unsigned int iChannel );
                           ^
[1minc/VVirtualDataReader.h:339:36: [2mnote:[0m Virtual function in base class
        virtual unsigned short int getZeroSuppressionFlag( unsigned int iChannel )
                                   ^
[1minc/VDSTReader.h:69:28: [2mnote:[0m Function in derived class
        unsigned short int getZeroSuppressionFlag( unsigned int iChannel );
                           ^
[1minc/VDSTReader.h:70:37: [31mstyle:[39m The function 'getChannelHitIndex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::pair< bool, uint32_t > getChannelHitIndex( uint32_t i_channel );
                                    ^
[1minc/VVirtualDataReader.h:86:45: [2mnote:[0m Virtual function in base class
        virtual std::pair< bool, uint32_t > getChannelHitIndex( uint32_t ) = 0;
                                            ^
[1minc/VDSTReader.h:70:37: [2mnote:[0m Function in derived class
        std::pair< bool, uint32_t > getChannelHitIndex( uint32_t i_channel );
                                    ^
[1minc/VDSTReader.h:71:37: [31mstyle:[39m The function 'getDataFormat' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        string                      getDataFormat()
                                    ^
[1minc/VVirtualDataReader.h:47:45: [2mnote:[0m Virtual function in base class
        virtual string                      getDataFormat()
                                            ^
[1minc/VDSTReader.h:71:37: [2mnote:[0m Function in derived class
        string                      getDataFormat()
                                    ^
[1minc/VDSTReader.h:75:37: [31mstyle:[39m The function 'getDataFormatNum' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getDataFormatNum()
                                    ^
[1minc/VVirtualDataReader.h:52:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getDataFormatNum()
                                            ^
[1minc/VDSTReader.h:75:37: [2mnote:[0m Function in derived class
        unsigned int                getDataFormatNum()
                                    ^
[1minc/VDSTReader.h:79:37: [31mstyle:[39m The function 'getDead' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector<unsigned int>&       getDead()
                                    ^
[1minc/VVirtualDataReader.h:412:46: [2mnote:[0m Virtual function in base class
        virtual std::vector< unsigned int >& getDead()
                                             ^
[1minc/VDSTReader.h:79:37: [2mnote:[0m Function in derived class
        vector<unsigned int>&       getDead()
                                    ^
[1minc/VDSTReader.h:83:37: [31mstyle:[39m The function 'getEventNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getEventNumber()
                                    ^
[1minc/VVirtualDataReader.h:87:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getEventNumber() = 0;
                                            ^
[1minc/VDSTReader.h:83:37: [2mnote:[0m Function in derived class
        uint32_t                    getEventNumber()
                                    ^
[1minc/VDSTReader.h:87:37: [31mstyle:[39m The function 'getEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                     getEventType()
                                    ^
[1minc/VVirtualDataReader.h:92:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getEventType() = 0;
                                            ^
[1minc/VDSTReader.h:87:37: [2mnote:[0m Function in derived class
        uint8_t                     getEventType()
                                    ^
[1minc/VDSTReader.h:91:37: [31mstyle:[39m The function 'getATEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                     getATEventType()
                                    ^
[1minc/VVirtualDataReader.h:97:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getATEventType() = 0;
                                            ^
[1minc/VDSTReader.h:91:37: [2mnote:[0m Function in derived class
        uint8_t                     getATEventType()
                                    ^
[1minc/VDSTReader.h:95:24: [31mstyle:[39m The function 'getDSTTreeEvent' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int   getDSTTreeEvent()
                       ^
[1minc/VVirtualDataReader.h:99:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getDSTTreeEvent()
                                            ^
[1minc/VDSTReader.h:95:24: [2mnote:[0m Function in derived class
        unsigned int   getDSTTreeEvent()
                       ^
[1minc/VDSTReader.h:99:37: [31mstyle:[39m The function 'getFullHitVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< bool >              getFullHitVec()
                                    ^
[1minc/VVirtualDataReader.h:107:46: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >          getFullHitVec() = 0;
                                             ^
[1minc/VDSTReader.h:99:37: [2mnote:[0m Function in derived class
        vector< bool >              getFullHitVec()
                                    ^
[1minc/VDSTReader.h:103:37: [31mstyle:[39m The function 'getFullTrigVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< bool >              getFullTrigVec()
                                    ^
[1minc/VVirtualDataReader.h:108:46: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >          getFullTrigVec() = 0;
                                             ^
[1minc/VDSTReader.h:103:37: [2mnote:[0m Function in derived class
        vector< bool >              getFullTrigVec()
                                    ^
[1minc/VDSTReader.h:107:37: [31mstyle:[39m The function 'getNumberofFullTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int                         getNumberofFullTrigger()
                                    ^
[1minc/VVirtualDataReader.h:109:45: [2mnote:[0m Virtual function in base class
        virtual int                         getNumberofFullTrigger() = 0;
                                            ^
[1minc/VDSTReader.h:107:37: [2mnote:[0m Function in derived class
        int                         getNumberofFullTrigger()
                                    ^
[1minc/VDSTReader.h:111:37: [31mstyle:[39m The function 'getGPS0' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS0()
                                    ^
[1minc/VVirtualDataReader.h:114:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS0() = 0;
                                            ^
[1minc/VDSTReader.h:111:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS0()
                                    ^
[1minc/VDSTReader.h:115:37: [31mstyle:[39m The function 'getGPS1' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS1()
                                    ^
[1minc/VVirtualDataReader.h:115:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS1() = 0;
                                            ^
[1minc/VDSTReader.h:115:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS1()
                                    ^
[1minc/VDSTReader.h:119:37: [31mstyle:[39m The function 'getGPS2' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS2()
                                    ^
[1minc/VVirtualDataReader.h:116:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS2() = 0;
                                            ^
[1minc/VDSTReader.h:119:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS2()
                                    ^
[1minc/VDSTReader.h:123:37: [31mstyle:[39m The function 'getGPS3' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS3()
                                    ^
[1minc/VVirtualDataReader.h:117:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS3() = 0;
                                            ^
[1minc/VDSTReader.h:123:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS3()
                                    ^
[1minc/VDSTReader.h:127:37: [31mstyle:[39m The function 'getGPS4' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS4()
                                    ^
[1minc/VVirtualDataReader.h:118:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS4() = 0;
                                            ^
[1minc/VDSTReader.h:127:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS4()
                                    ^
[1minc/VDSTReader.h:131:37: [31mstyle:[39m The function 'getGPSYear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getGPSYear()
                                    ^
[1minc/VVirtualDataReader.h:119:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getGPSYear() = 0;
                                            ^
[1minc/VDSTReader.h:131:37: [2mnote:[0m Function in derived class
        uint16_t                    getGPSYear()
                                    ^
[1minc/VDSTReader.h:135:37: [31mstyle:[39m The function 'getATGPSYear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getATGPSYear()
                                    ^
[1minc/VVirtualDataReader.h:120:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getATGPSYear() = 0;
                                            ^
[1minc/VDSTReader.h:135:37: [2mnote:[0m Function in derived class
        uint16_t                    getATGPSYear()
                                    ^
[1minc/VDSTReader.h:139:37: [31mstyle:[39m The function 'getHitID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getHitID( uint32_t );
                                    ^
[1minc/VVirtualDataReader.h:121:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getHitID( uint32_t i ) = 0;
                                            ^
[1minc/VDSTReader.h:139:37: [2mnote:[0m Function in derived class
        uint32_t                    getHitID( uint32_t );
                                    ^
[1minc/VDSTReader.h:140:37: [31mstyle:[39m The function 'getHiLo' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        getHiLo( uint32_t i )
                                    ^
[1minc/VVirtualDataReader.h:127:45: [2mnote:[0m Virtual function in base class
        virtual bool                        getHiLo( uint32_t i ) = 0;
                                            ^
[1minc/VDSTReader.h:140:37: [2mnote:[0m Function in derived class
        bool                        getHiLo( uint32_t i )
                                    ^
[1minc/VDSTReader.h:151:37: [31mstyle:[39m The function 'getLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< bool >&             getLocalTrigger()
                                    ^
[1minc/VVirtualDataReader.h:358:44: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >&       getLocalTrigger()
                                           ^
[1minc/VDSTReader.h:151:37: [2mnote:[0m Function in derived class
        vector< bool >&             getLocalTrigger()
                                    ^
[1minc/VDSTReader.h:155:37: [31mstyle:[39m The function 'getLocalTriggerType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned short int          getLocalTriggerType( unsigned int iTelID )
                                    ^
[1minc/VVirtualDataReader.h:374:44: [2mnote:[0m Virtual function in base class
        virtual unsigned short int         getLocalTriggerType( unsigned int iTel )
                                           ^
[1minc/VDSTReader.h:155:37: [2mnote:[0m Function in derived class
        unsigned short int          getLocalTriggerType( unsigned int iTelID )
                                    ^
[1minc/VDSTReader.h:166:37: [31mstyle:[39m The function 'getLocalTriggerTime' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                       getLocalTriggerTime( unsigned int iTel )
                                    ^
[1minc/VVirtualDataReader.h:366:44: [2mnote:[0m Virtual function in base class
        virtual float                      getLocalTriggerTime( unsigned int iTel )
                                           ^
[1minc/VDSTReader.h:166:37: [2mnote:[0m Function in derived class
        float                       getLocalTriggerTime( unsigned int iTel )
                                    ^
[1minc/VDSTReader.h:177:37: [31mstyle:[39m The function 'getLocalDelayedTriggerTime' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                       getLocalDelayedTriggerTime( unsigned int iTel )
                                    ^
[1minc/VVirtualDataReader.h:370:44: [2mnote:[0m Virtual function in base class
        virtual float                      getLocalDelayedTriggerTime( unsigned int iTel )
                                           ^
[1minc/VDSTReader.h:177:37: [2mnote:[0m Function in derived class
        float                       getLocalDelayedTriggerTime( unsigned int iTel )
                                    ^
[1minc/VDSTReader.h:188:37: [31mstyle:[39m The function 'getMaxChannels' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getMaxChannels()
                                    ^
[1minc/VVirtualDataReader.h:122:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getMaxChannels() = 0;
                                            ^
[1minc/VDSTReader.h:188:37: [2mnote:[0m Function in derived class
        uint16_t                    getMaxChannels()
                                    ^
[1minc/VDSTReader.h:192:37: [31mstyle:[39m The function 'getNumChannelsHit' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getNumChannelsHit()
                                    ^
[1minc/VVirtualDataReader.h:124:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getNumChannelsHit() = 0;
                                            ^
[1minc/VDSTReader.h:192:37: [2mnote:[0m Function in derived class
        uint16_t                    getNumChannelsHit()
                                    ^
[1minc/VDSTReader.h:196:37: [31mstyle:[39m The function 'getNumSamples' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getNumSamples()
                                    ^
[1minc/VVirtualDataReader.h:125:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getNumSamples() = 0;
                                            ^
[1minc/VDSTReader.h:196:37: [2mnote:[0m Function in derived class
        uint16_t                    getNumSamples()
                                    ^
[1minc/VDSTReader.h:207:37: [31mstyle:[39m The function 'getMCTree' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        TTree*                      getMCTree();
                                    ^
[1minc/VVirtualDataReader.h:256:44: [2mnote:[0m Virtual function in base class
        virtual TTree*                     getMCTree()
                                           ^
[1minc/VDSTReader.h:207:37: [2mnote:[0m Function in derived class
        TTree*                      getMCTree();
                                    ^
[1minc/VDSTReader.h:208:37: [31mstyle:[39m The function 'getMC_primary' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int                         getMC_primary()
                                    ^
[1minc/VVirtualDataReader.h:261:44: [2mnote:[0m Virtual function in base class
        virtual int                        getMC_primary()
                                           ^
[1minc/VDSTReader.h:208:37: [2mnote:[0m Function in derived class
        int                         getMC_primary()
                                    ^
[1minc/VDSTReader.h:212:37: [31mstyle:[39m The function 'getMC_energy' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                       getMC_energy()                  //!< MC primary energy
                                    ^
[1minc/VVirtualDataReader.h:266:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_energy()
                                           ^
[1minc/VDSTReader.h:212:37: [2mnote:[0m Function in derived class
        float                       getMC_energy()                  //!< MC primary energy
                                    ^
[1minc/VDSTReader.h:216:19: [31mstyle:[39m The function 'getMC_X' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_X()                       //!< MC x-coordinate of impact point on ground plane
                  ^
[1minc/VVirtualDataReader.h:271:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_X()
                                           ^
[1minc/VDSTReader.h:216:19: [2mnote:[0m Function in derived class
        float     getMC_X()                       //!< MC x-coordinate of impact point on ground plane
                  ^
[1minc/VDSTReader.h:220:19: [31mstyle:[39m The function 'getMC_Y' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Y()                       //!< MC y-coordinate of impact point on ground plane
                  ^
[1minc/VVirtualDataReader.h:276:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Y()
                                           ^
[1minc/VDSTReader.h:220:19: [2mnote:[0m Function in derived class
        float     getMC_Y()                       //!< MC y-coordinate of impact point on ground plane
                  ^
[1minc/VDSTReader.h:224:19: [31mstyle:[39m The function 'getMC_Xcos' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Xcos()                    //!< MC x direction cosine of primary in ground coordinate system
                  ^
[1minc/VVirtualDataReader.h:281:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Xcos()
                                           ^
[1minc/VDSTReader.h:224:19: [2mnote:[0m Function in derived class
        float     getMC_Xcos()                    //!< MC x direction cosine of primary in ground coordinate system
                  ^
[1minc/VDSTReader.h:228:19: [31mstyle:[39m The function 'getMC_Ycos' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Ycos()                    //!< MC y direction cosine of primary in ground coordinate system
                  ^
[1minc/VVirtualDataReader.h:286:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Ycos()
                                           ^
[1minc/VDSTReader.h:228:19: [2mnote:[0m Function in derived class
        float     getMC_Ycos()                    //!< MC y direction cosine of primary in ground coordinate system
                  ^
[1minc/VDSTReader.h:232:19: [31mstyle:[39m The function 'getMC_Ze' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Ze()                      //!< MC zenith angle of primary
                  ^
[1minc/VVirtualDataReader.h:291:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Ze()
                                           ^
[1minc/VDSTReader.h:232:19: [2mnote:[0m Function in derived class
        float     getMC_Ze()                      //!< MC zenith angle of primary
                  ^
[1minc/VDSTReader.h:236:19: [31mstyle:[39m The function 'getMC_Az' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Az()                      //!< MC azimuth angle of primary
                  ^
[1minc/VVirtualDataReader.h:296:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Az()
                                           ^
[1minc/VDSTReader.h:236:19: [2mnote:[0m Function in derived class
        float     getMC_Az()                      //!< MC azimuth angle of primary
                  ^
[1minc/VDSTReader.h:240:19: [31mstyle:[39m The function 'getMC_Xoffset' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Xoffset()                 //!< MC x coordinate of source location in degrees
                  ^
[1minc/VVirtualDataReader.h:301:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Xoffset()
                                           ^
[1minc/VDSTReader.h:240:19: [2mnote:[0m Function in derived class
        float     getMC_Xoffset()                 //!< MC x coordinate of source location in degrees
                  ^
[1minc/VDSTReader.h:244:19: [31mstyle:[39m The function 'getMC_Yoffset' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Yoffset()                 //!< MC x coordinate of source location in degrees
                  ^
[1minc/VVirtualDataReader.h:306:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Yoffset()
                                           ^
[1minc/VDSTReader.h:244:19: [2mnote:[0m Function in derived class
        float     getMC_Yoffset()                 //!< MC x coordinate of source location in degrees
                  ^
[1minc/VDSTReader.h:248:22: [31mstyle:[39m The function 'getNextEvent' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool         getNextEvent();
                     ^
[1minc/VVirtualDataReader.h:186:45: [2mnote:[0m Virtual function in base class
        virtual bool                        getNextEvent() = 0;
                                            ^
[1minc/VDSTReader.h:248:22: [2mnote:[0m Function in derived class
        bool         getNextEvent();
                     ^
[1minc/VDSTReader.h:249:39: [31mstyle:[39m The function 'getMonteCarloHeader' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        VMonteCarloRunHeader*         getMonteCarloHeader();
                                      ^
[1minc/VVirtualDataReader.h:123:45: [2mnote:[0m Virtual function in base class
        virtual VMonteCarloRunHeader*       getMonteCarloHeader() = 0;
                                            ^
[1minc/VDSTReader.h:249:39: [2mnote:[0m Function in derived class
        VMonteCarloRunHeader*         getMonteCarloHeader();
                                      ^
[1minc/VDSTReader.h:250:39: [31mstyle:[39m The function 'getNumTelescopes' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                  getNumTelescopes()
                                      ^
[1minc/VVirtualDataReader.h:60:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getNumTelescopes()
                                            ^
[1minc/VDSTReader.h:250:39: [2mnote:[0m Function in derived class
        unsigned int                  getNumTelescopes()
                                      ^
[1minc/VDSTReader.h:254:39: [31mstyle:[39m The function 'getNTelLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                  getNTelLocalTrigger()
                                      ^
[1minc/VVirtualDataReader.h:354:44: [2mnote:[0m Virtual function in base class
        virtual unsigned int               getNTelLocalTrigger()
                                           ^
[1minc/VDSTReader.h:254:39: [2mnote:[0m Function in derived class
        unsigned int                  getNTelLocalTrigger()
                                      ^
[1minc/VDSTReader.h:258:39: [31mstyle:[39m The function 'getNTel' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                  getNTel()
                                      ^
[1minc/VVirtualDataReader.h:126:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getNTel() = 0;
                                            ^
[1minc/VDSTReader.h:258:39: [2mnote:[0m Function in derived class
        unsigned int                  getNTel()
                                      ^
[1minc/VDSTReader.h:262:39: [31mstyle:[39m The function 'getRunNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                      getRunNumber()
                                      ^
[1minc/VVirtualDataReader.h:98:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getRunNumber() = 0;
                                            ^
[1minc/VDSTReader.h:262:39: [2mnote:[0m Function in derived class
        uint32_t                      getRunNumber()
                                      ^
[1minc/VDSTReader.h:270:39: [31mstyle:[39m The function 'getSamplesVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< uint8_t >             getSamplesVec();
                                      ^
[1minc/VVirtualDataReader.h:160:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< uint8_t >      getSamplesVec() = 0;
                                            ^
[1minc/VDSTReader.h:270:39: [2mnote:[0m Function in derived class
        vector< uint8_t >             getSamplesVec();
                                      ^
[1minc/VDSTReader.h:271:39: [31mstyle:[39m The function 'getSample' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                       getSample( unsigned channel, unsigned sample, bool iNewNoiseTrace = true );
                                      ^
[1minc/VVirtualDataReader.h:156:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getSample( unsigned channel, unsigned sample, bool iNewNoiseTrace = true )
                                            ^
[1minc/VDSTReader.h:271:39: [2mnote:[0m Function in derived class
        uint8_t                       getSample( unsigned channel, unsigned sample, bool iNewNoiseTrace = true );
                                      ^
[1minc/VDSTReader.h:272:39: [31mstyle:[39m The function 'getSamplesVec16Bit' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< uint16_t >            getSamplesVec16Bit();
                                      ^
[1minc/VVirtualDataReader.h:166:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< uint16_t >     getSamplesVec16Bit()
                                            ^
[1minc/VDSTReader.h:272:39: [2mnote:[0m Function in derived class
        vector< uint16_t >            getSamplesVec16Bit();
                                      ^
[1minc/VDSTReader.h:273:39: [31mstyle:[39m The function 'getSample16Bit' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                      getSample16Bit( unsigned channel, unsigned sample, bool iNewNoiseTrace = true );
                                      ^
[1minc/VVirtualDataReader.h:161:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getSample16Bit( unsigned channel, unsigned sample, bool iNewNoiseTrace = true )
                                            ^
[1minc/VDSTReader.h:273:39: [2mnote:[0m Function in derived class
        uint16_t                      getSample16Bit( unsigned channel, unsigned sample, bool iNewNoiseTrace = true );
                                      ^
[1minc/VDSTReader.h:282:39: [31mstyle:[39m The function 'getSourceFileName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        string                        getSourceFileName()
                                      ^
[1minc/VVirtualDataReader.h:64:45: [2mnote:[0m Virtual function in base class
        virtual string                      getSourceFileName()
                                            ^
[1minc/VDSTReader.h:282:39: [2mnote:[0m Function in derived class
        string                        getSourceFileName()
                                      ^
[1minc/VDSTReader.h:286:39: [31mstyle:[39m The function 'getTelAzimuth' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< double >              getTelAzimuth()
                                      ^
[1minc/VVirtualDataReader.h:207:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< double >       getTelAzimuth()
                                            ^
[1minc/VDSTReader.h:286:39: [2mnote:[0m Function in derived class
        vector< double >              getTelAzimuth()
                                      ^
[1minc/VDSTReader.h:290:39: [31mstyle:[39m The function 'getTelElevation' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< double >              getTelElevation()
                                      ^
[1minc/VVirtualDataReader.h:203:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< double >       getTelElevation()
                                            ^
[1minc/VDSTReader.h:290:39: [2mnote:[0m Function in derived class
        vector< double >              getTelElevation()
                                      ^
[1minc/VDSTReader.h:294:39: [31mstyle:[39m The function 'getTelescopeID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                  getTelescopeID()
                                      ^
[1minc/VVirtualDataReader.h:68:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getTelescopeID()
                                            ^
[1minc/VDSTReader.h:294:39: [2mnote:[0m Function in derived class
        unsigned int                  getTelescopeID()
                                      ^
[1minc/VDSTReader.h:306:39: [31mstyle:[39m The function 'getTracePulseTiming' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< valarray< double > >& getTracePulseTiming( unsigned int iNChannel = 99999 )
                                      ^
[1minc/VVirtualDataReader.h:408:52: [2mnote:[0m Virtual function in base class
        virtual std::vector< valarray< double > >& getTracePulseTiming( unsigned int iNChannel = 99999 )
                                                   ^
[1minc/VDSTReader.h:306:39: [2mnote:[0m Function in derived class
        vector< valarray< double > >& getTracePulseTiming( unsigned int iNChannel = 99999 )
                                      ^
[1minc/VDSTReader.h:310:19: [31mstyle:[39m The function 'has16Bit' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      has16Bit()
                  ^
[1minc/VVirtualDataReader.h:343:22: [2mnote:[0m Virtual function in base class
        virtual bool has16Bit()
                     ^
[1minc/VDSTReader.h:310:19: [2mnote:[0m Function in derived class
        bool      has16Bit()
                  ^
[1minc/VDSTReader.h:314:19: [31mstyle:[39m The function 'hasFADCTrace' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      hasFADCTrace()
                  ^
[1minc/VVirtualDataReader.h:327:22: [2mnote:[0m Virtual function in base class
        virtual bool hasFADCTrace()
                     ^
[1minc/VDSTReader.h:314:19: [2mnote:[0m Function in derived class
        bool      hasFADCTrace()
                  ^
[1minc/VDSTReader.h:325:19: [31mstyle:[39m The function 'hasLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      hasLocalTrigger( unsigned int iTel )
                  ^
[1minc/VVirtualDataReader.h:362:44: [2mnote:[0m Virtual function in base class
        virtual bool                       hasLocalTrigger( unsigned int iTel )
                                           ^
[1minc/VDSTReader.h:325:19: [2mnote:[0m Function in derived class
        bool      hasLocalTrigger( unsigned int iTel )
                  ^
[1minc/VDSTReader.h:336:19: [31mstyle:[39m The function 'isMC' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      isMC()
                  ^
[1minc/VVirtualDataReader.h:214:44: [2mnote:[0m Virtual function in base class
        virtual bool                       isMC() //!< is data MC?
                                           ^
[1minc/VDSTReader.h:336:19: [2mnote:[0m Function in derived class
        bool      isMC()
                  ^
[1minc/VDSTReader.h:340:19: [31mstyle:[39m The function 'selectHitChan' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void      selectHitChan( uint32_t hit )
                  ^
[1minc/VVirtualDataReader.h:170:45: [2mnote:[0m Virtual function in base class
        virtual void                        selectHitChan( uint32_t ) = 0;
                                            ^
[1minc/VDSTReader.h:340:19: [2mnote:[0m Function in derived class
        void      selectHitChan( uint32_t hit )
                  ^
[1minc/VDSTReader.h:351:19: [31mstyle:[39m The function 'setPerformFADCAnalysis' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void      setPerformFADCAnalysis( unsigned int iTelID, bool iB )
                  ^
[1minc/VVirtualDataReader.h:417:22: [2mnote:[0m Virtual function in base class
        virtual void setPerformFADCAnalysis( unsigned int iTel, bool iB )
                     ^
[1minc/VDSTReader.h:351:19: [2mnote:[0m Function in derived class
        void      setPerformFADCAnalysis( unsigned int iTelID, bool iB )
                  ^
[1minc/VDSTReader.h:358:19: [31mstyle:[39m The function 'setTelescopeID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      setTelescopeID( unsigned int );
                  ^
[1minc/VVirtualDataReader.h:81:45: [2mnote:[0m Virtual function in base class
        virtual bool                        setTelescopeID( unsigned int a )
                                            ^
[1minc/VDSTReader.h:358:19: [2mnote:[0m Function in derived class
        bool      setTelescopeID( unsigned int );
                  ^
[1minc/VDSTReader.h:359:19: [31mstyle:[39m The function 'setTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void      setTrigger( vector<bool> iImage, vector<bool> iBorder );          //!< set trigger values
                  ^
[1minc/VVirtualDataReader.h:213:44: [2mnote:[0m Virtual function in base class
        virtual void                       setTrigger( vector<bool> iImage, vector<bool> iBorder ) {}
                                           ^
[1minc/VDSTReader.h:359:19: [2mnote:[0m Function in derived class
        void      setTrigger( vector<bool> iImage, vector<bool> iBorder );          //!< set trigger values
                  ^
[1minc/VDSTReader.h:360:19: [31mstyle:[39m The function 'wasLossyCompressed' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      wasLossyCompressed()
                  ^
[1minc/VVirtualDataReader.h:183:45: [2mnote:[0m Virtual function in base class
        virtual bool                        wasLossyCompressed() = 0;
                                            ^
[1minc/VDSTReader.h:360:19: [2mnote:[0m Function in derived class
        bool      wasLossyCompressed()
                  ^
[1minc/VGrIsuReader.h:159:37: [31mstyle:[39m The function 'getDataFormat' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        string                      getDataFormat()
                                    ^
[1minc/VVirtualDataReader.h:47:45: [2mnote:[0m Virtual function in base class
        virtual string                      getDataFormat()
                                            ^
[1minc/VGrIsuReader.h:159:37: [2mnote:[0m Function in derived class
        string                      getDataFormat()
                                    ^
[1minc/VGrIsuReader.h:163:37: [31mstyle:[39m The function 'getDataFormatNum' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getDataFormatNum()
                                    ^
[1minc/VVirtualDataReader.h:52:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getDataFormatNum()
                                            ^
[1minc/VGrIsuReader.h:163:37: [2mnote:[0m Function in derived class
        unsigned int                getDataFormatNum()
                                    ^
[1minc/VGrIsuReader.h:167:37: [31mstyle:[39m The function 'getSourceFileName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        string                      getSourceFileName()
                                    ^
[1minc/VVirtualDataReader.h:64:45: [2mnote:[0m Virtual function in base class
        virtual string                      getSourceFileName()
                                            ^
[1minc/VGrIsuReader.h:167:37: [2mnote:[0m Function in derived class
        string                      getSourceFileName()
                                    ^
[1minc/VGrIsuReader.h:173:37: [31mstyle:[39m The function 'getChannelHitIndex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::pair< bool, uint32_t > getChannelHitIndex( uint32_t );
                                    ^
[1minc/VVirtualDataReader.h:86:45: [2mnote:[0m Virtual function in base class
        virtual std::pair< bool, uint32_t > getChannelHitIndex( uint32_t ) = 0;
                                            ^
[1minc/VGrIsuReader.h:173:37: [2mnote:[0m Function in derived class
        std::pair< bool, uint32_t > getChannelHitIndex( uint32_t );
                                    ^
[1minc/VGrIsuReader.h:174:37: [31mstyle:[39m The function 'getRunNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getRunNumber()
                                    ^
[1minc/VVirtualDataReader.h:98:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getRunNumber() = 0;
                                            ^
[1minc/VGrIsuReader.h:174:37: [2mnote:[0m Function in derived class
        uint32_t                    getRunNumber()
                                    ^
[1minc/VGrIsuReader.h:179:37: [31mstyle:[39m The function 'getEventNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getEventNumber()
                                    ^
[1minc/VVirtualDataReader.h:87:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getEventNumber() = 0;
                                            ^
[1minc/VGrIsuReader.h:179:37: [2mnote:[0m Function in derived class
        uint32_t                    getEventNumber()
                                    ^
[1minc/VGrIsuReader.h:185:37: [31mstyle:[39m The function 'getFullHitVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< bool >         getFullHitVec()
                                    ^
[1minc/VVirtualDataReader.h:107:46: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >          getFullHitVec() = 0;
                                             ^
[1minc/VGrIsuReader.h:185:37: [2mnote:[0m Function in derived class
        std::vector< bool >         getFullHitVec()
                                    ^
[1minc/VGrIsuReader.h:190:37: [31mstyle:[39m The function 'getFullTrigVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< bool >         getFullTrigVec()
                                    ^
[1minc/VVirtualDataReader.h:108:46: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >          getFullTrigVec() = 0;
                                             ^
[1minc/VGrIsuReader.h:190:37: [2mnote:[0m Function in derived class
        std::vector< bool >         getFullTrigVec()
                                    ^
[1minc/VGrIsuReader.h:194:37: [31mstyle:[39m The function 'getNumberofFullTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int                         getNumberofFullTrigger()
                                    ^
[1minc/VVirtualDataReader.h:109:45: [2mnote:[0m Virtual function in base class
        virtual int                         getNumberofFullTrigger() = 0;
                                            ^
[1minc/VGrIsuReader.h:194:37: [2mnote:[0m Function in derived class
        int                         getNumberofFullTrigger()
                                    ^
[1minc/VGrIsuReader.h:199:37: [31mstyle:[39m The function 'getFullAnaVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< int >          getFullAnaVec()
                                    ^
[1minc/VVirtualDataReader.h:110:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< int >          getFullAnaVec()
                                            ^
[1minc/VGrIsuReader.h:199:37: [2mnote:[0m Function in derived class
        std::vector< int >          getFullAnaVec()
                                    ^
[1minc/VGrIsuReader.h:203:37: [31mstyle:[39m The function 'getEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                     getEventType()
                                    ^
[1minc/VVirtualDataReader.h:92:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getEventType() = 0;
                                            ^
[1minc/VGrIsuReader.h:203:37: [2mnote:[0m Function in derived class
        uint8_t                     getEventType()
                                    ^
[1minc/VGrIsuReader.h:207:37: [31mstyle:[39m The function 'getATEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                     getATEventType()
                                    ^
[1minc/VVirtualDataReader.h:97:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getATEventType() = 0;
                                            ^
[1minc/VGrIsuReader.h:207:37: [2mnote:[0m Function in derived class
        uint8_t                     getATEventType()
                                    ^
[1minc/VGrIsuReader.h:211:37: [31mstyle:[39m The function 'getGPS0' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS0()     //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:114:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS0() = 0;
                                            ^
[1minc/VGrIsuReader.h:211:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS0()     //!< no MC time -> returns 0
                                    ^
[1minc/VGrIsuReader.h:215:37: [31mstyle:[39m The function 'getGPS1' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS1()     //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:115:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS1() = 0;
                                            ^
[1minc/VGrIsuReader.h:215:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS1()     //!< no MC time -> returns 0
                                    ^
[1minc/VGrIsuReader.h:219:37: [31mstyle:[39m The function 'getGPS2' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS2()     //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:116:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS2() = 0;
                                            ^
[1minc/VGrIsuReader.h:219:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS2()     //!< no MC time -> returns 0
                                    ^
[1minc/VGrIsuReader.h:223:37: [31mstyle:[39m The function 'getGPS3' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS3()     //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:117:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS3() = 0;
                                            ^
[1minc/VGrIsuReader.h:223:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS3()     //!< no MC time -> returns 0
                                    ^
[1minc/VGrIsuReader.h:227:37: [31mstyle:[39m The function 'getGPS4' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS4()     //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:118:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS4() = 0;
                                            ^
[1minc/VGrIsuReader.h:227:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS4()     //!< no MC time -> returns 0
                                    ^
[1minc/VGrIsuReader.h:231:37: [31mstyle:[39m The function 'getGPSYear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getGPSYear()  //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:119:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getGPSYear() = 0;
                                            ^
[1minc/VGrIsuReader.h:231:37: [2mnote:[0m Function in derived class
        uint16_t                    getGPSYear()  //!< no MC time -> returns 0
                                    ^
[1minc/VGrIsuReader.h:235:37: [31mstyle:[39m The function 'getATGPSYear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getATGPSYear()//!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:120:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getATGPSYear() = 0;
                                            ^
[1minc/VGrIsuReader.h:235:37: [2mnote:[0m Function in derived class
        uint16_t                    getATGPSYear()//!< no MC time -> returns 0
                                    ^
[1minc/VGrIsuReader.h:240:37: [31mstyle:[39m The function 'getHitID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getHitID( uint32_t );
                                    ^
[1minc/VVirtualDataReader.h:121:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getHitID( uint32_t i ) = 0;
                                            ^
[1minc/VGrIsuReader.h:240:37: [2mnote:[0m Function in derived class
        uint32_t                    getHitID( uint32_t );
                                    ^
[1minc/VGrIsuReader.h:241:37: [31mstyle:[39m The function 'getHiLo' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        getHiLo( uint32_t i );
                                    ^
[1minc/VVirtualDataReader.h:127:45: [2mnote:[0m Virtual function in base class
        virtual bool                        getHiLo( uint32_t i ) = 0;
                                            ^
[1minc/VGrIsuReader.h:241:37: [2mnote:[0m Function in derived class
        bool                        getHiLo( uint32_t i );
                                    ^
[1minc/VGrIsuReader.h:243:37: [31mstyle:[39m The function 'getMaxChannels' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getMaxChannels()
                                    ^
[1minc/VVirtualDataReader.h:122:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getMaxChannels() = 0;
                                            ^
[1minc/VGrIsuReader.h:243:37: [2mnote:[0m Function in derived class
        uint16_t                    getMaxChannels()
                                    ^
[1minc/VGrIsuReader.h:256:37: [31mstyle:[39m The function 'getNumChannelsHit' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getNumChannelsHit()
                                    ^
[1minc/VVirtualDataReader.h:124:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getNumChannelsHit() = 0;
                                            ^
[1minc/VGrIsuReader.h:256:37: [2mnote:[0m Function in derived class
        uint16_t                    getNumChannelsHit()
                                    ^
[1minc/VGrIsuReader.h:261:37: [31mstyle:[39m The function 'getNumSamples' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getNumSamples()
                                    ^
[1minc/VVirtualDataReader.h:125:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getNumSamples() = 0;
                                            ^
[1minc/VGrIsuReader.h:261:37: [2mnote:[0m Function in derived class
        uint16_t                    getNumSamples()
                                    ^
[1minc/VGrIsuReader.h:265:37: [31mstyle:[39m The function 'getNTel' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getNTel()     //!< return number of telescopes
                                    ^
[1minc/VVirtualDataReader.h:126:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getNTel() = 0;
                                            ^
[1minc/VGrIsuReader.h:265:37: [2mnote:[0m Function in derived class
        unsigned int                getNTel()     //!< return number of telescopes
                                    ^
[1minc/VGrIsuReader.h:274:37: [31mstyle:[39m The function 'getPedHisto' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        TH1F*                       getPedHisto( unsigned int itel, unsigned int ichannel );
                                    ^
[1minc/VVirtualDataReader.h:128:45: [2mnote:[0m Virtual function in base class
        virtual TH1F*                       getPedHisto( unsigned int a, unsigned int b )
                                            ^
[1minc/VGrIsuReader.h:274:37: [2mnote:[0m Function in derived class
        TH1F*                       getPedHisto( unsigned int itel, unsigned int ichannel );
                                    ^
[1minc/VGrIsuReader.h:275:37: [31mstyle:[39m The function 'getPeds' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::valarray< double >&    getPeds()
                                    ^
[1minc/VVirtualDataReader.h:132:45: [2mnote:[0m Virtual function in base class
        virtual valarray<double>&           getPeds()
                                            ^
[1minc/VGrIsuReader.h:275:37: [2mnote:[0m Function in derived class
        std::valarray< double >&    getPeds()
                                    ^
[1minc/VGrIsuReader.h:279:37: [31mstyle:[39m The function 'getPedvars' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::valarray< double >&    getPedvars()
                                    ^
[1minc/VVirtualDataReader.h:136:45: [2mnote:[0m Virtual function in base class
        virtual valarray<double>&           getPedvars()
                                            ^
[1minc/VGrIsuReader.h:279:37: [2mnote:[0m Function in derived class
        std::valarray< double >&    getPedvars()
                                    ^
[1minc/VGrIsuReader.h:283:42: [31mstyle:[39m The function 'getPedvarsAllSumWindows' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< valarray<double> >& getPedvarsAllSumWindows()
                                         ^
[1minc/VVirtualDataReader.h:140:45: [2mnote:[0m Virtual function in base class
        virtual vector< valarray<double> >& getPedvarsAllSumWindows()
                                            ^
[1minc/VGrIsuReader.h:283:42: [2mnote:[0m Function in derived class
        std::vector< valarray<double> >& getPedvarsAllSumWindows()
                                         ^
[1minc/VGrIsuReader.h:287:37: [31mstyle:[39m The function 'getPedRMS' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::valarray< double >&    getPedRMS()
                                    ^
[1minc/VVirtualDataReader.h:144:45: [2mnote:[0m Virtual function in base class
        virtual valarray<double>&           getPedRMS()
                                            ^
[1minc/VGrIsuReader.h:287:37: [2mnote:[0m Function in derived class
        std::valarray< double >&    getPedRMS()
                                    ^
[1minc/VGrIsuReader.h:291:37: [31mstyle:[39m The function 'getSample' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                     getSample( unsigned channel, unsigned sample, bool iNewNoiseTrace = true );
                                    ^
[1minc/VVirtualDataReader.h:156:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getSample( unsigned channel, unsigned sample, bool iNewNoiseTrace = true )
                                            ^
[1minc/VGrIsuReader.h:291:37: [2mnote:[0m Function in derived class
        uint8_t                     getSample( unsigned channel, unsigned sample, bool iNewNoiseTrace = true );
                                    ^
[1minc/VGrIsuReader.h:293:37: [31mstyle:[39m The function 'getSamplesVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< uint8_t >      getSamplesVec();
                                    ^
[1minc/VVirtualDataReader.h:160:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< uint8_t >      getSamplesVec() = 0;
                                            ^
[1minc/VGrIsuReader.h:293:37: [2mnote:[0m Function in derived class
        std::vector< uint8_t >      getSamplesVec();
                                    ^
[1minc/VGrIsuReader.h:294:37: [31mstyle:[39m The function 'getTelElevation' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< double >       getTelElevation()
                                    ^
[1minc/VVirtualDataReader.h:203:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< double >       getTelElevation()
                                            ^
[1minc/VGrIsuReader.h:294:37: [2mnote:[0m Function in derived class
        std::vector< double >       getTelElevation()
                                    ^
[1minc/VGrIsuReader.h:298:37: [31mstyle:[39m The function 'getTelAzimuth' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< double >       getTelAzimuth()
                                    ^
[1minc/VVirtualDataReader.h:207:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< double >       getTelAzimuth()
                                            ^
[1minc/VGrIsuReader.h:298:37: [2mnote:[0m Function in derived class
        std::vector< double >       getTelAzimuth()
                                    ^
[1minc/VGrIsuReader.h:303:37: [31mstyle:[39m The function 'getTelescopeID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getTelescopeID()
                                    ^
[1minc/VVirtualDataReader.h:68:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getTelescopeID()
                                            ^
[1minc/VGrIsuReader.h:303:37: [2mnote:[0m Function in derived class
        unsigned int                getTelescopeID()
                                    ^
[1minc/VGrIsuReader.h:308:37: [31mstyle:[39m The function 'selectHitChan' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void                        selectHitChan( uint32_t );
                                    ^
[1minc/VVirtualDataReader.h:170:45: [2mnote:[0m Virtual function in base class
        virtual void                        selectHitChan( uint32_t ) = 0;
                                            ^
[1minc/VGrIsuReader.h:308:37: [2mnote:[0m Function in derived class
        void                        selectHitChan( uint32_t );
                                    ^
[1minc/VGrIsuReader.h:320:37: [31mstyle:[39m The function 'setSumWindow' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void                        setSumWindow( vector< int > i_sum )
                                    ^
[1minc/VVirtualDataReader.h:73:45: [2mnote:[0m Virtual function in base class
        virtual void                        setSumWindow( vector< int > i_sum )
                                            ^
[1minc/VGrIsuReader.h:320:37: [2mnote:[0m Function in derived class
        void                        setSumWindow( vector< int > i_sum )
                                    ^
[1minc/VGrIsuReader.h:324:37: [31mstyle:[39m The function 'setSumWindow' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void                        setSumWindow( unsigned int iTelID, int isw )
                                    ^
[1minc/VVirtualDataReader.h:76:45: [2mnote:[0m Virtual function in base class
        virtual void                        setSumWindow( unsigned int iTelID, int isw ) { }
                                            ^
[1minc/VGrIsuReader.h:324:37: [2mnote:[0m Function in derived class
        void                        setSumWindow( unsigned int iTelID, int isw )
                                    ^
[1minc/VGrIsuReader.h:337:37: [31mstyle:[39m The function 'setTelescopeID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        setTelescopeID( unsigned int );
                                    ^
[1minc/VVirtualDataReader.h:81:45: [2mnote:[0m Virtual function in base class
        virtual bool                        setTelescopeID( unsigned int a )
                                            ^
[1minc/VGrIsuReader.h:337:37: [2mnote:[0m Function in derived class
        bool                        setTelescopeID( unsigned int );
                                    ^
[1minc/VGrIsuReader.h:340:37: [31mstyle:[39m The function 'setTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void                        setTrigger( vector<bool> iImage, vector<bool> iBorder );
                                    ^
[1minc/VVirtualDataReader.h:213:44: [2mnote:[0m Virtual function in base class
        virtual void                       setTrigger( vector<bool> iImage, vector<bool> iBorder ) {}
                                           ^
[1minc/VGrIsuReader.h:340:37: [2mnote:[0m Function in derived class
        void                        setTrigger( vector<bool> iImage, vector<bool> iBorder );
                                    ^
[1minc/VGrIsuReader.h:342:37: [31mstyle:[39m The function 'getLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< bool >&             getLocalTrigger()
                                    ^
[1minc/VVirtualDataReader.h:358:44: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >&       getLocalTrigger()
                                           ^
[1minc/VGrIsuReader.h:342:37: [2mnote:[0m Function in derived class
        vector< bool >&             getLocalTrigger()
                                    ^
[1minc/VGrIsuReader.h:346:37: [31mstyle:[39m The function 'getLocalTriggerTime' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                       getLocalTriggerTime( unsigned int iTel )
                                    ^
[1minc/VVirtualDataReader.h:366:44: [2mnote:[0m Virtual function in base class
        virtual float                      getLocalTriggerTime( unsigned int iTel )
                                           ^
[1minc/VGrIsuReader.h:346:37: [2mnote:[0m Function in derived class
        float                       getLocalTriggerTime( unsigned int iTel )
                                    ^
[1minc/VGrIsuReader.h:350:37: [31mstyle:[39m The function 'getLocalDelayedTriggerTime' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                       getLocalDelayedTriggerTime( unsigned int iTel )
                                    ^
[1minc/VVirtualDataReader.h:370:44: [2mnote:[0m Virtual function in base class
        virtual float                      getLocalDelayedTriggerTime( unsigned int iTel )
                                           ^
[1minc/VGrIsuReader.h:350:37: [2mnote:[0m Function in derived class
        float                       getLocalDelayedTriggerTime( unsigned int iTel )
                                    ^
[1minc/VGrIsuReader.h:355:37: [31mstyle:[39m The function 'getNTelLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getNTelLocalTrigger();
                                    ^
[1minc/VVirtualDataReader.h:354:44: [2mnote:[0m Virtual function in base class
        virtual unsigned int               getNTelLocalTrigger()
                                           ^
[1minc/VGrIsuReader.h:355:37: [2mnote:[0m Function in derived class
        unsigned int                getNTelLocalTrigger();
                                    ^
[1minc/VGrIsuReader.h:356:37: [31mstyle:[39m The function 'hasArrayTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        hasArrayTrigger()
                                    ^
[1minc/VVirtualDataReader.h:349:44: [2mnote:[0m Virtual function in base class
        virtual bool                       hasArrayTrigger()
                                           ^
[1minc/VGrIsuReader.h:356:37: [2mnote:[0m Function in derived class
        bool                        hasArrayTrigger()
                                    ^
[1minc/VGrIsuReader.h:361:37: [31mstyle:[39m The function 'hasLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        hasLocalTrigger( unsigned int iTel );
                                    ^
[1minc/VVirtualDataReader.h:362:44: [2mnote:[0m Virtual function in base class
        virtual bool                       hasLocalTrigger( unsigned int iTel )
                                           ^
[1minc/VGrIsuReader.h:361:37: [2mnote:[0m Function in derived class
        bool                        hasLocalTrigger( unsigned int iTel );
                                    ^
[1minc/VGrIsuReader.h:378:37: [31mstyle:[39m The function 'wasLossyCompressed' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        wasLossyCompressed()
                                    ^
[1minc/VVirtualDataReader.h:183:45: [2mnote:[0m Virtual function in base class
        virtual bool                        wasLossyCompressed() = 0;
                                            ^
[1minc/VGrIsuReader.h:378:37: [2mnote:[0m Function in derived class
        bool                        wasLossyCompressed()
                                    ^
[1minc/VGrIsuReader.h:385:37: [31mstyle:[39m The function 'getNextEvent' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        getNextEvent();
                                    ^
[1minc/VVirtualDataReader.h:186:45: [2mnote:[0m Virtual function in base class
        virtual bool                        getNextEvent() = 0;
                                            ^
[1minc/VGrIsuReader.h:385:37: [2mnote:[0m Function in derived class
        bool                        getNextEvent();
                                    ^
[1minc/VGrIsuReader.h:392:36: [31mstyle:[39m The function 'isMC' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                       isMC()         //!< GrIsu type data is always MC
                                   ^
[1minc/VVirtualDataReader.h:214:44: [2mnote:[0m Virtual function in base class
        virtual bool                       isMC() //!< is data MC?
                                           ^
[1minc/VGrIsuReader.h:392:36: [2mnote:[0m Function in derived class
        bool                       isMC()         //!< GrIsu type data is always MC
                                   ^
[1minc/VGrIsuReader.h:396:36: [31mstyle:[39m The function 'isGrisuMC' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                       isGrisuMC()
                                   ^
[1minc/VVirtualDataReader.h:219:44: [2mnote:[0m Virtual function in base class
        virtual bool                       isGrisuMC()
                                           ^
[1minc/VGrIsuReader.h:396:36: [2mnote:[0m Function in derived class
        bool                       isGrisuMC()
                                   ^
[1minc/VGrIsuReader.h:400:36: [31mstyle:[39m The function 'getMC_primary' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int                        getMC_primary()//!< MC primary type
                                   ^
[1minc/VVirtualDataReader.h:261:44: [2mnote:[0m Virtual function in base class
        virtual int                        getMC_primary()
                                           ^
[1minc/VGrIsuReader.h:400:36: [2mnote:[0m Function in derived class
        int                        getMC_primary()//!< MC primary type
                                   ^
[1minc/VGrIsuReader.h:404:36: [31mstyle:[39m The function 'getMC_energy' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_energy() //!< MC primary energy
                                   ^
[1minc/VVirtualDataReader.h:266:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_energy()
                                           ^
[1minc/VGrIsuReader.h:404:36: [2mnote:[0m Function in derived class
        float                      getMC_energy() //!< MC primary energy
                                   ^
[1minc/VGrIsuReader.h:408:36: [31mstyle:[39m The function 'getMC_X' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_X()      //!< MC x-coordinate of impact point on ground plane
                                   ^
[1minc/VVirtualDataReader.h:271:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_X()
                                           ^
[1minc/VGrIsuReader.h:408:36: [2mnote:[0m Function in derived class
        float                      getMC_X()      //!< MC x-coordinate of impact point on ground plane
                                   ^
[1minc/VGrIsuReader.h:412:36: [31mstyle:[39m The function 'getMC_Y' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Y()      //!< MC y-coordinate of impact point on ground plane
                                   ^
[1minc/VVirtualDataReader.h:276:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Y()
                                           ^
[1minc/VGrIsuReader.h:412:36: [2mnote:[0m Function in derived class
        float                      getMC_Y()      //!< MC y-coordinate of impact point on ground plane
                                   ^
[1minc/VGrIsuReader.h:416:36: [31mstyle:[39m The function 'getMC_Xcos' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Xcos()   //!< MC x direction cosine of primary in ground coordinate system
                                   ^
[1minc/VVirtualDataReader.h:281:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Xcos()
                                           ^
[1minc/VGrIsuReader.h:416:36: [2mnote:[0m Function in derived class
        float                      getMC_Xcos()   //!< MC x direction cosine of primary in ground coordinate system
                                   ^
[1minc/VGrIsuReader.h:420:36: [31mstyle:[39m The function 'getMC_Ycos' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Ycos()   //!< MC y direction cosine of primary in ground coordinate system
                                   ^
[1minc/VVirtualDataReader.h:286:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Ycos()
                                           ^
[1minc/VGrIsuReader.h:420:36: [2mnote:[0m Function in derived class
        float                      getMC_Ycos()   //!< MC y direction cosine of primary in ground coordinate system
                                   ^
[1minc/VGrIsuReader.h:424:36: [31mstyle:[39m The function 'getMC_Ze' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Ze()     //!< MC zenith angle of primary in ground coordinate system [rad]
                                   ^
[1minc/VVirtualDataReader.h:291:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Ze()
                                           ^
[1minc/VGrIsuReader.h:424:36: [2mnote:[0m Function in derived class
        float                      getMC_Ze()     //!< MC zenith angle of primary in ground coordinate system [rad]
                                   ^
[1minc/VGrIsuReader.h:428:36: [31mstyle:[39m The function 'getMC_Az' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Az()     //!< MC azimuth angle of primary in ground coordinate system [rad]
                                   ^
[1minc/VVirtualDataReader.h:296:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Az()
                                           ^
[1minc/VGrIsuReader.h:428:36: [2mnote:[0m Function in derived class
        float                      getMC_Az()     //!< MC azimuth angle of primary in ground coordinate system [rad]
                                   ^
[1minc/VGrIsuReader.h:432:36: [31mstyle:[39m The function 'getMC_Xoffset' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Xoffset()//!< MC x coordinate of source location in degrees
                                   ^
[1minc/VVirtualDataReader.h:301:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Xoffset()
                                           ^
[1minc/VGrIsuReader.h:432:36: [2mnote:[0m Function in derived class
        float                      getMC_Xoffset()//!< MC x coordinate of source location in degrees
                                   ^
[1minc/VGrIsuReader.h:436:36: [31mstyle:[39m The function 'getMC_Yoffset' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Yoffset()//!< MC x coordinate of source location in degrees
                                   ^
[1minc/VVirtualDataReader.h:306:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Yoffset()
                                           ^
[1minc/VGrIsuReader.h:436:36: [2mnote:[0m Function in derived class
        float                      getMC_Yoffset()//!< MC x coordinate of source location in degrees
                                   ^
[1minc/VGrIsuReader.h:440:31: [31mstyle:[39m The function 'getMonteCarloHeader' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        VMonteCarloRunHeader* getMonteCarloHeader()
                              ^
[1minc/VVirtualDataReader.h:123:45: [2mnote:[0m Virtual function in base class
        virtual VMonteCarloRunHeader*       getMonteCarloHeader() = 0;
                                            ^
[1minc/VGrIsuReader.h:440:31: [2mnote:[0m Function in derived class
        VMonteCarloRunHeader* getMonteCarloHeader()
                              ^
[1minc/VGrIsuReader.h:444:14: [31mstyle:[39m The function 'setPerformFADCAnalysis' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void setPerformFADCAnalysis( unsigned int iTel, bool iB )
             ^
[1minc/VVirtualDataReader.h:417:22: [2mnote:[0m Virtual function in base class
        virtual void setPerformFADCAnalysis( unsigned int iTel, bool iB )
                     ^
[1minc/VGrIsuReader.h:444:14: [2mnote:[0m Function in derived class
        void setPerformFADCAnalysis( unsigned int iTel, bool iB )
             ^
[1minc/VMultipleGrIsuReader.h:67:37: [31mstyle:[39m The function 'getDataFormat' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        string                      getDataFormat();
                                    ^
[1minc/VVirtualDataReader.h:47:45: [2mnote:[0m Virtual function in base class
        virtual string                      getDataFormat()
                                            ^
[1minc/VMultipleGrIsuReader.h:67:37: [2mnote:[0m Function in derived class
        string                      getDataFormat();
                                    ^
[1minc/VMultipleGrIsuReader.h:68:37: [31mstyle:[39m The function 'getDataFormatNum' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getDataFormatNum()
                                    ^
[1minc/VVirtualDataReader.h:52:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getDataFormatNum()
                                            ^
[1minc/VMultipleGrIsuReader.h:68:37: [2mnote:[0m Function in derived class
        unsigned int                getDataFormatNum()
                                    ^
[1minc/VMultipleGrIsuReader.h:72:37: [31mstyle:[39m The function 'getSourceFileName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        string                      getSourceFileName();
                                    ^
[1minc/VVirtualDataReader.h:64:45: [2mnote:[0m Virtual function in base class
        virtual string                      getSourceFileName()
                                            ^
[1minc/VMultipleGrIsuReader.h:72:37: [2mnote:[0m Function in derived class
        string                      getSourceFileName();
                                    ^
[1minc/VMultipleGrIsuReader.h:75:37: [31mstyle:[39m The function 'getChannelHitIndex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::pair< bool, uint32_t > getChannelHitIndex( uint32_t );
                                    ^
[1minc/VVirtualDataReader.h:86:45: [2mnote:[0m Virtual function in base class
        virtual std::pair< bool, uint32_t > getChannelHitIndex( uint32_t ) = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:75:37: [2mnote:[0m Function in derived class
        std::pair< bool, uint32_t > getChannelHitIndex( uint32_t );
                                    ^
[1minc/VMultipleGrIsuReader.h:76:37: [31mstyle:[39m The function 'getRunNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getRunNumber()
                                    ^
[1minc/VVirtualDataReader.h:98:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getRunNumber() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:76:37: [2mnote:[0m Function in derived class
        uint32_t                    getRunNumber()
                                    ^
[1minc/VMultipleGrIsuReader.h:80:37: [31mstyle:[39m The function 'getEventNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getEventNumber();
                                    ^
[1minc/VVirtualDataReader.h:87:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getEventNumber() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:80:37: [2mnote:[0m Function in derived class
        uint32_t                    getEventNumber();
                                    ^
[1minc/VMultipleGrIsuReader.h:82:37: [31mstyle:[39m The function 'getFullHitVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< bool >         getFullHitVec();
                                    ^
[1minc/VVirtualDataReader.h:107:46: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >          getFullHitVec() = 0;
                                             ^
[1minc/VMultipleGrIsuReader.h:82:37: [2mnote:[0m Function in derived class
        std::vector< bool >         getFullHitVec();
                                    ^
[1minc/VMultipleGrIsuReader.h:83:37: [31mstyle:[39m The function 'getFullTrigVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< bool >         getFullTrigVec();
                                    ^
[1minc/VVirtualDataReader.h:108:46: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >          getFullTrigVec() = 0;
                                             ^
[1minc/VMultipleGrIsuReader.h:83:37: [2mnote:[0m Function in derived class
        std::vector< bool >         getFullTrigVec();
                                    ^
[1minc/VMultipleGrIsuReader.h:84:37: [31mstyle:[39m The function 'getNumberofFullTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int                         getNumberofFullTrigger();
                                    ^
[1minc/VVirtualDataReader.h:109:45: [2mnote:[0m Virtual function in base class
        virtual int                         getNumberofFullTrigger() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:84:37: [2mnote:[0m Function in derived class
        int                         getNumberofFullTrigger();
                                    ^
[1minc/VMultipleGrIsuReader.h:85:37: [31mstyle:[39m The function 'getFullAnaVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< int >          getFullAnaVec();
                                    ^
[1minc/VVirtualDataReader.h:110:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< int >          getFullAnaVec()
                                            ^
[1minc/VMultipleGrIsuReader.h:85:37: [2mnote:[0m Function in derived class
        std::vector< int >          getFullAnaVec();
                                    ^
[1minc/VMultipleGrIsuReader.h:86:37: [31mstyle:[39m The function 'getEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                     getEventType();
                                    ^
[1minc/VVirtualDataReader.h:92:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getEventType() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:86:37: [2mnote:[0m Function in derived class
        uint8_t                     getEventType();
                                    ^
[1minc/VMultipleGrIsuReader.h:87:37: [31mstyle:[39m The function 'getATEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                     getATEventType();
                                    ^
[1minc/VVirtualDataReader.h:97:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getATEventType() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:87:37: [2mnote:[0m Function in derived class
        uint8_t                     getATEventType();
                                    ^
[1minc/VMultipleGrIsuReader.h:88:37: [31mstyle:[39m The function 'getGPS0' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS0()     //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:114:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS0() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:88:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS0()     //!< no MC time -> returns 0
                                    ^
[1minc/VMultipleGrIsuReader.h:92:37: [31mstyle:[39m The function 'getGPS1' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS1()     //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:115:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS1() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:92:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS1()     //!< no MC time -> returns 0
                                    ^
[1minc/VMultipleGrIsuReader.h:96:37: [31mstyle:[39m The function 'getGPS2' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS2()     //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:116:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS2() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:96:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS2()     //!< no MC time -> returns 0
                                    ^
[1minc/VMultipleGrIsuReader.h:100:37: [31mstyle:[39m The function 'getGPS3' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS3()     //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:117:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS3() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:100:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS3()     //!< no MC time -> returns 0
                                    ^
[1minc/VMultipleGrIsuReader.h:104:37: [31mstyle:[39m The function 'getGPS4' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS4()     //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:118:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS4() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:104:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS4()     //!< no MC time -> returns 0
                                    ^
[1minc/VMultipleGrIsuReader.h:108:37: [31mstyle:[39m The function 'getGPSYear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getGPSYear()  //!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:119:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getGPSYear() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:108:37: [2mnote:[0m Function in derived class
        uint16_t                    getGPSYear()  //!< no MC time -> returns 0
                                    ^
[1minc/VMultipleGrIsuReader.h:112:37: [31mstyle:[39m The function 'getATGPSYear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getATGPSYear()//!< no MC time -> returns 0
                                    ^
[1minc/VVirtualDataReader.h:120:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getATGPSYear() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:112:37: [2mnote:[0m Function in derived class
        uint16_t                    getATGPSYear()//!< no MC time -> returns 0
                                    ^
[1minc/VMultipleGrIsuReader.h:117:37: [31mstyle:[39m The function 'getHitID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getHitID( uint32_t );
                                    ^
[1minc/VVirtualDataReader.h:121:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getHitID( uint32_t i ) = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:117:37: [2mnote:[0m Function in derived class
        uint32_t                    getHitID( uint32_t );
                                    ^
[1minc/VMultipleGrIsuReader.h:118:37: [31mstyle:[39m The function 'getHiLo' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        getHiLo( uint32_t i );
                                    ^
[1minc/VVirtualDataReader.h:127:45: [2mnote:[0m Virtual function in base class
        virtual bool                        getHiLo( uint32_t i ) = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:118:37: [2mnote:[0m Function in derived class
        bool                        getHiLo( uint32_t i );
                                    ^
[1minc/VMultipleGrIsuReader.h:119:37: [31mstyle:[39m The function 'getMaxChannels' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getMaxChannels();
                                    ^
[1minc/VVirtualDataReader.h:122:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getMaxChannels() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:119:37: [2mnote:[0m Function in derived class
        uint16_t                    getMaxChannels();
                                    ^
[1minc/VMultipleGrIsuReader.h:121:37: [31mstyle:[39m The function 'getNumChannelsHit' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getNumChannelsHit();
                                    ^
[1minc/VVirtualDataReader.h:124:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getNumChannelsHit() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:121:37: [2mnote:[0m Function in derived class
        uint16_t                    getNumChannelsHit();
                                    ^
[1minc/VMultipleGrIsuReader.h:122:37: [31mstyle:[39m The function 'getNumSamples' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getNumSamples();
                                    ^
[1minc/VVirtualDataReader.h:125:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getNumSamples() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:122:37: [2mnote:[0m Function in derived class
        uint16_t                    getNumSamples();
                                    ^
[1minc/VMultipleGrIsuReader.h:123:37: [31mstyle:[39m The function 'getNTel' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getNTel()     //!< return number of telescopes
                                    ^
[1minc/VVirtualDataReader.h:126:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getNTel() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:123:37: [2mnote:[0m Function in derived class
        unsigned int                getNTel()     //!< return number of telescopes
                                    ^
[1minc/VMultipleGrIsuReader.h:132:37: [31mstyle:[39m The function 'getPedHisto' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        TH1F*                       getPedHisto( unsigned int itel, unsigned int ichannel );
                                    ^
[1minc/VVirtualDataReader.h:128:45: [2mnote:[0m Virtual function in base class
        virtual TH1F*                       getPedHisto( unsigned int a, unsigned int b )
                                            ^
[1minc/VMultipleGrIsuReader.h:132:37: [2mnote:[0m Function in derived class
        TH1F*                       getPedHisto( unsigned int itel, unsigned int ichannel );
                                    ^
[1minc/VMultipleGrIsuReader.h:133:37: [31mstyle:[39m The function 'getPeds' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::valarray< double >&    getPeds();
                                    ^
[1minc/VVirtualDataReader.h:132:45: [2mnote:[0m Virtual function in base class
        virtual valarray<double>&           getPeds()
                                            ^
[1minc/VMultipleGrIsuReader.h:133:37: [2mnote:[0m Function in derived class
        std::valarray< double >&    getPeds();
                                    ^
[1minc/VMultipleGrIsuReader.h:134:37: [31mstyle:[39m The function 'getPedvars' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::valarray< double >&    getPedvars();
                                    ^
[1minc/VVirtualDataReader.h:136:45: [2mnote:[0m Virtual function in base class
        virtual valarray<double>&           getPedvars()
                                            ^
[1minc/VMultipleGrIsuReader.h:134:37: [2mnote:[0m Function in derived class
        std::valarray< double >&    getPedvars();
                                    ^
[1minc/VMultipleGrIsuReader.h:135:42: [31mstyle:[39m The function 'getPedvarsAllSumWindows' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< valarray<double> >& getPedvarsAllSumWindows();
                                         ^
[1minc/VVirtualDataReader.h:140:45: [2mnote:[0m Virtual function in base class
        virtual vector< valarray<double> >& getPedvarsAllSumWindows()
                                            ^
[1minc/VMultipleGrIsuReader.h:135:42: [2mnote:[0m Function in derived class
        std::vector< valarray<double> >& getPedvarsAllSumWindows();
                                         ^
[1minc/VMultipleGrIsuReader.h:136:37: [31mstyle:[39m The function 'getPedRMS' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::valarray< double >&    getPedRMS();
                                    ^
[1minc/VVirtualDataReader.h:144:45: [2mnote:[0m Virtual function in base class
        virtual valarray<double>&           getPedRMS()
                                            ^
[1minc/VMultipleGrIsuReader.h:136:37: [2mnote:[0m Function in derived class
        std::valarray< double >&    getPedRMS();
                                    ^
[1minc/VMultipleGrIsuReader.h:138:37: [31mstyle:[39m The function 'getSamplesVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< uint8_t >      getSamplesVec();
                                    ^
[1minc/VVirtualDataReader.h:160:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< uint8_t >      getSamplesVec() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:138:37: [2mnote:[0m Function in derived class
        std::vector< uint8_t >      getSamplesVec();
                                    ^
[1minc/VMultipleGrIsuReader.h:139:37: [31mstyle:[39m The function 'getTelElevation' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< double >       getTelElevation();
                                    ^
[1minc/VVirtualDataReader.h:203:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< double >       getTelElevation()
                                            ^
[1minc/VMultipleGrIsuReader.h:139:37: [2mnote:[0m Function in derived class
        std::vector< double >       getTelElevation();
                                    ^
[1minc/VMultipleGrIsuReader.h:140:37: [31mstyle:[39m The function 'getTelAzimuth' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< double >       getTelAzimuth();
                                    ^
[1minc/VVirtualDataReader.h:207:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< double >       getTelAzimuth()
                                            ^
[1minc/VMultipleGrIsuReader.h:140:37: [2mnote:[0m Function in derived class
        std::vector< double >       getTelAzimuth();
                                    ^
[1minc/VMultipleGrIsuReader.h:142:37: [31mstyle:[39m The function 'getTelescopeID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getTelescopeID()
                                    ^
[1minc/VVirtualDataReader.h:68:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getTelescopeID()
                                            ^
[1minc/VMultipleGrIsuReader.h:142:37: [2mnote:[0m Function in derived class
        unsigned int                getTelescopeID()
                                    ^
[1minc/VMultipleGrIsuReader.h:147:37: [31mstyle:[39m The function 'selectHitChan' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void                        selectHitChan( uint32_t );
                                    ^
[1minc/VVirtualDataReader.h:170:45: [2mnote:[0m Virtual function in base class
        virtual void                        selectHitChan( uint32_t ) = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:147:37: [2mnote:[0m Function in derived class
        void                        selectHitChan( uint32_t );
                                    ^
[1minc/VMultipleGrIsuReader.h:150:37: [31mstyle:[39m The function 'setSumWindow' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void                        setSumWindow( vector< int > i_sum );
                                    ^
[1minc/VVirtualDataReader.h:73:45: [2mnote:[0m Virtual function in base class
        virtual void                        setSumWindow( vector< int > i_sum )
                                            ^
[1minc/VMultipleGrIsuReader.h:150:37: [2mnote:[0m Function in derived class
        void                        setSumWindow( vector< int > i_sum );
                                    ^
[1minc/VMultipleGrIsuReader.h:151:37: [31mstyle:[39m The function 'setSumWindow' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void                        setSumWindow( unsigned int iTelID, int isw );
                                    ^
[1minc/VVirtualDataReader.h:76:45: [2mnote:[0m Virtual function in base class
        virtual void                        setSumWindow( unsigned int iTelID, int isw ) { }
                                            ^
[1minc/VMultipleGrIsuReader.h:151:37: [2mnote:[0m Function in derived class
        void                        setSumWindow( unsigned int iTelID, int isw );
                                    ^
[1minc/VMultipleGrIsuReader.h:154:37: [31mstyle:[39m The function 'setTelescopeID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        setTelescopeID( unsigned int );
                                    ^
[1minc/VVirtualDataReader.h:81:45: [2mnote:[0m Virtual function in base class
        virtual bool                        setTelescopeID( unsigned int a )
                                            ^
[1minc/VMultipleGrIsuReader.h:154:37: [2mnote:[0m Function in derived class
        bool                        setTelescopeID( unsigned int );
                                    ^
[1minc/VMultipleGrIsuReader.h:157:37: [31mstyle:[39m The function 'setTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void                        setTrigger( vector<bool> iImage, vector<bool> iBorder );
                                    ^
[1minc/VVirtualDataReader.h:213:44: [2mnote:[0m Virtual function in base class
        virtual void                       setTrigger( vector<bool> iImage, vector<bool> iBorder ) {}
                                           ^
[1minc/VMultipleGrIsuReader.h:157:37: [2mnote:[0m Function in derived class
        void                        setTrigger( vector<bool> iImage, vector<bool> iBorder );
                                    ^
[1minc/VMultipleGrIsuReader.h:158:37: [31mstyle:[39m The function 'getLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< bool >&             getLocalTrigger();
                                    ^
[1minc/VVirtualDataReader.h:358:44: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >&       getLocalTrigger()
                                           ^
[1minc/VMultipleGrIsuReader.h:158:37: [2mnote:[0m Function in derived class
        vector< bool >&             getLocalTrigger();
                                    ^
[1minc/VMultipleGrIsuReader.h:159:37: [31mstyle:[39m The function 'getLocalTriggerTime' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                       getLocalTriggerTime( unsigned int iTel );
                                    ^
[1minc/VVirtualDataReader.h:366:44: [2mnote:[0m Virtual function in base class
        virtual float                      getLocalTriggerTime( unsigned int iTel )
                                           ^
[1minc/VMultipleGrIsuReader.h:159:37: [2mnote:[0m Function in derived class
        float                       getLocalTriggerTime( unsigned int iTel );
                                    ^
[1minc/VMultipleGrIsuReader.h:160:37: [31mstyle:[39m The function 'getLocalDelayedTriggerTime' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                       getLocalDelayedTriggerTime( unsigned int iTel );
                                    ^
[1minc/VVirtualDataReader.h:370:44: [2mnote:[0m Virtual function in base class
        virtual float                      getLocalDelayedTriggerTime( unsigned int iTel )
                                           ^
[1minc/VMultipleGrIsuReader.h:160:37: [2mnote:[0m Function in derived class
        float                       getLocalDelayedTriggerTime( unsigned int iTel );
                                    ^
[1minc/VMultipleGrIsuReader.h:162:37: [31mstyle:[39m The function 'getNTelLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getNTelLocalTrigger();
                                    ^
[1minc/VVirtualDataReader.h:354:44: [2mnote:[0m Virtual function in base class
        virtual unsigned int               getNTelLocalTrigger()
                                           ^
[1minc/VMultipleGrIsuReader.h:162:37: [2mnote:[0m Function in derived class
        unsigned int                getNTelLocalTrigger();
                                    ^
[1minc/VMultipleGrIsuReader.h:163:37: [31mstyle:[39m The function 'hasArrayTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        hasArrayTrigger();
                                    ^
[1minc/VVirtualDataReader.h:349:44: [2mnote:[0m Virtual function in base class
        virtual bool                       hasArrayTrigger()
                                           ^
[1minc/VMultipleGrIsuReader.h:163:37: [2mnote:[0m Function in derived class
        bool                        hasArrayTrigger();
                                    ^
[1minc/VMultipleGrIsuReader.h:165:37: [31mstyle:[39m The function 'hasLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        hasLocalTrigger( unsigned int iTel );
                                    ^
[1minc/VVirtualDataReader.h:362:44: [2mnote:[0m Virtual function in base class
        virtual bool                       hasLocalTrigger( unsigned int iTel )
                                           ^
[1minc/VMultipleGrIsuReader.h:165:37: [2mnote:[0m Function in derived class
        bool                        hasLocalTrigger( unsigned int iTel );
                                    ^
[1minc/VMultipleGrIsuReader.h:170:37: [31mstyle:[39m The function 'wasLossyCompressed' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        wasLossyCompressed()
                                    ^
[1minc/VVirtualDataReader.h:183:45: [2mnote:[0m Virtual function in base class
        virtual bool                        wasLossyCompressed() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:170:37: [2mnote:[0m Function in derived class
        bool                        wasLossyCompressed()
                                    ^
[1minc/VMultipleGrIsuReader.h:177:37: [31mstyle:[39m The function 'getNextEvent' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        getNextEvent();
                                    ^
[1minc/VVirtualDataReader.h:186:45: [2mnote:[0m Virtual function in base class
        virtual bool                        getNextEvent() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:177:37: [2mnote:[0m Function in derived class
        bool                        getNextEvent();
                                    ^
[1minc/VMultipleGrIsuReader.h:184:36: [31mstyle:[39m The function 'isMC' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                       isMC()         //!< GrIsu type data is always MC
                                   ^
[1minc/VVirtualDataReader.h:214:44: [2mnote:[0m Virtual function in base class
        virtual bool                       isMC() //!< is data MC?
                                           ^
[1minc/VMultipleGrIsuReader.h:184:36: [2mnote:[0m Function in derived class
        bool                       isMC()         //!< GrIsu type data is always MC
                                   ^
[1minc/VMultipleGrIsuReader.h:188:36: [31mstyle:[39m The function 'isGrisuMC' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                       isGrisuMC()
                                   ^
[1minc/VVirtualDataReader.h:219:44: [2mnote:[0m Virtual function in base class
        virtual bool                       isGrisuMC()
                                           ^
[1minc/VMultipleGrIsuReader.h:188:36: [2mnote:[0m Function in derived class
        bool                       isGrisuMC()
                                   ^
[1minc/VMultipleGrIsuReader.h:192:36: [31mstyle:[39m The function 'getMC_primary' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int                        getMC_primary();
                                   ^
[1minc/VVirtualDataReader.h:261:44: [2mnote:[0m Virtual function in base class
        virtual int                        getMC_primary()
                                           ^
[1minc/VMultipleGrIsuReader.h:192:36: [2mnote:[0m Function in derived class
        int                        getMC_primary();
                                   ^
[1minc/VMultipleGrIsuReader.h:193:36: [31mstyle:[39m The function 'getMC_energy' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_energy();
                                   ^
[1minc/VVirtualDataReader.h:266:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_energy()
                                           ^
[1minc/VMultipleGrIsuReader.h:193:36: [2mnote:[0m Function in derived class
        float                      getMC_energy();
                                   ^
[1minc/VMultipleGrIsuReader.h:194:36: [31mstyle:[39m The function 'getMC_X' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_X();
                                   ^
[1minc/VVirtualDataReader.h:271:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_X()
                                           ^
[1minc/VMultipleGrIsuReader.h:194:36: [2mnote:[0m Function in derived class
        float                      getMC_X();
                                   ^
[1minc/VMultipleGrIsuReader.h:195:36: [31mstyle:[39m The function 'getMC_Y' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Y();
                                   ^
[1minc/VVirtualDataReader.h:276:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Y()
                                           ^
[1minc/VMultipleGrIsuReader.h:195:36: [2mnote:[0m Function in derived class
        float                      getMC_Y();
                                   ^
[1minc/VMultipleGrIsuReader.h:196:36: [31mstyle:[39m The function 'getMC_Xcos' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Xcos();
                                   ^
[1minc/VVirtualDataReader.h:281:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Xcos()
                                           ^
[1minc/VMultipleGrIsuReader.h:196:36: [2mnote:[0m Function in derived class
        float                      getMC_Xcos();
                                   ^
[1minc/VMultipleGrIsuReader.h:197:36: [31mstyle:[39m The function 'getMC_Ycos' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Ycos();
                                   ^
[1minc/VVirtualDataReader.h:286:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Ycos()
                                           ^
[1minc/VMultipleGrIsuReader.h:197:36: [2mnote:[0m Function in derived class
        float                      getMC_Ycos();
                                   ^
[1minc/VMultipleGrIsuReader.h:198:36: [31mstyle:[39m The function 'getMC_Ze' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Ze();
                                   ^
[1minc/VVirtualDataReader.h:291:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Ze()
                                           ^
[1minc/VMultipleGrIsuReader.h:198:36: [2mnote:[0m Function in derived class
        float                      getMC_Ze();
                                   ^
[1minc/VMultipleGrIsuReader.h:199:36: [31mstyle:[39m The function 'getMC_Az' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Az();
                                   ^
[1minc/VVirtualDataReader.h:296:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Az()
                                           ^
[1minc/VMultipleGrIsuReader.h:199:36: [2mnote:[0m Function in derived class
        float                      getMC_Az();
                                   ^
[1minc/VMultipleGrIsuReader.h:200:36: [31mstyle:[39m The function 'getMC_Xoffset' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Xoffset();
                                   ^
[1minc/VVirtualDataReader.h:301:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Xoffset()
                                           ^
[1minc/VMultipleGrIsuReader.h:200:36: [2mnote:[0m Function in derived class
        float                      getMC_Xoffset();
                                   ^
[1minc/VMultipleGrIsuReader.h:201:36: [31mstyle:[39m The function 'getMC_Yoffset' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Yoffset();
                                   ^
[1minc/VVirtualDataReader.h:306:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Yoffset()
                                           ^
[1minc/VMultipleGrIsuReader.h:201:36: [2mnote:[0m Function in derived class
        float                      getMC_Yoffset();
                                   ^
[1minc/VMultipleGrIsuReader.h:203:31: [31mstyle:[39m The function 'getMonteCarloHeader' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        VMonteCarloRunHeader* getMonteCarloHeader()
                              ^
[1minc/VVirtualDataReader.h:123:45: [2mnote:[0m Virtual function in base class
        virtual VMonteCarloRunHeader*       getMonteCarloHeader() = 0;
                                            ^
[1minc/VMultipleGrIsuReader.h:203:31: [2mnote:[0m Function in derived class
        VMonteCarloRunHeader* getMonteCarloHeader()
                              ^
[1minc/VMultipleGrIsuReader.h:207:14: [31mstyle:[39m The function 'setPerformFADCAnalysis' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void setPerformFADCAnalysis( unsigned int iTel, bool iB )
             ^
[1minc/VVirtualDataReader.h:417:22: [2mnote:[0m Virtual function in base class
        virtual void setPerformFADCAnalysis( unsigned int iTel, bool iB )
                     ^
[1minc/VMultipleGrIsuReader.h:207:14: [2mnote:[0m Function in derived class
        void setPerformFADCAnalysis( unsigned int iTel, bool iB )
             ^
[1minc/VBaseRawDataReader.h:77:37: [31mstyle:[39m The function 'getDataFormat' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        string                      getDataFormat()
                                    ^
[1minc/VVirtualDataReader.h:47:45: [2mnote:[0m Virtual function in base class
        virtual string                      getDataFormat()
                                            ^
[1minc/VBaseRawDataReader.h:77:37: [2mnote:[0m Function in derived class
        string                      getDataFormat()
                                    ^
[1minc/VBaseRawDataReader.h:81:37: [31mstyle:[39m The function 'getDataFormatNum' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getDataFormatNum();
                                    ^
[1minc/VVirtualDataReader.h:52:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getDataFormatNum()
                                            ^
[1minc/VBaseRawDataReader.h:81:37: [2mnote:[0m Function in derived class
        unsigned int                getDataFormatNum();
                                    ^
[1minc/VBaseRawDataReader.h:82:37: [31mstyle:[39m The function 'getSourceFileName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        string                      getSourceFileName()
                                    ^
[1minc/VVirtualDataReader.h:64:45: [2mnote:[0m Virtual function in base class
        virtual string                      getSourceFileName()
                                            ^
[1minc/VBaseRawDataReader.h:82:37: [2mnote:[0m Function in derived class
        string                      getSourceFileName()
                                    ^
[1minc/VBaseRawDataReader.h:92:37: [31mstyle:[39m The function 'getChannelHitIndex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::pair< bool, uint32_t > getChannelHitIndex( uint32_t i )
                                    ^
[1minc/VVirtualDataReader.h:86:45: [2mnote:[0m Virtual function in base class
        virtual std::pair< bool, uint32_t > getChannelHitIndex( uint32_t ) = 0;
                                            ^
[1minc/VBaseRawDataReader.h:92:37: [2mnote:[0m Function in derived class
        std::pair< bool, uint32_t > getChannelHitIndex( uint32_t i )
                                    ^
[1minc/VBaseRawDataReader.h:103:37: [31mstyle:[39m The function 'getRunNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getRunNumber()
                                    ^
[1minc/VVirtualDataReader.h:98:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getRunNumber() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:103:37: [2mnote:[0m Function in derived class
        uint32_t                    getRunNumber()
                                    ^
[1minc/VBaseRawDataReader.h:107:37: [31mstyle:[39m The function 'getEventNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getEventNumber()
                                    ^
[1minc/VVirtualDataReader.h:87:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getEventNumber() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:107:37: [2mnote:[0m Function in derived class
        uint32_t                    getEventNumber()
                                    ^
[1minc/VBaseRawDataReader.h:118:37: [31mstyle:[39m The function 'getNewEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                     getNewEventType();
                                    ^
[1minc/VVirtualDataReader.h:88:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getNewEventType()
                                            ^
[1minc/VBaseRawDataReader.h:118:37: [2mnote:[0m Function in derived class
        uint8_t                     getNewEventType();
                                    ^
[1minc/VBaseRawDataReader.h:120:37: [31mstyle:[39m The function 'getEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                     getEventType();
                                    ^
[1minc/VVirtualDataReader.h:92:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getEventType() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:120:37: [2mnote:[0m Function in derived class
        uint8_t                     getEventType();
                                    ^
[1minc/VBaseRawDataReader.h:121:37: [31mstyle:[39m The function 'getATEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                     getATEventType()
                                    ^
[1minc/VVirtualDataReader.h:97:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getATEventType() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:121:37: [2mnote:[0m Function in derived class
        uint8_t                     getATEventType()
                                    ^
[1minc/VBaseRawDataReader.h:125:37: [31mstyle:[39m The function 'getHitBit' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        getHitBit( uint32_t i )
                                    ^
[1minc/VVirtualDataReader.h:103:45: [2mnote:[0m Virtual function in base class
        virtual bool                        getHitBit( uint32_t )
                                            ^
[1minc/VBaseRawDataReader.h:125:37: [2mnote:[0m Function in derived class
        bool                        getHitBit( uint32_t i )
                                    ^
[1minc/VBaseRawDataReader.h:136:37: [31mstyle:[39m The function 'getFullHitVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< bool >         getFullHitVec()
                                    ^
[1minc/VVirtualDataReader.h:107:46: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >          getFullHitVec() = 0;
                                             ^
[1minc/VBaseRawDataReader.h:136:37: [2mnote:[0m Function in derived class
        std::vector< bool >         getFullHitVec()
                                    ^
[1minc/VBaseRawDataReader.h:147:37: [31mstyle:[39m The function 'getFullTrigVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< bool >         getFullTrigVec()
                                    ^
[1minc/VVirtualDataReader.h:108:46: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >          getFullTrigVec() = 0;
                                             ^
[1minc/VBaseRawDataReader.h:147:37: [2mnote:[0m Function in derived class
        std::vector< bool >         getFullTrigVec()
                                    ^
[1minc/VBaseRawDataReader.h:158:37: [31mstyle:[39m The function 'getNumberofFullTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int                         getNumberofFullTrigger();
                                    ^
[1minc/VVirtualDataReader.h:109:45: [2mnote:[0m Virtual function in base class
        virtual int                         getNumberofFullTrigger() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:158:37: [2mnote:[0m Function in derived class
        int                         getNumberofFullTrigger();
                                    ^
[1minc/VBaseRawDataReader.h:159:37: [31mstyle:[39m The function 'getGPS0' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS0()
                                    ^
[1minc/VVirtualDataReader.h:114:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS0() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:159:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS0()
                                    ^
[1minc/VBaseRawDataReader.h:170:37: [31mstyle:[39m The function 'getGPS1' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS1()
                                    ^
[1minc/VVirtualDataReader.h:115:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS1() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:170:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS1()
                                    ^
[1minc/VBaseRawDataReader.h:181:37: [31mstyle:[39m The function 'getGPS2' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS2()
                                    ^
[1minc/VVirtualDataReader.h:116:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS2() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:181:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS2()
                                    ^
[1minc/VBaseRawDataReader.h:192:37: [31mstyle:[39m The function 'getGPS3' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS3()
                                    ^
[1minc/VVirtualDataReader.h:117:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS3() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:192:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS3()
                                    ^
[1minc/VBaseRawDataReader.h:203:37: [31mstyle:[39m The function 'getGPS4' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getGPS4()
                                    ^
[1minc/VVirtualDataReader.h:118:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS4() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:203:37: [2mnote:[0m Function in derived class
        uint32_t                    getGPS4()
                                    ^
[1minc/VBaseRawDataReader.h:214:37: [31mstyle:[39m The function 'getGPSYear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getGPSYear();
                                    ^
[1minc/VVirtualDataReader.h:119:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getGPSYear() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:214:37: [2mnote:[0m Function in derived class
        uint16_t                    getGPSYear();
                                    ^
[1minc/VBaseRawDataReader.h:215:37: [31mstyle:[39m The function 'getATGPSYear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        virtual uint16_t            getATGPSYear()
                                    ^
[1minc/VVirtualDataReader.h:120:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getATGPSYear() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:215:37: [2mnote:[0m Function in derived class
        virtual uint16_t            getATGPSYear()
                                    ^
[1minc/VBaseRawDataReader.h:219:37: [31mstyle:[39m The function 'getMaxChannels' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getMaxChannels();
                                    ^
[1minc/VVirtualDataReader.h:122:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getMaxChannels() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:219:37: [2mnote:[0m Function in derived class
        uint16_t                    getMaxChannels();
                                    ^
[1minc/VBaseRawDataReader.h:220:37: [31mstyle:[39m The function 'getNIncompleteEvents' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< int >               getNIncompleteEvents()
                                    ^
[1minc/VVirtualDataReader.h:56:45: [2mnote:[0m Virtual function in base class
        virtual vector< int >               getNIncompleteEvents()
                                            ^
[1minc/VBaseRawDataReader.h:220:37: [2mnote:[0m Function in derived class
        vector< int >               getNIncompleteEvents()
                                    ^
[1minc/VBaseRawDataReader.h:224:37: [31mstyle:[39m The function 'getNumChannelsHit' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getNumChannelsHit()
                                    ^
[1minc/VVirtualDataReader.h:124:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getNumChannelsHit() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:224:37: [2mnote:[0m Function in derived class
        uint16_t                    getNumChannelsHit()
                                    ^
[1minc/VBaseRawDataReader.h:235:37: [31mstyle:[39m The function 'getNumSamples' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t                    getNumSamples();
                                    ^
[1minc/VVirtualDataReader.h:125:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getNumSamples() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:235:37: [2mnote:[0m Function in derived class
        uint16_t                    getNumSamples();
                                    ^
[1minc/VBaseRawDataReader.h:236:37: [31mstyle:[39m The function 'getNTel' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getNTel()
                                    ^
[1minc/VVirtualDataReader.h:126:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getNTel() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:236:37: [2mnote:[0m Function in derived class
        unsigned int                getNTel()
                                    ^
[1minc/VBaseRawDataReader.h:240:37: [31mstyle:[39m The function 'getSample' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t                     getSample( unsigned channel, unsigned sample, bool iNewNoiseTrace = true );
                                    ^
[1minc/VVirtualDataReader.h:156:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getSample( unsigned channel, unsigned sample, bool iNewNoiseTrace = true )
                                            ^
[1minc/VBaseRawDataReader.h:240:37: [2mnote:[0m Function in derived class
        uint8_t                     getSample( unsigned channel, unsigned sample, bool iNewNoiseTrace = true );
                                    ^
[1minc/VBaseRawDataReader.h:241:37: [31mstyle:[39m The function 'getSamplesVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::vector< uint8_t >      getSamplesVec();
                                    ^
[1minc/VVirtualDataReader.h:160:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< uint8_t >      getSamplesVec() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:241:37: [2mnote:[0m Function in derived class
        std::vector< uint8_t >      getSamplesVec();
                                    ^
[1minc/VBaseRawDataReader.h:242:37: [31mstyle:[39m The function 'getHitID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t                    getHitID( uint32_t i );
                                    ^
[1minc/VVirtualDataReader.h:121:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getHitID( uint32_t i ) = 0;
                                            ^
[1minc/VBaseRawDataReader.h:242:37: [2mnote:[0m Function in derived class
        uint32_t                    getHitID( uint32_t i );
                                    ^
[1minc/VBaseRawDataReader.h:243:37: [31mstyle:[39m The function 'getHiLo' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        getHiLo( uint32_t i );
                                    ^
[1minc/VVirtualDataReader.h:127:45: [2mnote:[0m Virtual function in base class
        virtual bool                        getHiLo( uint32_t i ) = 0;
                                            ^
[1minc/VBaseRawDataReader.h:243:37: [2mnote:[0m Function in derived class
        bool                        getHiLo( uint32_t i );
                                    ^
[1minc/VBaseRawDataReader.h:244:37: [31mstyle:[39m The function 'getTelescopeID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int                getTelescopeID()
                                    ^
[1minc/VVirtualDataReader.h:68:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getTelescopeID()
                                            ^
[1minc/VBaseRawDataReader.h:244:37: [2mnote:[0m Function in derived class
        unsigned int                getTelescopeID()
                                    ^
[1minc/VBaseRawDataReader.h:248:37: [31mstyle:[39m The function 'hasFADCTrace' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        hasFADCTrace();
                                    ^
[1minc/VVirtualDataReader.h:327:22: [2mnote:[0m Virtual function in base class
        virtual bool hasFADCTrace()
                     ^
[1minc/VBaseRawDataReader.h:248:37: [2mnote:[0m Function in derived class
        bool                        hasFADCTrace();
                                    ^
[1minc/VBaseRawDataReader.h:249:37: [31mstyle:[39m The function 'selectHitChan' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void                        selectHitChan( uint32_t i );
                                    ^
[1minc/VVirtualDataReader.h:170:45: [2mnote:[0m Virtual function in base class
        virtual void                        selectHitChan( uint32_t ) = 0;
                                            ^
[1minc/VBaseRawDataReader.h:249:37: [2mnote:[0m Function in derived class
        void                        selectHitChan( uint32_t i );
                                    ^
[1minc/VBaseRawDataReader.h:250:14: [31mstyle:[39m The function 'isZeroSuppressed' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool isZeroSuppressed( unsigned int iChannel );
             ^
[1minc/VVirtualDataReader.h:331:22: [2mnote:[0m Virtual function in base class
        virtual bool isZeroSuppressed( unsigned int iChannel )
                     ^
[1minc/VBaseRawDataReader.h:250:14: [2mnote:[0m Function in derived class
        bool isZeroSuppressed( unsigned int iChannel );
             ^
[1minc/VBaseRawDataReader.h:251:28: [31mstyle:[39m The function 'getZeroSuppressionFlag' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned short int getZeroSuppressionFlag( unsigned int iChannel );
                           ^
[1minc/VVirtualDataReader.h:339:36: [2mnote:[0m Virtual function in base class
        virtual unsigned short int getZeroSuppressionFlag( unsigned int iChannel )
                                   ^
[1minc/VBaseRawDataReader.h:251:28: [2mnote:[0m Function in derived class
        unsigned short int getZeroSuppressionFlag( unsigned int iChannel );
                           ^
[1minc/VBaseRawDataReader.h:252:37: [31mstyle:[39m The function 'wasLossyCompressed' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        wasLossyCompressed();
                                    ^
[1minc/VVirtualDataReader.h:183:45: [2mnote:[0m Virtual function in base class
        virtual bool                        wasLossyCompressed() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:252:37: [2mnote:[0m Function in derived class
        bool                        wasLossyCompressed();
                                    ^
[1minc/VBaseRawDataReader.h:255:37: [31mstyle:[39m The function 'getNextEvent' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        virtual bool                getNextEvent() = 0;
                                    ^
[1minc/VVirtualDataReader.h:186:45: [2mnote:[0m Virtual function in base class
        virtual bool                        getNextEvent() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:255:37: [2mnote:[0m Function in derived class
        virtual bool                getNextEvent() = 0;
                                    ^
[1minc/VBaseRawDataReader.h:256:37: [31mstyle:[39m The function 'setTelescopeID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        setTelescopeID( unsigned int iTelID );
                                    ^
[1minc/VVirtualDataReader.h:81:45: [2mnote:[0m Virtual function in base class
        virtual bool                        setTelescopeID( unsigned int a )
                                            ^
[1minc/VBaseRawDataReader.h:256:37: [2mnote:[0m Function in derived class
        bool                        setTelescopeID( unsigned int iTelID );
                                    ^
[1minc/VBaseRawDataReader.h:258:36: [31mstyle:[39m The function 'isMC' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                       isMC();
                                   ^
[1minc/VVirtualDataReader.h:214:44: [2mnote:[0m Virtual function in base class
        virtual bool                       isMC() //!< is data MC?
                                           ^
[1minc/VBaseRawDataReader.h:258:36: [2mnote:[0m Function in derived class
        bool                       isMC();
                                   ^
[1minc/VBaseRawDataReader.h:259:36: [31mstyle:[39m The function 'getMC_primary' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int                        getMC_primary()
                                   ^
[1minc/VVirtualDataReader.h:261:44: [2mnote:[0m Virtual function in base class
        virtual int                        getMC_primary()
                                           ^
[1minc/VBaseRawDataReader.h:259:36: [2mnote:[0m Function in derived class
        int                        getMC_primary()
                                   ^
[1minc/VBaseRawDataReader.h:263:36: [31mstyle:[39m The function 'getMC_energy' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_energy()
                                   ^
[1minc/VVirtualDataReader.h:266:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_energy()
                                           ^
[1minc/VBaseRawDataReader.h:263:36: [2mnote:[0m Function in derived class
        float                      getMC_energy()
                                   ^
[1minc/VBaseRawDataReader.h:267:36: [31mstyle:[39m The function 'getMC_X' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_X()
                                   ^
[1minc/VVirtualDataReader.h:271:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_X()
                                           ^
[1minc/VBaseRawDataReader.h:267:36: [2mnote:[0m Function in derived class
        float                      getMC_X()
                                   ^
[1minc/VBaseRawDataReader.h:271:36: [31mstyle:[39m The function 'getMC_Y' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Y()
                                   ^
[1minc/VVirtualDataReader.h:276:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Y()
                                           ^
[1minc/VBaseRawDataReader.h:271:36: [2mnote:[0m Function in derived class
        float                      getMC_Y()
                                   ^
[1minc/VBaseRawDataReader.h:275:36: [31mstyle:[39m The function 'getMC_Xcos' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Xcos()
                                   ^
[1minc/VVirtualDataReader.h:281:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Xcos()
                                           ^
[1minc/VBaseRawDataReader.h:275:36: [2mnote:[0m Function in derived class
        float                      getMC_Xcos()
                                   ^
[1minc/VBaseRawDataReader.h:279:36: [31mstyle:[39m The function 'getMC_Ycos' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Ycos()
                                   ^
[1minc/VVirtualDataReader.h:286:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Ycos()
                                           ^
[1minc/VBaseRawDataReader.h:279:36: [2mnote:[0m Function in derived class
        float                      getMC_Ycos()
                                   ^
[1minc/VBaseRawDataReader.h:283:36: [31mstyle:[39m The function 'getMC_Ze' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Ze()
                                   ^
[1minc/VVirtualDataReader.h:291:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Ze()
                                           ^
[1minc/VBaseRawDataReader.h:283:36: [2mnote:[0m Function in derived class
        float                      getMC_Ze()
                                   ^
[1minc/VBaseRawDataReader.h:287:36: [31mstyle:[39m The function 'getMC_Az' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Az()
                                   ^
[1minc/VVirtualDataReader.h:296:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Az()
                                           ^
[1minc/VBaseRawDataReader.h:287:36: [2mnote:[0m Function in derived class
        float                      getMC_Az()
                                   ^
[1minc/VBaseRawDataReader.h:291:15: [31mstyle:[39m The function 'getMCFirstInteractionHeight' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float getMCFirstInteractionHeight()
              ^
[1minc/VVirtualDataReader.h:310:23: [2mnote:[0m Virtual function in base class
        virtual float getMCFirstInteractionHeight()
                      ^
[1minc/VBaseRawDataReader.h:291:15: [2mnote:[0m Function in derived class
        float getMCFirstInteractionHeight()
              ^
[1minc/VBaseRawDataReader.h:295:15: [31mstyle:[39m The function 'getMCFirstInteractionDepth' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float getMCFirstInteractionDepth()
              ^
[1minc/VVirtualDataReader.h:314:23: [2mnote:[0m Virtual function in base class
        virtual float getMCFirstInteractionDepth()
                      ^
[1minc/VBaseRawDataReader.h:295:15: [2mnote:[0m Function in derived class
        float getMCFirstInteractionDepth()
              ^
[1minc/VBaseRawDataReader.h:299:13: [31mstyle:[39m The function 'getMCCorsikaRunID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int getMCCorsikaRunID()
            ^
[1minc/VVirtualDataReader.h:318:21: [2mnote:[0m Virtual function in base class
        virtual int getMCCorsikaRunID()
                    ^
[1minc/VBaseRawDataReader.h:299:13: [2mnote:[0m Function in derived class
        int getMCCorsikaRunID()
            ^
[1minc/VBaseRawDataReader.h:303:13: [31mstyle:[39m The function 'getMCCorsikaShowerID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int getMCCorsikaShowerID()
            ^
[1minc/VVirtualDataReader.h:322:21: [2mnote:[0m Virtual function in base class
        virtual int getMCCorsikaShowerID()
                    ^
[1minc/VBaseRawDataReader.h:303:13: [2mnote:[0m Function in derived class
        int getMCCorsikaShowerID()
            ^
[1minc/VBaseRawDataReader.h:309:36: [31mstyle:[39m The function 'getMC_Xoffset' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Xoffset()
                                   ^
[1minc/VVirtualDataReader.h:301:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Xoffset()
                                           ^
[1minc/VBaseRawDataReader.h:309:36: [2mnote:[0m Function in derived class
        float                      getMC_Xoffset()
                                   ^
[1minc/VBaseRawDataReader.h:313:36: [31mstyle:[39m The function 'getMC_Yoffset' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                      getMC_Yoffset()
                                   ^
[1minc/VVirtualDataReader.h:306:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Yoffset()
                                           ^
[1minc/VBaseRawDataReader.h:313:36: [2mnote:[0m Function in derived class
        float                      getMC_Yoffset()
                                   ^
[1minc/VBaseRawDataReader.h:325:39: [31mstyle:[39m The function 'getTracePulseTiming' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< valarray< double > >& getTracePulseTiming( unsigned int iNChannel = 99999 );
                                      ^
[1minc/VVirtualDataReader.h:408:52: [2mnote:[0m Virtual function in base class
        virtual std::vector< valarray< double > >& getTracePulseTiming( unsigned int iNChannel = 99999 )
                                                   ^
[1minc/VBaseRawDataReader.h:325:39: [2mnote:[0m Function in derived class
        vector< valarray< double > >& getTracePulseTiming( unsigned int iNChannel = 99999 );
                                      ^
[1minc/VBaseRawDataReader.h:328:36: [31mstyle:[39m The function 'getPeds' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        valarray<double>&          getPeds();
                                   ^
[1minc/VVirtualDataReader.h:132:45: [2mnote:[0m Virtual function in base class
        virtual valarray<double>&           getPeds()
                                            ^
[1minc/VBaseRawDataReader.h:328:36: [2mnote:[0m Function in derived class
        valarray<double>&          getPeds();
                                   ^
[1minc/VBaseRawDataReader.h:329:36: [31mstyle:[39m The function 'getPedvars' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        valarray<double>&          getPedvars();
                                   ^
[1minc/VVirtualDataReader.h:136:45: [2mnote:[0m Virtual function in base class
        virtual valarray<double>&           getPedvars()
                                            ^
[1minc/VBaseRawDataReader.h:329:36: [2mnote:[0m Function in derived class
        valarray<double>&          getPedvars();
                                   ^
[1minc/VBaseRawDataReader.h:330:37: [31mstyle:[39m The function 'getPedvarsAllSumWindows' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< valarray<double> >& getPedvarsAllSumWindows();
                                    ^
[1minc/VVirtualDataReader.h:140:45: [2mnote:[0m Virtual function in base class
        virtual vector< valarray<double> >& getPedvarsAllSumWindows()
                                            ^
[1minc/VBaseRawDataReader.h:330:37: [2mnote:[0m Function in derived class
        vector< valarray<double> >& getPedvarsAllSumWindows();
                                    ^
[1minc/VBaseRawDataReader.h:331:36: [31mstyle:[39m The function 'getPedRMS' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        valarray<double>&          getPedRMS();
                                   ^
[1minc/VVirtualDataReader.h:144:45: [2mnote:[0m Virtual function in base class
        virtual valarray<double>&           getPedRMS()
                                            ^
[1minc/VBaseRawDataReader.h:331:36: [2mnote:[0m Function in derived class
        valarray<double>&          getPedRMS();
                                   ^
[1minc/VBaseRawDataReader.h:335:36: [31mstyle:[39m The function 'setSumWindow' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void                       setSumWindow( unsigned int iTelID, int isw );
                                   ^
[1minc/VVirtualDataReader.h:76:45: [2mnote:[0m Virtual function in base class
        virtual void                        setSumWindow( unsigned int iTelID, int isw ) { }
                                            ^
[1minc/VBaseRawDataReader.h:335:36: [2mnote:[0m Function in derived class
        void                       setSumWindow( unsigned int iTelID, int isw );
                                   ^
[1minc/VBaseRawDataReader.h:337:36: [31mstyle:[39m The function 'getTelElevation' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< double >           getTelElevation()
                                   ^
[1minc/VVirtualDataReader.h:203:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< double >       getTelElevation()
                                            ^
[1minc/VBaseRawDataReader.h:337:36: [2mnote:[0m Function in derived class
        vector< double >           getTelElevation()
                                   ^
[1minc/VBaseRawDataReader.h:341:36: [31mstyle:[39m The function 'getTelAzimuth' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< double >           getTelAzimuth()
                                   ^
[1minc/VVirtualDataReader.h:207:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< double >       getTelAzimuth()
                                            ^
[1minc/VBaseRawDataReader.h:341:36: [2mnote:[0m Function in derived class
        vector< double >           getTelAzimuth()
                                   ^
[1minc/VBaseRawDataReader.h:348:31: [31mstyle:[39m The function 'getMonteCarloHeader' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        VMonteCarloRunHeader* getMonteCarloHeader()
                              ^
[1minc/VVirtualDataReader.h:123:45: [2mnote:[0m Virtual function in base class
        virtual VMonteCarloRunHeader*       getMonteCarloHeader() = 0;
                                            ^
[1minc/VBaseRawDataReader.h:348:31: [2mnote:[0m Function in derived class
        VMonteCarloRunHeader* getMonteCarloHeader()
                              ^
[1minc/VPEReader.h:83:37: [31mstyle:[39m The function 'getChannelHitIndex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        std::pair< bool, uint32_t > getChannelHitIndex( uint32_t i_channel );
                                    ^
[1minc/VVirtualDataReader.h:86:45: [2mnote:[0m Virtual function in base class
        virtual std::pair< bool, uint32_t > getChannelHitIndex( uint32_t ) = 0;
                                            ^
[1minc/VPEReader.h:83:37: [2mnote:[0m Function in derived class
        std::pair< bool, uint32_t > getChannelHitIndex( uint32_t i_channel );
                                    ^
[1minc/VPEReader.h:84:19: [31mstyle:[39m The function 'getDataFormat' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        string    getDataFormat()
                  ^
[1minc/VVirtualDataReader.h:47:45: [2mnote:[0m Virtual function in base class
        virtual string                      getDataFormat()
                                            ^
[1minc/VPEReader.h:84:19: [2mnote:[0m Function in derived class
        string    getDataFormat()
                  ^
[1minc/VPEReader.h:88:22: [31mstyle:[39m The function 'getDataFormatNum' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int getDataFormatNum()
                     ^
[1minc/VVirtualDataReader.h:52:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getDataFormatNum()
                                            ^
[1minc/VPEReader.h:88:22: [2mnote:[0m Function in derived class
        unsigned int getDataFormatNum()
                     ^
[1minc/VPEReader.h:92:19: [31mstyle:[39m The function 'getEventNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t  getEventNumber()
                  ^
[1minc/VVirtualDataReader.h:87:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getEventNumber() = 0;
                                            ^
[1minc/VPEReader.h:92:19: [2mnote:[0m Function in derived class
        uint32_t  getEventNumber()
                  ^
[1minc/VPEReader.h:96:19: [31mstyle:[39m The function 'getEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t   getEventType()
                  ^
[1minc/VVirtualDataReader.h:92:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getEventType() = 0;
                                            ^
[1minc/VPEReader.h:96:19: [2mnote:[0m Function in derived class
        uint8_t   getEventType()
                  ^
[1minc/VPEReader.h:100:19: [31mstyle:[39m The function 'getATEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t   getATEventType()
                  ^
[1minc/VVirtualDataReader.h:97:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getATEventType() = 0;
                                            ^
[1minc/VPEReader.h:100:19: [2mnote:[0m Function in derived class
        uint8_t   getATEventType()
                  ^
[1minc/VPEReader.h:104:27: [31mstyle:[39m The function 'getFullHitVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< bool >    getFullHitVec()
                          ^
[1minc/VVirtualDataReader.h:107:46: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >          getFullHitVec() = 0;
                                             ^
[1minc/VPEReader.h:104:27: [2mnote:[0m Function in derived class
        vector< bool >    getFullHitVec()
                          ^
[1minc/VPEReader.h:108:27: [31mstyle:[39m The function 'getFullTrigVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< bool >    getFullTrigVec()
                          ^
[1minc/VVirtualDataReader.h:108:46: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >          getFullTrigVec() = 0;
                                             ^
[1minc/VPEReader.h:108:27: [2mnote:[0m Function in derived class
        vector< bool >    getFullTrigVec()
                          ^
[1minc/VPEReader.h:112:32: [31mstyle:[39m The function 'getNumberofFullTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int                    getNumberofFullTrigger()
                               ^
[1minc/VVirtualDataReader.h:109:45: [2mnote:[0m Virtual function in base class
        virtual int                         getNumberofFullTrigger() = 0;
                                            ^
[1minc/VPEReader.h:112:32: [2mnote:[0m Function in derived class
        int                    getNumberofFullTrigger()
                               ^
[1minc/VPEReader.h:116:19: [31mstyle:[39m The function 'getGPS0' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t  getGPS0()
                  ^
[1minc/VVirtualDataReader.h:114:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS0() = 0;
                                            ^
[1minc/VPEReader.h:116:19: [2mnote:[0m Function in derived class
        uint32_t  getGPS0()
                  ^
[1minc/VPEReader.h:120:19: [31mstyle:[39m The function 'getGPS1' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t  getGPS1()
                  ^
[1minc/VVirtualDataReader.h:115:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS1() = 0;
                                            ^
[1minc/VPEReader.h:120:19: [2mnote:[0m Function in derived class
        uint32_t  getGPS1()
                  ^
[1minc/VPEReader.h:124:19: [31mstyle:[39m The function 'getGPS2' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t  getGPS2()
                  ^
[1minc/VVirtualDataReader.h:116:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS2() = 0;
                                            ^
[1minc/VPEReader.h:124:19: [2mnote:[0m Function in derived class
        uint32_t  getGPS2()
                  ^
[1minc/VPEReader.h:128:19: [31mstyle:[39m The function 'getGPS3' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t  getGPS3()
                  ^
[1minc/VVirtualDataReader.h:117:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS3() = 0;
                                            ^
[1minc/VPEReader.h:128:19: [2mnote:[0m Function in derived class
        uint32_t  getGPS3()
                  ^
[1minc/VPEReader.h:132:19: [31mstyle:[39m The function 'getGPS4' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t  getGPS4()
                  ^
[1minc/VVirtualDataReader.h:118:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getGPS4() = 0;
                                            ^
[1minc/VPEReader.h:132:19: [2mnote:[0m Function in derived class
        uint32_t  getGPS4()
                  ^
[1minc/VPEReader.h:136:19: [31mstyle:[39m The function 'getGPSYear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t  getGPSYear()
                  ^
[1minc/VVirtualDataReader.h:119:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getGPSYear() = 0;
                                            ^
[1minc/VPEReader.h:136:19: [2mnote:[0m Function in derived class
        uint16_t  getGPSYear()
                  ^
[1minc/VPEReader.h:140:19: [31mstyle:[39m The function 'getATGPSYear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t  getATGPSYear()
                  ^
[1minc/VVirtualDataReader.h:120:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getATGPSYear() = 0;
                                            ^
[1minc/VPEReader.h:140:19: [2mnote:[0m Function in derived class
        uint16_t  getATGPSYear()
                  ^
[1minc/VPEReader.h:144:19: [31mstyle:[39m The function 'getHitID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t  getHitID( uint32_t );
                  ^
[1minc/VVirtualDataReader.h:121:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getHitID( uint32_t i ) = 0;
                                            ^
[1minc/VPEReader.h:144:19: [2mnote:[0m Function in derived class
        uint32_t  getHitID( uint32_t );
                  ^
[1minc/VPEReader.h:145:37: [31mstyle:[39m The function 'getHiLo' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        getHiLo( uint32_t i )
                                    ^
[1minc/VVirtualDataReader.h:127:45: [2mnote:[0m Virtual function in base class
        virtual bool                        getHiLo( uint32_t i ) = 0;
                                            ^
[1minc/VPEReader.h:145:37: [2mnote:[0m Function in derived class
        bool                        getHiLo( uint32_t i )
                                    ^
[1minc/VPEReader.h:156:37: [31mstyle:[39m The function 'getLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< bool >&             getLocalTrigger()
                                    ^
[1minc/VVirtualDataReader.h:358:44: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >&       getLocalTrigger()
                                           ^
[1minc/VPEReader.h:156:37: [2mnote:[0m Function in derived class
        vector< bool >&             getLocalTrigger()
                                    ^
[1minc/VPEReader.h:160:37: [31mstyle:[39m The function 'getLocalTriggerTime' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                       getLocalTriggerTime( unsigned int iTel )
                                    ^
[1minc/VVirtualDataReader.h:366:44: [2mnote:[0m Virtual function in base class
        virtual float                      getLocalTriggerTime( unsigned int iTel )
                                           ^
[1minc/VPEReader.h:160:37: [2mnote:[0m Function in derived class
        float                       getLocalTriggerTime( unsigned int iTel )
                                    ^
[1minc/VPEReader.h:171:37: [31mstyle:[39m The function 'getLocalDelayedTriggerTime' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float                       getLocalDelayedTriggerTime( unsigned int iTel )
                                    ^
[1minc/VVirtualDataReader.h:370:44: [2mnote:[0m Virtual function in base class
        virtual float                      getLocalDelayedTriggerTime( unsigned int iTel )
                                           ^
[1minc/VPEReader.h:171:37: [2mnote:[0m Function in derived class
        float                       getLocalDelayedTriggerTime( unsigned int iTel )
                                    ^
[1minc/VPEReader.h:182:19: [31mstyle:[39m The function 'getMaxChannels' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t  getMaxChannels()
                  ^
[1minc/VVirtualDataReader.h:122:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getMaxChannels() = 0;
                                            ^
[1minc/VPEReader.h:182:19: [2mnote:[0m Function in derived class
        uint16_t  getMaxChannels()
                  ^
[1minc/VPEReader.h:186:19: [31mstyle:[39m The function 'getNumChannelsHit' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t  getNumChannelsHit()             //!< preli
                  ^
[1minc/VVirtualDataReader.h:124:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getNumChannelsHit() = 0;
                                            ^
[1minc/VPEReader.h:186:19: [2mnote:[0m Function in derived class
        uint16_t  getNumChannelsHit()             //!< preli
                  ^
[1minc/VPEReader.h:190:19: [31mstyle:[39m The function 'getNumSamples' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t  getNumSamples()                 //!< no samples in pe file!
                  ^
[1minc/VVirtualDataReader.h:125:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getNumSamples() = 0;
                                            ^
[1minc/VPEReader.h:190:19: [2mnote:[0m Function in derived class
        uint16_t  getNumSamples()                 //!< no samples in pe file!
                  ^
[1minc/VPEReader.h:194:19: [31mstyle:[39m The function 'getMC_primary' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        int       getMC_primary()                 //!< MC primary type
                  ^
[1minc/VVirtualDataReader.h:261:44: [2mnote:[0m Virtual function in base class
        virtual int                        getMC_primary()
                                           ^
[1minc/VPEReader.h:194:19: [2mnote:[0m Function in derived class
        int       getMC_primary()                 //!< MC primary type
                  ^
[1minc/VPEReader.h:198:19: [31mstyle:[39m The function 'getMC_energy' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_energy()                  //!< MC primary energy
                  ^
[1minc/VVirtualDataReader.h:266:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_energy()
                                           ^
[1minc/VPEReader.h:198:19: [2mnote:[0m Function in derived class
        float     getMC_energy()                  //!< MC primary energy
                  ^
[1minc/VPEReader.h:202:19: [31mstyle:[39m The function 'getMC_X' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_X()                       //!< MC x-coordinate of impact point on ground plane
                  ^
[1minc/VVirtualDataReader.h:271:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_X()
                                           ^
[1minc/VPEReader.h:202:19: [2mnote:[0m Function in derived class
        float     getMC_X()                       //!< MC x-coordinate of impact point on ground plane
                  ^
[1minc/VPEReader.h:206:19: [31mstyle:[39m The function 'getMC_Y' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Y()                       //!< MC y-coordinate of impact point on ground plane
                  ^
[1minc/VVirtualDataReader.h:276:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Y()
                                           ^
[1minc/VPEReader.h:206:19: [2mnote:[0m Function in derived class
        float     getMC_Y()                       //!< MC y-coordinate of impact point on ground plane
                  ^
[1minc/VPEReader.h:210:19: [31mstyle:[39m The function 'getMC_Xcos' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Xcos()                    //!< MC x direction cosine of primary in ground coordinate system
                  ^
[1minc/VVirtualDataReader.h:281:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Xcos()
                                           ^
[1minc/VPEReader.h:210:19: [2mnote:[0m Function in derived class
        float     getMC_Xcos()                    //!< MC x direction cosine of primary in ground coordinate system
                  ^
[1minc/VPEReader.h:214:19: [31mstyle:[39m The function 'getMC_Ycos' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Ycos()                    //!< MC y direction cosine of primary in ground coordinate system
                  ^
[1minc/VVirtualDataReader.h:286:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Ycos()
                                           ^
[1minc/VPEReader.h:214:19: [2mnote:[0m Function in derived class
        float     getMC_Ycos()                    //!< MC y direction cosine of primary in ground coordinate system
                  ^
[1minc/VPEReader.h:218:19: [31mstyle:[39m The function 'getMC_Ze' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Ze()                      //!< MC zenith angle of primary
                  ^
[1minc/VVirtualDataReader.h:291:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Ze()
                                           ^
[1minc/VPEReader.h:218:19: [2mnote:[0m Function in derived class
        float     getMC_Ze()                      //!< MC zenith angle of primary
                  ^
[1minc/VPEReader.h:222:19: [31mstyle:[39m The function 'getMC_Az' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Az()                      //!< MC azimuth angle of primary
                  ^
[1minc/VVirtualDataReader.h:296:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Az()
                                           ^
[1minc/VPEReader.h:222:19: [2mnote:[0m Function in derived class
        float     getMC_Az()                      //!< MC azimuth angle of primary
                  ^
[1minc/VPEReader.h:226:19: [31mstyle:[39m The function 'getMC_Xoffset' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Xoffset()                 //!< MC x coordinate of source location in degrees
                  ^
[1minc/VVirtualDataReader.h:301:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Xoffset()
                                           ^
[1minc/VPEReader.h:226:19: [2mnote:[0m Function in derived class
        float     getMC_Xoffset()                 //!< MC x coordinate of source location in degrees
                  ^
[1minc/VPEReader.h:230:19: [31mstyle:[39m The function 'getMC_Yoffset' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        float     getMC_Yoffset()                 //!< MC x coordinate of source location in degrees
                  ^
[1minc/VVirtualDataReader.h:306:44: [2mnote:[0m Virtual function in base class
        virtual float                      getMC_Yoffset()
                                           ^
[1minc/VPEReader.h:230:19: [2mnote:[0m Function in derived class
        float     getMC_Yoffset()                 //!< MC x coordinate of source location in degrees
                  ^
[1minc/VPEReader.h:234:19: [31mstyle:[39m The function 'getNextEvent' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      getNextEvent();
                  ^
[1minc/VVirtualDataReader.h:186:45: [2mnote:[0m Virtual function in base class
        virtual bool                        getNextEvent() = 0;
                                            ^
[1minc/VPEReader.h:234:19: [2mnote:[0m Function in derived class
        bool      getNextEvent();
                  ^
[1minc/VPEReader.h:235:22: [31mstyle:[39m The function 'getNumTelescopes' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int getNumTelescopes()
                     ^
[1minc/VVirtualDataReader.h:60:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getNumTelescopes()
                                            ^
[1minc/VPEReader.h:235:22: [2mnote:[0m Function in derived class
        unsigned int getNumTelescopes()
                     ^
[1minc/VPEReader.h:239:22: [31mstyle:[39m The function 'getNTel' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int getNTel()
                     ^
[1minc/VVirtualDataReader.h:126:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getNTel() = 0;
                                            ^
[1minc/VPEReader.h:239:22: [2mnote:[0m Function in derived class
        unsigned int getNTel()
                     ^
[1minc/VPEReader.h:243:22: [31mstyle:[39m The function 'getNTelLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int getNTelLocalTrigger()
                     ^
[1minc/VVirtualDataReader.h:354:44: [2mnote:[0m Virtual function in base class
        virtual unsigned int               getNTelLocalTrigger()
                                           ^
[1minc/VPEReader.h:243:22: [2mnote:[0m Function in derived class
        unsigned int getNTelLocalTrigger()
                     ^
[1minc/VPEReader.h:247:22: [31mstyle:[39m The function 'getRunNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint32_t     getRunNumber()
                     ^
[1minc/VVirtualDataReader.h:98:45: [2mnote:[0m Virtual function in base class
        virtual uint32_t                    getRunNumber() = 0;
                                            ^
[1minc/VPEReader.h:247:22: [2mnote:[0m Function in derived class
        uint32_t     getRunNumber()
                     ^
[1minc/VPEReader.h:251:29: [31mstyle:[39m The function 'getSamplesVec' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< uint8_t >   getSamplesVec()
                            ^
[1minc/VVirtualDataReader.h:160:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< uint8_t >      getSamplesVec() = 0;
                                            ^
[1minc/VPEReader.h:251:29: [2mnote:[0m Function in derived class
        vector< uint8_t >   getSamplesVec()
                            ^
[1minc/VPEReader.h:259:19: [31mstyle:[39m The function 'getSourceFileName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        string    getSourceFileName()
                  ^
[1minc/VVirtualDataReader.h:64:45: [2mnote:[0m Virtual function in base class
        virtual string                      getSourceFileName()
                                            ^
[1minc/VPEReader.h:259:19: [2mnote:[0m Function in derived class
        string    getSourceFileName()
                  ^
[1minc/VPEReader.h:263:27: [31mstyle:[39m The function 'getTelAzimuth' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< double >  getTelAzimuth();
                          ^
[1minc/VVirtualDataReader.h:207:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< double >       getTelAzimuth()
                                            ^
[1minc/VPEReader.h:263:27: [2mnote:[0m Function in derived class
        vector< double >  getTelAzimuth();
                          ^
[1minc/VPEReader.h:264:27: [31mstyle:[39m The function 'getTelElevation' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< double >  getTelElevation();
                          ^
[1minc/VVirtualDataReader.h:203:45: [2mnote:[0m Virtual function in base class
        virtual std::vector< double >       getTelElevation()
                                            ^
[1minc/VPEReader.h:264:27: [2mnote:[0m Function in derived class
        vector< double >  getTelElevation();
                          ^
[1minc/VPEReader.h:265:22: [31mstyle:[39m The function 'getTelescopeID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int getTelescopeID()
                     ^
[1minc/VVirtualDataReader.h:68:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getTelescopeID()
                                            ^
[1minc/VPEReader.h:265:22: [2mnote:[0m Function in derived class
        unsigned int getTelescopeID()
                     ^
[1minc/VPEReader.h:269:39: [31mstyle:[39m The function 'getTracePulseTiming' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< valarray< double > >& getTracePulseTiming( unsigned int iNChannel = 99999 )
                                      ^
[1minc/VVirtualDataReader.h:408:52: [2mnote:[0m Virtual function in base class
        virtual std::vector< valarray< double > >& getTracePulseTiming( unsigned int iNChannel = 99999 )
                                                   ^
[1minc/VPEReader.h:269:39: [2mnote:[0m Function in derived class
        vector< valarray< double > >& getTracePulseTiming( unsigned int iNChannel = 99999 )
                                      ^
[1minc/VPEReader.h:273:19: [31mstyle:[39m The function 'hasArrayTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      hasArrayTrigger()
                  ^
[1minc/VVirtualDataReader.h:349:44: [2mnote:[0m Virtual function in base class
        virtual bool                       hasArrayTrigger()
                                           ^
[1minc/VPEReader.h:273:19: [2mnote:[0m Function in derived class
        bool      hasArrayTrigger()
                  ^
[1minc/VPEReader.h:277:19: [31mstyle:[39m The function 'hasFADCTrace' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      hasFADCTrace()
                  ^
[1minc/VVirtualDataReader.h:327:22: [2mnote:[0m Virtual function in base class
        virtual bool hasFADCTrace()
                     ^
[1minc/VPEReader.h:277:19: [2mnote:[0m Function in derived class
        bool      hasFADCTrace()
                  ^
[1minc/VPEReader.h:281:19: [31mstyle:[39m The function 'hasLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      hasLocalTrigger( unsigned int iTel )
                  ^
[1minc/VVirtualDataReader.h:362:44: [2mnote:[0m Virtual function in base class
        virtual bool                       hasLocalTrigger( unsigned int iTel )
                                           ^
[1minc/VPEReader.h:281:19: [2mnote:[0m Function in derived class
        bool      hasLocalTrigger( unsigned int iTel )
                  ^
[1minc/VPEReader.h:292:19: [31mstyle:[39m The function 'isMC' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      isMC()
                  ^
[1minc/VVirtualDataReader.h:214:44: [2mnote:[0m Virtual function in base class
        virtual bool                       isMC() //!< is data MC?
                                           ^
[1minc/VPEReader.h:292:19: [2mnote:[0m Function in derived class
        bool      isMC()
                  ^
[1minc/VPEReader.h:296:19: [31mstyle:[39m The function 'selectHitChan' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void      selectHitChan( uint32_t hit )
                  ^
[1minc/VVirtualDataReader.h:170:45: [2mnote:[0m Virtual function in base class
        virtual void                        selectHitChan( uint32_t ) = 0;
                                            ^
[1minc/VPEReader.h:296:19: [2mnote:[0m Function in derived class
        void      selectHitChan( uint32_t hit )
                  ^
[1minc/VPEReader.h:300:19: [31mstyle:[39m The function 'setTelescopeID' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      setTelescopeID( unsigned int );
                  ^
[1minc/VVirtualDataReader.h:81:45: [2mnote:[0m Virtual function in base class
        virtual bool                        setTelescopeID( unsigned int a )
                                            ^
[1minc/VPEReader.h:300:19: [2mnote:[0m Function in derived class
        bool      setTelescopeID( unsigned int );
                  ^
[1minc/VPEReader.h:302:19: [31mstyle:[39m The function 'setTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void      setTrigger( vector<bool> iImage, vector<bool> iBorder );
                  ^
[1minc/VVirtualDataReader.h:213:44: [2mnote:[0m Virtual function in base class
        virtual void                       setTrigger( vector<bool> iImage, vector<bool> iBorder ) {}
                                           ^
[1minc/VPEReader.h:302:19: [2mnote:[0m Function in derived class
        void      setTrigger( vector<bool> iImage, vector<bool> iBorder );
                  ^
[1minc/VPEReader.h:303:19: [31mstyle:[39m The function 'wasLossyCompressed' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool      wasLossyCompressed()
                  ^
[1minc/VVirtualDataReader.h:183:45: [2mnote:[0m Virtual function in base class
        virtual bool                        wasLossyCompressed() = 0;
                                            ^
[1minc/VPEReader.h:303:19: [2mnote:[0m Function in derived class
        bool      wasLossyCompressed()
                  ^
[1minc/VPEReader.h:308:31: [31mstyle:[39m The function 'getMonteCarloHeader' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        VMonteCarloRunHeader* getMonteCarloHeader()
                              ^
[1minc/VVirtualDataReader.h:123:45: [2mnote:[0m Virtual function in base class
        virtual VMonteCarloRunHeader*       getMonteCarloHeader() = 0;
                                            ^
[1minc/VPEReader.h:308:31: [2mnote:[0m Function in derived class
        VMonteCarloRunHeader* getMonteCarloHeader()
                              ^
[1minc/VPEReader.h:312:14: [31mstyle:[39m The function 'setPerformFADCAnalysis' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void setPerformFADCAnalysis( unsigned int iTel, bool iB )
             ^
[1minc/VVirtualDataReader.h:417:22: [2mnote:[0m Virtual function in base class
        virtual void setPerformFADCAnalysis( unsigned int iTel, bool iB )
                     ^
[1minc/VPEReader.h:312:14: [2mnote:[0m Function in derived class
        void setPerformFADCAnalysis( unsigned int iTel, bool iB )
             ^
[1minc/VVirtualDataReader.h:175:81: [31mperformance:[39m Function parameter 'iT' should be passed by const reference. [passedByValue][0m
        void                                setTeltoAna( vector< unsigned int > iT )
                                                                                ^
[1minc/VCalibrationData.h:339:46: [31mperformance:[39m Function parameter 'file' should be passed by const reference. [passedByValue][0m
        bool  setLowGainPedestalFile( string file )
                                             ^
[1minc/VCameraRead.h:367:51: [31mperformance:[39m Function parameter 'iDir' should be passed by const reference. [passedByValue][0m
        void                 setConfigDir( string iDir )
                                                  ^
[1minc/VCameraRead.h:376:81: [31mperformance:[39m Function parameter 'm' should be passed by const reference. [passedByValue][0m
        void                 setTelID_matrix( map< unsigned int, unsigned int > m )
                                                                                ^
[1minc/VGrIsuReader.h:320:65: [31mperformance:[39m Function parameter 'i_sum' should be passed by const reference. [passedByValue][0m
        void                        setSumWindow( vector< int > i_sum )
                                                                ^
[1minc/VBaseRawDataReader.h:353:57: [31mperformance:[39m Function parameter 'i_nChannels' should be passed by const reference. [passedByValue][0m
        void setDefaultMaxNChannels( vector< uint16_t > i_nChannels )
                                                        ^
[1minc/VEvndispData.h:1387:52: [31mperformance:[39m Function parameter 'iEst' should be passed by const reference. [passedByValue][0m
        void                setLLEst( vector<bool> iEst )
                                                   ^
[1minc/VVirtualDataReader.h:419:16: [31mstyle:[39m Variable 'iB' is assigned a value that is never used. [unreadVariable][0m
            iB = false;
               ^
[1minc/VPEReader.h:314:16: [31mstyle:[39m Variable 'iB' is assigned a value that is never used. [unreadVariable][0m
            iB = false;
               ^
[1minc/VAtmosphereSoundingData.h:127:40: [31mperformance:[39m Function parameter 'which' should be passed by const reference. [passedByValue][0m
        TGraphErrors* getGraph( string which )
                                       ^
[1minc/VAtmosphereSoundings.h:127:9: [31mstyle:[39m Class 'VAtmosphereSoundings' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VAtmosphereSoundings( string iRootFile, unsigned int npoints_min = 0 );
        ^
[1minc/VAtmosphereSoundings.h:263:41: [31mperformance:[39m Function parameter 'heights' should be passed by const reference. [passedByValue][0m
        void setHeights( vector<double> heights )
                                        ^
[1minc/VBFDataReader.h:78:13: [31mstyle:[39m Assignment of function parameter has no effect outside the function. [uselessAssignmentArg][0m
            iB = false;
            ^
[1minc/VBFDataReader.h:41:22: [31mstyle:[39m The function 'getNTel' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int getNTel();
                     ^
[1minc/VVirtualDataReader.h:126:45: [2mnote:[0m Virtual function in base class
        virtual unsigned int                getNTel() = 0;
                                            ^
[1minc/VBFDataReader.h:41:22: [2mnote:[0m Function in derived class
        unsigned int getNTel();
                     ^
[1minc/VBFDataReader.h:43:14: [31mstyle:[39m The function 'hasAT' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool hasAT()
             ^
[1minc/VBaseRawDataReader.h:88:37: [2mnote:[0m Virtual function in base class
        virtual bool                hasAT()
                                    ^
[1minc/VBFDataReader.h:43:14: [2mnote:[0m Function in derived class
        bool hasAT()
             ^
[1minc/VBFDataReader.h:48:17: [31mstyle:[39m The function 'getATEventType' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint8_t getATEventType()
                ^
[1minc/VVirtualDataReader.h:97:45: [2mnote:[0m Virtual function in base class
        virtual uint8_t                     getATEventType() = 0;
                                            ^
[1minc/VBFDataReader.h:48:17: [2mnote:[0m Function in derived class
        uint8_t getATEventType()
                ^
[1minc/VBFDataReader.h:60:18: [31mstyle:[39m The function 'getATGPSYear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t getATGPSYear();
                 ^
[1minc/VBaseRawDataReader.h:215:37: [2mnote:[0m Virtual function in base class
        virtual uint16_t            getATGPSYear()
                                    ^
[1minc/VBFDataReader.h:60:18: [2mnote:[0m Function in derived class
        uint16_t getATGPSYear();
                 ^
[1minc/VBFDataReader.h:66:27: [31mstyle:[39m The function 'getArrayTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        VArrayTrigger*    getArrayTrigger()
                          ^
[1minc/VVirtualDataReader.h:192:45: [2mnote:[0m Virtual function in base class
        virtual VArrayTrigger*              getArrayTrigger()
                                            ^
[1minc/VBFDataReader.h:66:27: [2mnote:[0m Function in derived class
        VArrayTrigger*    getArrayTrigger()
                          ^
[1minc/VBFDataReader.h:70:27: [31mstyle:[39m The function 'getLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        vector< bool >&   getLocalTrigger();
                          ^
[1minc/VVirtualDataReader.h:358:44: [2mnote:[0m Virtual function in base class
        virtual std::vector< bool >&       getLocalTrigger()
                                           ^
[1minc/VBFDataReader.h:70:27: [2mnote:[0m Function in derived class
        vector< bool >&   getLocalTrigger();
                          ^
[1minc/VBFDataReader.h:71:27: [31mstyle:[39m The function 'getNextEvent' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool              getNextEvent();
                          ^
[1minc/VBaseRawDataReader.h:255:37: [2mnote:[0m Virtual function in base class
        virtual bool                getNextEvent() = 0;
                                    ^
[1minc/VBFDataReader.h:71:27: [2mnote:[0m Function in derived class
        bool              getNextEvent();
                          ^
[1minc/VBFDataReader.h:72:27: [31mstyle:[39m The function 'getNTelLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        unsigned int      getNTelLocalTrigger();
                          ^
[1minc/VVirtualDataReader.h:354:44: [2mnote:[0m Virtual function in base class
        virtual unsigned int               getNTelLocalTrigger()
                                           ^
[1minc/VBFDataReader.h:72:27: [2mnote:[0m Function in derived class
        unsigned int      getNTelLocalTrigger();
                          ^
[1minc/VBFDataReader.h:73:27: [31mstyle:[39m The function 'getNumSamples' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        uint16_t          getNumSamples();
                          ^
[1minc/VVirtualDataReader.h:125:45: [2mnote:[0m Virtual function in base class
        virtual uint16_t                    getNumSamples() = 0;
                                            ^
[1minc/VBFDataReader.h:73:27: [2mnote:[0m Function in derived class
        uint16_t          getNumSamples();
                          ^
[1minc/VBFDataReader.h:74:27: [31mstyle:[39m The function 'hasArrayTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool              hasArrayTrigger();
                          ^
[1minc/VVirtualDataReader.h:349:44: [2mnote:[0m Virtual function in base class
        virtual bool                       hasArrayTrigger()
                                           ^
[1minc/VBFDataReader.h:74:27: [2mnote:[0m Function in derived class
        bool              hasArrayTrigger();
                          ^
[1minc/VBFDataReader.h:75:27: [31mstyle:[39m The function 'hasLocalTrigger' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool              hasLocalTrigger( unsigned int iTel );
                          ^
[1minc/VVirtualDataReader.h:362:44: [2mnote:[0m Virtual function in base class
        virtual bool                       hasLocalTrigger( unsigned int iTel )
                                           ^
[1minc/VBFDataReader.h:75:27: [2mnote:[0m Function in derived class
        bool              hasLocalTrigger( unsigned int iTel );
                          ^
[1minc/VBFDataReader.h:76:27: [31mstyle:[39m The function 'setPerformFADCAnalysis' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        void              setPerformFADCAnalysis( unsigned int iTel, bool iB )
                          ^
[1minc/VVirtualDataReader.h:417:22: [2mnote:[0m Virtual function in base class
        virtual void setPerformFADCAnalysis( unsigned int iTel, bool iB )
                     ^
[1minc/VBFDataReader.h:76:27: [2mnote:[0m Function in derived class
        void              setPerformFADCAnalysis( unsigned int iTel, bool iB )
                          ^
[1minc/VBFDataReader.h:78:16: [31mstyle:[39m Variable 'iB' is assigned a value that is never used. [unreadVariable][0m
            iB = false;
               ^
[1minc/VCTARequirements.h:84:53: [31mperformance:[39m Function parameter 'iR' should be passed by const reference. [passedByValue][0m
        void    setPlotSubSystemRequirement( string iR = "" )
                                                    ^
[1minc/VImageBaseAnalyzer.h:37:9: [31mwarning:[39m Member variable 'VImageBaseAnalyzer::fRaw' is not initialized in the constructor. [uninitMemberVar][0m
        VImageBaseAnalyzer() {}
        ^
[1minc/VImageBaseAnalyzer.h:20:22: [31mwarning:[39m The class 'VImageBaseAnalyzer' defines member variable with name 'fCalibrated' also defined in its parent class 'VEvndispData'. [duplInheritedMember][0m
        vector<bool> fCalibrated;                 //!  true = calibration is done
                     ^
[1minc/VEvndispData.h:108:31: [2mnote:[0m Parent variable 'VEvndispData::fCalibrated'
        static vector< bool > fCalibrated;        //!< this telescope is calibrated
                              ^
[1minc/VImageBaseAnalyzer.h:20:22: [2mnote:[0m Derived variable 'VImageBaseAnalyzer::fCalibrated'
        vector<bool> fCalibrated;                 //!  true = calibration is done
                     ^
[1minc/VPedestalCalculator.h:25:14: [31mwarning:[39m The class 'VPedestalCalculator' defines member variable with name 'fDebug' also defined in its parent class 'VEvndispData'. [duplInheritedMember][0m
        bool fDebug;
             ^
[1minc/VEvndispData.h:46:21: [2mnote:[0m Parent variable 'VEvndispData::fDebug'
        static bool fDebug;
                    ^
[1minc/VPedestalCalculator.h:25:14: [2mnote:[0m Derived variable 'VPedestalCalculator::fDebug'
        bool fDebug;
             ^
[1minc/VDL2Writer.h:122:9: [31mstyle:[39m Class 'VDL2Writer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VDL2Writer( string iConfigFile );
        ^
[1minc/VDSTTree.h:31:11: [31mstyle:[39m struct member 'VDSTTelescopeConfiguration::FOV' is never used. [unusedStructMember][0m
    float FOV;
          ^
[1minc/VDSTTree.h:32:11: [31mstyle:[39m struct member 'VDSTTelescopeConfiguration::DynamicRange' is never used. [unusedStructMember][0m
    float DynamicRange;
          ^
[1minc/VDSTTree.h:33:11: [31mstyle:[39m struct member 'VDSTTelescopeConfiguration::RAWsum' is never used. [unusedStructMember][0m
    bool  RAWsum;
          ^
[1minc/VDispTableAnalyzer.h:21:11: [31mstyle:[39m struct member 'sDispTableEventData::x' is never used. [unusedStructMember][0m
    float x;
          ^
[1minc/VDispTableAnalyzer.h:22:11: [31mstyle:[39m struct member 'sDispTableEventData::y' is never used. [unusedStructMember][0m
    float y;
          ^
[1minc/VDispTableAnalyzer.h:23:11: [31mstyle:[39m struct member 'sDispTableEventData::cosphi' is never used. [unusedStructMember][0m
    float cosphi;
          ^
[1minc/VDispTableAnalyzer.h:24:11: [31mstyle:[39m struct member 'sDispTableEventData::sinphi' is never used. [unusedStructMember][0m
    float sinphi;
          ^
[1minc/VDispTableAnalyzer.h:25:11: [31mstyle:[39m struct member 'sDispTableEventData::disp' is never used. [unusedStructMember][0m
    float disp;
          ^
[1minc/VDisplay.h:61:9: [31merror:[39m There is an unknown macro here somewhere. Configuration is required. If RQ_OBJECT is a macro then please configure it. [unknownMacro][0m
        RQ_OBJECT( "VDisplay" )
        ^
[1minc/VEnergySpectrum.h:39:15: [31mwarning:[39m The class 'VEnergySpectrum' defines member variable with name 'bZombie' also defined in its parent class 'VAnalysisUtilities'. [duplInheritedMember][0m
        bool  bZombie;                            //! status of files
              ^
[1minc/VAnalysisUtilities.h:36:14: [2mnote:[0m Parent variable 'VAnalysisUtilities::bZombie'
        bool bZombie;
             ^
[1minc/VEnergySpectrum.h:39:15: [2mnote:[0m Derived variable 'VEnergySpectrum::bZombie'
        bool  bZombie;                            //! status of files
              ^
[1minc/VEnergyThreshold.h:89:9: [31mstyle:[39m Class 'VEnergyThreshold' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VEnergyThreshold( string ioutfilename, string iFileOption = "UPDATE" );
        ^
[1minc/VEnergyThreshold.h:90:9: [31mstyle:[39m Class 'VEnergyThreshold' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VEnergyThreshold( double iEthFixed, string iInFile = "" );
        ^
[1minc/VEnergySpectrum.h:152:9: [31mstyle:[39m Class 'VEnergySpectrum' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VEnergySpectrum( string ifile, string iname = "E", int irun = -1, bool iSourceTypeIsAscii = false );
        ^
[1minc/VEnergySpectrum.h:225:51: [31mperformance:[39m Function parameter 'g' should be passed by const reference. [passedByValue][0m
        void setReBinningGroupings( vector< int > g )
                                                  ^
[1minc/VEnergySpectrum.h:236:41: [31mperformance:[39m Function parameter 'a' should be passed by const reference. [passedByValue][0m
        void setEnergyThreshold( string a )
                                        ^
[1minc/VEnergySpectrumfromLiterature.h:33:22: [31mstyle:[39m struct member 'sData::Type' is never used. [unusedStructMember][0m
    unsigned int     Type;
                     ^
[1minc/VEnergySpectrumfromLiterature.h:36:22: [31mstyle:[39m struct member 'sData::EnergyRange_min' is never used. [unusedStructMember][0m
    double           EnergyRange_min;             // TeV
                     ^
[1minc/VEnergySpectrumfromLiterature.h:37:22: [31mstyle:[39m struct member 'sData::EnergyRange_max' is never used. [unusedStructMember][0m
    double           EnergyRange_max;             // TeV
                     ^
[1minc/VEnergySpectrumfromLiterature.h:47:22: [31mstyle:[39m struct member 'sEnergyFun::NumParameters' is never used. [unusedStructMember][0m
    unsigned int     NumParameters;
                     ^
[1minc/VImageAnalyzer.h:29:14: [31mwarning:[39m The class 'VImageAnalyzer' defines member variable with name 'fDebug' also defined in its parent class 'VEvndispData'. [duplInheritedMember][0m
        bool fDebug;
             ^
[1minc/VEvndispData.h:46:21: [2mnote:[0m Parent variable 'VEvndispData::fDebug'
        static bool fDebug;
                    ^
[1minc/VImageAnalyzer.h:29:14: [2mnote:[0m Derived variable 'VImageAnalyzer::fDebug'
        bool fDebug;
             ^
[1minc/VRawDataReader.h:27:34: [31mwarning:[39m The class 'VRawDataReader' defines member variable with name 'fEvent' also defined in its parent class 'VBaseRawDataReader'. [duplInheritedMember][0m
        vector< VRawEventData* > fEvent;
                                 ^
[1minc/VBaseRawDataReader.h:28:27: [2mnote:[0m Parent variable 'VBaseRawDataReader::fEvent'
        vector< VEvent* > fEvent;
                          ^
[1minc/VRawDataReader.h:27:34: [2mnote:[0m Derived variable 'VRawDataReader::fEvent'
        vector< VRawEventData* > fEvent;
                                 ^
[1minc/VHoughTransform.h:31:9: [31mstyle:[39m Class 'VHoughTransform' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VHoughTransform( VDetectorGeometry* fDetectorGeo ); //Initializes the hough transform class and data structures
        ^
[1minc/VImageParameterFitter.h:105:6: [31mstyle:[39m Class 'VImageParameterFitter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
     VImageParameterFitter( VEvndispData* iData,
     ^
[1minc/VEventLoop.h:83:9: [31mstyle:[39m Class 'VEventLoop' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VEventLoop( VEvndispRunParameter* );
        ^
[1minc/VRawDataReader.h:36:37: [31mstyle:[39m The function 'getNextEvent' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride][0m
        bool                        getNextEvent();
                                    ^
[1minc/VBaseRawDataReader.h:255:37: [2mnote:[0m Virtual function in base class
        virtual bool                getNextEvent() = 0;
                                    ^
[1minc/VRawDataReader.h:36:37: [2mnote:[0m Function in derived class
        bool                        getNextEvent();
                                    ^
[1minc/VFluxCalculation.h:101:9: [31mstyle:[39m Class 'VFluxCalculation' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VFluxCalculation( string iDataFile,
        ^
[1minc/VFluxCalculation.h:106:9: [31mstyle:[39m Class 'VFluxCalculation' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VFluxCalculation( vector< string > iFile_vector,
        ^
[1minc/VInstrumentResponseFunctionReader.h:36:16: [31mwarning:[39m The class 'VInstrumentResponseFunctionReader' defines member variable with name 'fDebug' also defined in its parent class 'VAnalysisUtilities'. [duplInheritedMember][0m
        bool   fDebug;
               ^
[1minc/VAnalysisUtilities.h:35:22: [2mnote:[0m Parent variable 'VAnalysisUtilities::fDebug'
        unsigned int fDebug;
                     ^
[1minc/VInstrumentResponseFunctionReader.h:36:16: [2mnote:[0m Derived variable 'VInstrumentResponseFunctionReader::fDebug'
        bool   fDebug;
               ^
[1minc/VInstrumentResponseFunctionReader.h:202:36: [31mperformance:[39m Function parameter 'iPlotOption' should be passed by const reference. [passedByValue][0m
        void setPlotOption( string iPlotOption = "pl" )
                                   ^
[1minc/VLibNovaSunAndMoon.h:27:9: [31mstyle:[39m Class 'VLibNovaSunAndMoon' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VLibNovaSunAndMoon( double MJD );
        ^
[1minc/VLightCurveAnalyzer.h:28:9: [31mstyle:[39m Class 'VLightCurveAnalyzer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VLightCurveAnalyzer( vector< VFluxDataPoint > iDataVector );
        ^
[1minc/VLightCurvePlotter.h:67:9: [31mstyle:[39m Class 'VLightCurvePlotter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VLightCurvePlotter( vector< VFluxDataPoint > iDataVector );
        ^
[1minc/VLightCurveWriter.h:31:9: [31mstyle:[39m Class 'VLightCurveWriter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VLightCurveWriter( vector< VFluxDataPoint > iDataVector );
        ^
[1minc/VLikelihoodFitter.h:55:2: [31mstyle:[39m Class 'VLikelihoodFitter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
 VLikelihoodFitter(string filename) : VEnergySpectrum(filename)
 ^
[1minc/VLikelihoodFitter.h:55:27: [31mperformance:[39m Function parameter 'filename' should be passed by const reference. [passedByValue][0m
 VLikelihoodFitter(string filename) : VEnergySpectrum(filename)
                          ^
[1minc/VLombScargle.h:57:9: [31mstyle:[39m Class 'VLombScargle' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VLombScargle( vector< VFluxDataPoint > iDataVector );
        ^
[1minc/VLombScargle.h:67:57: [31mperformance:[39m Function parameter 'iDataVector' should be passed by const reference. [passedByValue][0m
        void    setDataVector( vector< VFluxDataPoint > iDataVector )
                                                        ^
[1minc/VLowGainCalibrator.h:169:44: [31mperformance:[39m Function parameter 'channels' should be passed by const reference. [passedByValue][0m
        void setDebugChannels( vector<int> channels )
                                           ^
[1minc/VMonteCarloRateCalculator.h:40:9: [31mstyle:[39m Class 'VMonteCarloRateCalculator' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VMonteCarloRateCalculator( string iFile );
        ^
[1minc/VPlotAnasumHistograms.h:50:16: [31mwarning:[39m The class 'VPlotAnasumHistograms' defines member variable with name 'fAnasumDataFile' also defined in its parent class 'VAnalysisUtilities'. [duplInheritedMember][0m
        string fAnasumDataFile;    //! name of input anasum file
               ^
[1minc/VAnalysisUtilities.h:49:16: [2mnote:[0m Parent variable 'VAnalysisUtilities::fAnasumDataFile'
        TFile* fAnasumDataFile;                                                //!
               ^
[1minc/VPlotAnasumHistograms.h:50:16: [2mnote:[0m Derived variable 'VPlotAnasumHistograms::fAnasumDataFile'
        string fAnasumDataFile;    //! name of input anasum file
               ^
[1minc/VPlotAnasumHistograms.h:52:16: [31mwarning:[39m The class 'VPlotAnasumHistograms' defines member variable with name 'fDebug' also defined in its parent class 'VAnalysisUtilities'. [duplInheritedMember][0m
        bool   fDebug;
               ^
[1minc/VAnalysisUtilities.h:35:22: [2mnote:[0m Parent variable 'VAnalysisUtilities::fDebug'
        unsigned int fDebug;
                     ^
[1minc/VPlotAnasumHistograms.h:52:16: [2mnote:[0m Derived variable 'VPlotAnasumHistograms::fDebug'
        bool   fDebug;
               ^
[1minc/VPlotAnasumHistograms.h:61:16: [31mwarning:[39m The class 'VPlotAnasumHistograms' defines member variable with name 'fSkyMapCentreDecJ2000' also defined in its parent class 'VAnalysisUtilities'. [duplInheritedMember][0m
        double fSkyMapCentreDecJ2000;
               ^
[1minc/VAnalysisUtilities.h:39:16: [2mnote:[0m Parent variable 'VAnalysisUtilities::fSkyMapCentreDecJ2000'
        double fSkyMapCentreDecJ2000;
               ^
[1minc/VPlotAnasumHistograms.h:61:16: [2mnote:[0m Derived variable 'VPlotAnasumHistograms::fSkyMapCentreDecJ2000'
        double fSkyMapCentreDecJ2000;
               ^
[1minc/VPlotAnasumHistograms.h:62:16: [31mwarning:[39m The class 'VPlotAnasumHistograms' defines member variable with name 'fSkyMapCentreRAJ2000' also defined in its parent class 'VAnalysisUtilities'. [duplInheritedMember][0m
        double fSkyMapCentreRAJ2000;
               ^
[1minc/VAnalysisUtilities.h:40:16: [2mnote:[0m Parent variable 'VAnalysisUtilities::fSkyMapCentreRAJ2000'
        double fSkyMapCentreRAJ2000;
               ^
[1minc/VPlotAnasumHistograms.h:62:16: [2mnote:[0m Derived variable 'VPlotAnasumHistograms::fSkyMapCentreRAJ2000'
        double fSkyMapCentreRAJ2000;
               ^
[1minc/VPlotAnasumHistograms.h:63:16: [31mwarning:[39m The class 'VPlotAnasumHistograms' defines member variable with name 'fTargetShiftWest' also defined in its parent class 'VAnalysisUtilities'. [duplInheritedMember][0m
        double fTargetShiftWest;
               ^
[1minc/VAnalysisUtilities.h:41:16: [2mnote:[0m Parent variable 'VAnalysisUtilities::fTargetShiftWest'
        double fTargetShiftWest;
               ^
[1minc/VPlotAnasumHistograms.h:63:16: [2mnote:[0m Derived variable 'VPlotAnasumHistograms::fTargetShiftWest'
        double fTargetShiftWest;
               ^
[1minc/VPlotAnasumHistograms.h:64:16: [31mwarning:[39m The class 'VPlotAnasumHistograms' defines member variable with name 'fTargetShiftNorth' also defined in its parent class 'VAnalysisUtilities'. [duplInheritedMember][0m
        double fTargetShiftNorth;
               ^
[1minc/VAnalysisUtilities.h:42:16: [2mnote:[0m Parent variable 'VAnalysisUtilities::fTargetShiftNorth'
        double fTargetShiftNorth;
               ^
[1minc/VPlotAnasumHistograms.h:64:16: [2mnote:[0m Derived variable 'VPlotAnasumHistograms::fTargetShiftNorth'
        double fTargetShiftNorth;
               ^
[1minc/VPlotAnasumHistograms.h:87:9: [31mstyle:[39m Class 'VPlotAnasumHistograms' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VPlotAnasumHistograms( string ifile, int ion = -1 );
        ^
[1minc/VPlotAnasumHistograms.h:41:12: [31mstyle:[39m struct member 'sSource::fX' is never used. [unusedStructMember][0m
    double fX;
           ^
[1minc/VPlotAnasumHistograms.h:42:12: [31mstyle:[39m struct member 'sSource::fY' is never used. [unusedStructMember][0m
    double fY;
           ^
[1minc/VPlotCompareDataWithMC.h:107:35: [31mperformance:[39m Function parameter 'iP' should be passed by const reference. [passedByValue][0m
        void setPrintName( string iP = "" )
                                  ^
[1minc/VPlotInstrumentResponseFunction.h:117:50: [31mperformance:[39m Function parameter 'iMatrixType' should be passed by const reference. [passedByValue][0m
                                          string iMatrixType = "default",
                                                 ^
[1minc/VPlotOptimalCut.h:28:9: [31mstyle:[39m Class 'VPlotOptimalCut' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VPlotOptimalCut( string iFile );
        ^
[1minc/VPlotRadialAcceptance.h:81:34: [31mperformance:[39m Function parameter 'iName' should be passed by const reference. [passedByValue][0m
        void     setName( string iName )
                                 ^
[1minc/VPlotTMVAParameters.h:38:37: [31mperformance:[39m Function parameter 'iDataDirectory' should be passed by const reference. [passedByValue][0m
        void setDirectories( string iDataDirectory )
                                    ^
[1minc/VSensitivityCalculator.h:301:44: [31mperformance:[39m Function parameter 'iN' should be passed by const reference. [passedByValue][0m
        void     setPlotCanvasName( string iN = "cSensitivity", string iT = "sensitivity vs energy" )
                                           ^
[1minc/VSensitivityCalculator.h:301:72: [31mperformance:[39m Function parameter 'iT' should be passed by const reference. [passedByValue][0m
        void     setPlotCanvasName( string iN = "cSensitivity", string iT = "sensitivity vs energy" )
                                                                       ^
[1minc/VSensitivityCalculator.h:306:62: [31mperformance:[39m Function parameter 'iF' should be passed by const reference. [passedByValue][0m
        void     setPlotCrabFluxLineValues( vector< double > iF )
                                                             ^
[1minc/VSensitivityCalculator.h:310:39: [31mperformance:[39m Function parameter 'iName' should be passed by const reference. [passedByValue][0m
        void     setPlotDebug( string iName )
                                      ^
[1minc/VSensitivityCalculator.h:364:53: [31mperformance:[39m Function parameter 'iFile' should be passed by const reference. [passedByValue][0m
        void     setWriteParticleNumberFile( string iFile )
                                                    ^
[1minc/VPlotVERITASPerformance.h:90:39: [31mperformance:[39m Function parameter 'iVersionText' should be passed by const reference. [passedByValue][0m
        void setVersionNumber( string iVersionText )
                                      ^
[1minc/VPlotVERITASPerformance.h:95:35: [31mperformance:[39m Function parameter 'iPrintName' should be passed by const reference. [passedByValue][0m
        void setPrintName( string iPrintName )
                                  ^
[1minc/VPlotWPPhysSensitivity.h:166:47: [31mperformance:[39m Function parameter 'iCurrentInstrumentRootFile' should be passed by const reference. [passedByValue][0m
        void setCurrentInstrumentFile( string iCurrentInstrumentRootFile = "CurrentInstruments.root" )
                                              ^
[1minc/VPlotWPPhysSensitivity.h:171:63: [31mperformance:[39m Function parameter 'iV' should be passed by const reference. [passedByValue][0m
        void setCurrentInstrumentPlotVector( vector< string > iV,
                                                              ^
[1minc/VPlotWPPhysSensitivity.h:177:41: [31mperformance:[39m Function parameter 'iFile' should be passed by const reference. [passedByValue][0m
        void setCrabSpectraFile( string iFile = "$CTA_EVNDISP_AUX_DIR/AstroData/TeV_data/EnergySpectrum_literatureValues_CrabNebula.dat",
                                        ^
[1minc/VSensitivityCalculator.h:49:12: [31mstyle:[39m struct member 'sSensitivityData::fSignal' is never used. [unusedStructMember][0m
    double fSignal;
           ^
[1minc/VSensitivityCalculator.h:50:12: [31mstyle:[39m struct member 'sSensitivityData::fBackground' is never used. [unusedStructMember][0m
    double fBackground;
           ^
[1minc/VSensitivityCalculator.h:51:12: [31mstyle:[39m struct member 'sSensitivityData::fAlpha' is never used. [unusedStructMember][0m
    double fAlpha;
           ^
[1minc/VSourceGeometryFitter.h:52:16: [31mwarning:[39m The class 'VSourceGeometryFitter' defines member variable with name 'fDebug' also defined in its parent class 'VAnalysisUtilities'. [duplInheritedMember][0m
        bool   fDebug;
               ^
[1minc/VAnalysisUtilities.h:35:22: [2mnote:[0m Parent variable 'VAnalysisUtilities::fDebug'
        unsigned int fDebug;
                     ^
[1minc/VSourceGeometryFitter.h:52:16: [2mnote:[0m Derived variable 'VSourceGeometryFitter::fDebug'
        bool   fDebug;
               ^
[1minc/VSourceGeometryFitter.h:54:16: [31mwarning:[39m The class 'VSourceGeometryFitter' defines member variable with name 'fAnasumDataFile' also defined in its parent class 'VAnalysisUtilities'. [duplInheritedMember][0m
        string fAnasumDataFile;
               ^
[1minc/VAnalysisUtilities.h:49:16: [2mnote:[0m Parent variable 'VAnalysisUtilities::fAnasumDataFile'
        TFile* fAnasumDataFile;                                                //!
               ^
[1minc/VSourceGeometryFitter.h:54:16: [2mnote:[0m Derived variable 'VSourceGeometryFitter::fAnasumDataFile'
        string fAnasumDataFile;
               ^
[1minc/VSourceGeometryFitter.h:74:9: [31mstyle:[39m Class 'VSourceGeometryFitter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VSourceGeometryFitter( string iAnaSumDataFile, int irun = -1 );
        ^
[1minc/VSourceGeometryFitter.h:132:20: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
            double x = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:133:20: [31mstyle:[39m The scope of the variable 'y' can be reduced. [variableScope][0m
            double y = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:136:20: [31mstyle:[39m The scope of the variable 'fT' can be reduced. [variableScope][0m
            double fT = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:137:20: [31mstyle:[39m The scope of the variable 'fH' can be reduced. [variableScope][0m
            double fH = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:138:20: [31mstyle:[39m The scope of the variable 'fHErr' can be reduced. [variableScope][0m
            double fHErr = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:140:20: [31mstyle:[39m The scope of the variable 't2' can be reduced. [variableScope][0m
            double t2 = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:243:21: [31mstyle:[39m The scope of the variable 'sum' can be reduced. [variableScope][0m
            double  sum = 0.;
                    ^
[1minc/VSourceGeometryFitter.h:248:20: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
            double x = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:249:20: [31mstyle:[39m The scope of the variable 'y' can be reduced. [variableScope][0m
            double y = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:250:20: [31mstyle:[39m The scope of the variable 'n' can be reduced. [variableScope][0m
            double n = 0.;                                // measured sum in channel i
                   ^
[1minc/VSourceGeometryFitter.h:349:21: [31mstyle:[39m The scope of the variable 'sum' can be reduced. [variableScope][0m
            double  sum = 0.;
                    ^
[1minc/VSourceGeometryFitter.h:350:21: [31mstyle:[39m The scope of the variable 'sum1' can be reduced. [variableScope][0m
            double  sum1 = 0.; // central spot
                    ^
[1minc/VSourceGeometryFitter.h:351:21: [31mstyle:[39m The scope of the variable 'sum2' can be reduced. [variableScope][0m
            double  sum2 = 0.; // broad halo
                    ^
[1minc/VSourceGeometryFitter.h:358:20: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
            double x = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:359:20: [31mstyle:[39m The scope of the variable 'y' can be reduced. [variableScope][0m
            double y = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:360:20: [31mstyle:[39m The scope of the variable 'n' can be reduced. [variableScope][0m
            double n = 0.;                                // measured sum in channel i
                   ^
[1minc/VSourceGeometryFitter.h:470:20: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
            double x = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:471:20: [31mstyle:[39m The scope of the variable 'y' can be reduced. [variableScope][0m
            double y = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:474:20: [31mstyle:[39m The scope of the variable 'fT' can be reduced. [variableScope][0m
            double fT = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:475:20: [31mstyle:[39m The scope of the variable 'fH' can be reduced. [variableScope][0m
            double fH = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:476:20: [31mstyle:[39m The scope of the variable 'fHErr' can be reduced. [variableScope][0m
            double fHErr = 0;
                   ^
[1minc/VSourceGeometryFitter.h:478:20: [31mstyle:[39m The scope of the variable 't2' can be reduced. [variableScope][0m
            double t2 = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:682:21: [31mstyle:[39m The scope of the variable 'sum' can be reduced. [variableScope][0m
            double  sum = 0.;
                    ^
[1minc/VSourceGeometryFitter.h:687:20: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
            double x = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:688:20: [31mstyle:[39m The scope of the variable 'y' can be reduced. [variableScope][0m
            double y = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:689:20: [31mstyle:[39m The scope of the variable 'n' can be reduced. [variableScope][0m
            double n = 0.;                                // measured sum in channel i
                   ^
[1minc/VSourceGeometryFitter.h:787:21: [31mstyle:[39m The scope of the variable 'sum' can be reduced. [variableScope][0m
            double  sum = 0.;
                    ^
[1minc/VSourceGeometryFitter.h:797:20: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
            double x = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:798:20: [31mstyle:[39m The scope of the variable 'y' can be reduced. [variableScope][0m
            double y = 0.;
                   ^
[1minc/VSourceGeometryFitter.h:799:20: [31mstyle:[39m The scope of the variable 'n' can be reduced. [variableScope][0m
            double n = 0.;                                // measured sum in channel i
                   ^
[1minc/VSourceGeometryFitter.h:132:22: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
            double x = 0.;
                     ^
[1minc/VSourceGeometryFitter.h:248:22: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
            double x = 0.;
                     ^
[1minc/VSourceGeometryFitter.h:358:22: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
            double x = 0.;
                     ^
[1minc/VSourceGeometryFitter.h:470:22: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
            double x = 0.;
                     ^
[1minc/VSourceGeometryFitter.h:687:22: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
            double x = 0.;
                     ^
[1minc/VSourceGeometryFitter.h:797:22: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
            double x = 0.;
                     ^
[1minc/VSpectralEnergyDistribution.h:34:12: [31mstyle:[39m struct member 'sPhotoMetricBand::fEffectiveWavelength_micron' is never used. [unusedStructMember][0m
    double fEffectiveWavelength_micron;
           ^
[1minc/VSpectralEnergyDistribution.h:35:12: [31mstyle:[39m struct member 'sPhotoMetricBand::fF0_CIT_Jy' is never used. [unusedStructMember][0m
    double fF0_CIT_Jy;
           ^
[1minc/VSpectralEnergyDistribution.h:36:12: [31mstyle:[39m struct member 'sPhotoMetricBand::fF0_UKIRT_Jy' is never used. [unusedStructMember][0m
    double fF0_UKIRT_Jy;
           ^
[1minc/VSpectralEnergyDistribution.h:46:12: [31mstyle:[39m struct member 'sGalacticExtinction::fCorrection' is never used. [unusedStructMember][0m
    double fCorrection;
           ^
[1minc/VSpectralEnergyDistribution.h:56:12: [31mstyle:[39m struct member 'sPhotonFlux::MJD_min' is never used. [unusedStructMember][0m
    double MJD_min;
           ^
[1minc/VSpectralEnergyDistribution.h:57:12: [31mstyle:[39m struct member 'sPhotonFlux::MJD_max' is never used. [unusedStructMember][0m
    double MJD_max;
           ^
[1minc/VSpectralEnergyDistribution.h:67:9: [31mstyle:[39m struct member 'sPhotonFlux::Marker' is never used. [unusedStructMember][0m
    int Marker;
        ^
[1minc/VSpectralEnergyDistribution.h:68:9: [31mstyle:[39m struct member 'sPhotonFlux::Color' is never used. [unusedStructMember][0m
    int Color;
        ^
[1minc/VStereoMaps.h:23:9: [31mstyle:[39m struct member 'sRE_REGIONS::noff' is never used. [unusedStructMember][0m
    int noff;                                     //!< number of source regions
        ^
[1minc/VStereoReconstruction.h:85:35: [31mperformance:[39m Function parameter 'a' should be passed by const reference. [passedByValue][0m
        void      setName( string a = "VStereoReconstruction" )
                                  ^
[1minc/VTableLookupDataHandler.h:382:9: [31mstyle:[39m Class 'VTableLookupDataHandler' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VTableLookupDataHandler( bool iWrite, VTableLookupRunParameter* iT = 0 );
        ^
[1minc/VTableLookup.h:141:9: [31mstyle:[39m Class 'VTableLookup' has a constructor with 1 argument that is not explicit. [noExplicitConstructor][0m
        VTableLookup( VTableLookupRunParameter* iTLRunParameter );
        ^
[1minc/VWPPhysSensitivityFile.h:111:38: [31mperformance:[39m Function parameter 'iCrabSpectrum' should be passed by const reference. [passedByValue][0m
        void setCrabSpectrum( string iCrabSpectrum, unsigned int iID = 5 )
                                     ^
[1minc/VWPPhysSensitivityFile.h:116:43: [31mperformance:[39m Function parameter 'iCRSpectrum' should be passed by const reference. [passedByValue][0m
        void setCosmicRaySpectrum( string iCRSpectrum, unsigned iPID = 0, unsigned iEID = 2 )
                                          ^
[1minc/VWPPhysSensitivityFile.h:130:37: [31mperformance:[39m Function parameter 'iO' should be passed by const reference. [passedByValue][0m
        void setObservatory( string iO = "CTA" )
                                    ^
[1minc/VWPPhysSensitivityFile.h:27:11: [31mstyle:[39m struct member 'Angular_Resolution::fHisAngRes' is never used. [unusedStructMember][0m
    TH1F* fHisAngRes;
          ^
[1minc/VWPPhysSensitivityPlotsMaker.h:99:63: [31mperformance:[39m Function parameter 'iV' should be passed by const reference. [passedByValue][0m
        void setCurrentInstrumentPlotVector( vector< string > iV, bool iPlotLabels = false )
                                                              ^
[1minc/VWPPhysSensitivityPlotsMaker.h:113:49: [31mperformance:[39m Function parameter 'iStyle' should be passed by const reference. [passedByValue][0m
        void setPlotAllInOneCanvasStyle( string iStyle = "AllRatios" )
                                                ^
[1minc/VWPPhysSensitivityPlotsMaker.h:158:41: [31mperformance:[39m Function parameter 'iPrint' should be passed by const reference. [passedByValue][0m
        void setPrintingOptions( string iPrint = "" )
                                        ^
[1minc/VWPPhysSensitivityPlotsMaker.h:169:48: [31mperformance:[39m Function parameter 'iA' should be passed by const reference. [passedByValue][0m
        void setOffAxisAngle( vector< double > iA )
                                               ^
[1msrc/CData.C:13:21: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                    ^
[1msrc/CData.C:13:29: [31mstyle:[39m Variable 'nb' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                            ^
[1msrc/CData.C:22:16: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
        nbytes += nb;
               ^
[1msrc/CEffArea.C:39:21: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                    ^
[1msrc/CEffArea.C:39:29: [31mstyle:[39m Variable 'nb' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                            ^
[1msrc/CEffArea.C:48:16: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
        nbytes += nb;
               ^
[1msrc/CEffFit.C:39:21: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                    ^
[1msrc/CEffFit.C:39:29: [31mstyle:[39m Variable 'nb' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                            ^
[1msrc/CEffFit.C:48:16: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
        nbytes += nb;
               ^
[1msrc/CRunSummary.C:42:21: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                    ^
[1msrc/CRunSummary.C:42:29: [31mstyle:[39m Variable 'nb' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                            ^
[1msrc/CRunSummary.C:51:16: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
        nbytes += nb;
               ^
[1msrc/CTA.convert_hessio_to_VDST.cpp:610:124: [31mstyle:[39m Condition 'fData->fDSTL2TrigType[i_ntel_trig]!=99' is always false [knownConditionTrueFalse][0m
                if( hsdata->mc_event.mc_pe_list[t].npe > fMinNumber_pe_per_telescope && fData->fDSTL2TrigType[i_ntel_trig] != 99 )
                                                                                                                           ^
[1msrc/CTA.convert_hessio_to_VDST.cpp:589:54: [2mnote:[0m Assignment 'fData->fDSTL2TrigType[i_ntel_trig]=99', assigned value is 99
                fData->fDSTL2TrigType[i_ntel_trig] = 99;
                                                     ^
[1msrc/CTA.convert_hessio_to_VDST.cpp:610:124: [2mnote:[0m Condition 'fData->fDSTL2TrigType[i_ntel_trig]!=99' is always false
                if( hsdata->mc_event.mc_pe_list[t].npe > fMinNumber_pe_per_telescope && fData->fDSTL2TrigType[i_ntel_trig] != 99 )
                                                                                                                           ^
[1msrc/CTA.convert_hessio_to_VDST.cpp:1243:9: [31mstyle:[39m Condition 'iFillPedDistributions' is always false [knownConditionTrueFalse][0m
    if( iFillPedDistributions )
        ^
[1msrc/CTA.convert_hessio_to_VDST.cpp:1241:34: [2mnote:[0m Assignment 'iFillPedDistributions=false', assigned value is 0
    bool iFillPedDistributions = false;
                                 ^
[1msrc/CTA.convert_hessio_to_VDST.cpp:1243:9: [2mnote:[0m Condition 'iFillPedDistributions' is always false
    if( iFillPedDistributions )
        ^
[1msrc/CTA.convert_hessio_to_VDST.cpp:770:26: [31mstyle:[39m The scope of the variable 'iTraceIsZero' can be reduced. [variableScope][0m
            unsigned int iTraceIsZero = 1;
                         ^
[1msrc/CTA.convert_hessio_to_VDST.cpp:1681:9: [31mstyle:[39m The scope of the variable 'iarg' can be reduced. [variableScope][0m
    int iarg;
        ^
[1msrc/CTA.convert_hessio_to_VDST.cpp:335:32: [31mperformance:[39m Function parameter 'trg_mask_file' should be passed by const reference. [passedByValue][0m
bool read_trigger_mask( string trg_mask_file )
                               ^
[1msrc/Cshowerpars.C:39:21: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                    ^
[1msrc/Cshowerpars.C:39:29: [31mstyle:[39m Variable 'nb' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                            ^
[1msrc/Cshowerpars.C:48:16: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
        nbytes += nb;
               ^
[1msrc/Ctelconfig.C:39:21: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                    ^
[1msrc/Ctelconfig.C:39:29: [31mstyle:[39m Variable 'nb' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                            ^
[1msrc/Ctelconfig.C:48:16: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
        nbytes += nb;
               ^
[1msrc/Ctpars.C:39:21: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                    ^
[1msrc/Ctpars.C:39:29: [31mstyle:[39m Variable 'nb' is assigned a value that is never used. [unreadVariable][0m
    Long64_t nbytes = 0, nb = 0;
                            ^
[1msrc/Ctpars.C:48:16: [31mstyle:[39m Variable 'nbytes' is assigned a value that is never used. [unreadVariable][0m
        nbytes += nb;
               ^
[1msrc/VAnaSum.cpp:36:10: [31mstyle:[39m The scope of the variable 'i_title' can be reduced. [variableScope][0m
    char i_title[200];
         ^
[1msrc/VAnaSumRunParameter.cpp:1382:9: [31mwarning:[39m Either the condition 'iF' is redundant or there is possible null pointer dereference: iF. [nullPointerRedundantCheck][0m
    if( iF->IsZombie() )
        ^
[1msrc/VAnaSumRunParameter.cpp:1407:9: [2mnote:[0m Assuming that condition 'iF' is not redundant
    if( iF )
        ^
[1msrc/VAnaSumRunParameter.cpp:1382:9: [2mnote:[0m Null pointer dereference
    if( iF->IsZombie() )
        ^
[1msrc/VAnaSumRunParameter.cpp:1389:49: [31mwarning:[39m Either the condition 'iF' is redundant or there is possible null pointer dereference: iF. [nullPointerRedundantCheck][0m
    VGammaHadronCuts* iC = ( VGammaHadronCuts* )iF->Get( "GammaHadronCuts" );
                                                ^
[1msrc/VAnaSumRunParameter.cpp:1407:9: [2mnote:[0m Assuming that condition 'iF' is not redundant
    if( iF )
        ^
[1msrc/VAnaSumRunParameter.cpp:1389:49: [2mnote:[0m Null pointer dereference
    VGammaHadronCuts* iC = ( VGammaHadronCuts* )iF->Get( "GammaHadronCuts" );
                                                ^
[1msrc/VAnaSumRunParameter.cpp:1467:9: [31mwarning:[39m Either the condition 'iF' is redundant or there is possible null pointer dereference: iF. [nullPointerRedundantCheck][0m
    if( iF->IsZombie() )
        ^
[1msrc/VAnaSumRunParameter.cpp:1504:9: [2mnote:[0m Assuming that condition 'iF' is not redundant
    if( iF )
        ^
[1msrc/VAnaSumRunParameter.cpp:1467:9: [2mnote:[0m Null pointer dereference
    if( iF->IsZombie() )
        ^
[1msrc/VAnaSumRunParameter.cpp:1474:97: [31mwarning:[39m Either the condition 'iF' is redundant or there is possible null pointer dereference: iF. [nullPointerRedundantCheck][0m
    VInstrumentResponseFunctionRunParameter* iIRF = ( VInstrumentResponseFunctionRunParameter* )iF->Get( "makeEffectiveArea_runparameter" );
                                                                                                ^
[1msrc/VAnaSumRunParameter.cpp:1504:9: [2mnote:[0m Assuming that condition 'iF' is not redundant
    if( iF )
        ^
[1msrc/VAnaSumRunParameter.cpp:1474:97: [2mnote:[0m Null pointer dereference
    VInstrumentResponseFunctionRunParameter* iIRF = ( VInstrumentResponseFunctionRunParameter* )iF->Get( "makeEffectiveArea_runparameter" );
                                                                                                ^
[1msrc/VAnaSumRunParameter.cpp:1319:24: [31mstyle:[39m Variable 'it.fAcceptanceFile' is reassigned a value before the old one has been used. [redundantAssignment][0m
    it.fAcceptanceFile = "";
                       ^
[1msrc/VAnaSumRunParameter.cpp:1313:24: [2mnote:[0m it.fAcceptanceFile is assigned
    it.fAcceptanceFile = "";
                       ^
[1msrc/VAnaSumRunParameter.cpp:1319:24: [2mnote:[0m it.fAcceptanceFile is overwritten
    it.fAcceptanceFile = "";
                       ^
[1msrc/VAnaSumRunParameter.cpp:1325:24: [31mstyle:[39m Variable 'it.fAcceptanceFile' is reassigned a value before the old one has been used. [redundantAssignment][0m
    it.fAcceptanceFile = "";
                       ^
[1msrc/VAnaSumRunParameter.cpp:1319:24: [2mnote:[0m it.fAcceptanceFile is assigned
    it.fAcceptanceFile = "";
                       ^
[1msrc/VAnaSumRunParameter.cpp:1325:24: [2mnote:[0m it.fAcceptanceFile is overwritten
    it.fAcceptanceFile = "";
                       ^
[1msrc/VAnaSumRunParameter.cpp:1710:9: [31mstyle:[39m The scope of the variable 'i_run' can be reduced. [variableScope][0m
    int i_run;
        ^
[1msrc/VAnaSumRunParameter.cpp:1631:23: [31mstyle:[39m Variable 'i_treename' is assigned a value that is never used. [unreadVariable][0m
    string i_treename = "data";
                      ^
[1msrc/VAnalysisUtilities.cpp:418:31: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
            for( unsigned int i = 0; i < fRunListCut_MJD_min.size(); i++ )
                              ^
[1msrc/VAnalysisUtilities.cpp:359:14: [2mnote:[0m Shadowed declaration
    for( int i = 0; i < c->fChain->GetEntries(); i++ )
             ^
[1msrc/VAnalysisUtilities.cpp:418:31: [2mnote:[0m Shadow variable
            for( unsigned int i = 0; i < fRunListCut_MJD_min.size(); i++ )
                              ^
[1msrc/VAnalysisUtilities.cpp:436:31: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
            for( unsigned int i = 0; i < fRunListCut_Phase_min.size(); i++ )
                              ^
[1msrc/VAnalysisUtilities.cpp:359:14: [2mnote:[0m Shadowed declaration
    for( int i = 0; i < c->fChain->GetEntries(); i++ )
             ^
[1msrc/VAnalysisUtilities.cpp:436:31: [2mnote:[0m Shadow variable
            for( unsigned int i = 0; i < fRunListCut_Phase_min.size(); i++ )
                              ^
[1msrc/VAnalysisUtilities.cpp:357:20: [31mstyle:[39m Variable 'bFoundRun' is assigned a value that is never used. [unreadVariable][0m
    bool bFoundRun = false;
                   ^
[1msrc/VArrayAnalyzer.cpp:781:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( fSelectDebug )
            ^
[1msrc/VArrayAnalyzer.cpp:777:13: [2mnote:[0m First condition
        if( fSelectDebug )
            ^
[1msrc/VArrayAnalyzer.cpp:781:13: [2mnote:[0m Second condition
        if( fSelectDebug )
            ^
[1msrc/VArrayAnalyzer.cpp:654:21: [31mstyle:[39m Local variable 'i_nbytes' shadows outer variable [shadowVariable][0m
                int i_nbytes = iMC_histos.Write();
                    ^
[1msrc/VArrayAnalyzer.cpp:572:13: [2mnote:[0m Shadowed declaration
        int i_nbytes = getShowerParameters()->getTree()->Write();
            ^
[1msrc/VArrayAnalyzer.cpp:654:21: [2mnote:[0m Shadow variable
                int i_nbytes = iMC_histos.Write();
                    ^
[1msrc/VArrayAnalyzer.cpp:670:17: [31mstyle:[39m Local variable 'i_nbytes' shadows outer variable [shadowVariable][0m
            int i_nbytes = getEvndispReconstructionParameter()->Write();
                ^
[1msrc/VArrayAnalyzer.cpp:572:13: [2mnote:[0m Shadowed declaration
        int i_nbytes = getShowerParameters()->getTree()->Write();
            ^
[1msrc/VArrayAnalyzer.cpp:670:17: [2mnote:[0m Shadow variable
            int i_nbytes = getEvndispReconstructionParameter()->Write();
                ^
[1msrc/VArrayAnalyzer.cpp:1678:28: [31mstyle:[39m Variable 'iPointingErrorX' is assigned a value that is never used. [unreadVariable][0m
    double iPointingErrorX = 0.;
                           ^
[1msrc/VArrayAnalyzer.cpp:1679:28: [31mstyle:[39m Variable 'iPointingErrorY' is assigned a value that is never used. [unreadVariable][0m
    double iPointingErrorY = 0.;
                           ^
[1msrc/VArrayAnalyzer.cpp:1680:19: [31mstyle:[39m Variable 'i_cen_x' is assigned a value that is never used. [unreadVariable][0m
    float i_cen_x = 0.;
                  ^
[1msrc/VArrayAnalyzer.cpp:1681:19: [31mstyle:[39m Variable 'i_cen_y' is assigned a value that is never used. [unreadVariable][0m
    float i_cen_y = 0.;
                  ^
[1msrc/VArrayAnalyzer.cpp:1682:17: [31mstyle:[39m Variable 'i_phi' is assigned a value that is never used. [unreadVariable][0m
    float i_phi = 0.;
                ^
[1msrc/VArrayAnalyzer.cpp:1821:19: [31mstyle:[39m Variable 'i_cen_x' is assigned a value that is never used. [unreadVariable][0m
    float i_cen_x = 0.;
                  ^
[1msrc/VArrayAnalyzer.cpp:1822:19: [31mstyle:[39m Variable 'i_cen_y' is assigned a value that is never used. [unreadVariable][0m
    float i_cen_y = 0.;
                  ^
[1msrc/VArrayAnalyzer.cpp:1823:20: [31mstyle:[39m Variable 'i_weight' is assigned a value that is never used. [unreadVariable][0m
    float i_weight = 0.;
                   ^
[1msrc/VAtmosphereSoundingData.cpp:336:22: [31mstyle:[39m Boolean value assigned to floating point variable. [assignBoolToFloat][0m
    double have_line = false;
                     ^
[1msrc/VAtmosphereSoundingData.cpp:354:19: [31mstyle:[39m Boolean value assigned to floating point variable. [assignBoolToFloat][0m
        have_line = true;
                  ^
[1msrc/VAtmosphereSoundings.cpp:1632:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( hname, "h%d", k );
            ^
[1msrc/VAtmosphereSoundings.cpp:1643:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( hname, "hP%d", k );
        ^
[1msrc/VAtmosphereSoundings.cpp:1666:17: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( hname, "h%d%d", k, iID );
                ^
[1msrc/VAtmosphereSoundings.cpp:1666:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( hname, "h%d%d", k, iID );
                ^
[1msrc/VAtmosphereSoundings.cpp:927:12: [31mstyle:[39m The scope of the variable 'R_d' can be reduced. [variableScope][0m
    double R_d = 287.05;        //  Rd = gas constant for dry air, J/(kg*degK)
           ^
[1msrc/VAtmosphereSoundings.cpp:2132:10: [31mstyle:[39m The scope of the variable 'hname' can be reduced. [variableScope][0m
    char hname[800];
         ^
[1msrc/VAtmosphereSoundings.cpp:137:18: [31mstyle:[39m Local variable 'is' shadows outer variable [shadowVariable][0m
        ifstream is;
                 ^
[1msrc/VAtmosphereSoundings.cpp:110:14: [2mnote:[0m Shadowed declaration
    ifstream is;
             ^
[1msrc/VAtmosphereSoundings.cpp:137:18: [2mnote:[0m Shadow variable
        ifstream is;
                 ^
[1msrc/VAtmosphereSoundings.cpp:206:39: [31mstyle:[39m Local variable 'is_stream' shadows outer variable [shadowVariable][0m
                        istringstream is_stream( is_line );
                                      ^
[1msrc/VAtmosphereSoundings.cpp:155:31: [2mnote:[0m Shadowed declaration
                istringstream is_stream( is_line.substr( is_line.find( fTXTSearch_DataString )
                              ^
[1msrc/VAtmosphereSoundings.cpp:206:39: [2mnote:[0m Shadow variable
                        istringstream is_stream( is_line );
                                      ^
[1msrc/VAtmosphereSoundings.cpp:413:18: [31mstyle:[39m Local variable 'is' shadows outer variable [shadowVariable][0m
        ifstream is;
                 ^
[1msrc/VAtmosphereSoundings.cpp:345:14: [2mnote:[0m Shadowed declaration
    ifstream is;
             ^
[1msrc/VAtmosphereSoundings.cpp:413:18: [2mnote:[0m Shadow variable
        ifstream is;
                 ^
[1msrc/VAtmosphereSoundings.cpp:1429:18: [31mstyle:[39m Local variable 'is' shadows outer variable [shadowVariable][0m
        ifstream is;
                 ^
[1msrc/VAtmosphereSoundings.cpp:1399:14: [2mnote:[0m Shadowed declaration
    ifstream is;
             ^
[1msrc/VAtmosphereSoundings.cpp:1429:18: [2mnote:[0m Shadow variable
        ifstream is;
                 ^
[1msrc/VAtmosphereSoundings.cpp:3505:17: [31mstyle:[39m Local variable 'temp' shadows outer variable [shadowVariable][0m
        TGraph* temp = getResidualGraph( v[i]->getGraph( value ),
                ^
[1msrc/VAtmosphereSoundings.cpp:3414:13: [2mnote:[0m Shadowed declaration
    TGraph* temp = 0;
            ^
[1msrc/VAtmosphereSoundings.cpp:3505:17: [2mnote:[0m Shadow variable
        TGraph* temp = getResidualGraph( v[i]->getGraph( value ),
                ^
[1msrc/VAtmosphereSoundings.cpp:3539:17: [31mstyle:[39m Local variable 'temp' shadows outer variable [shadowVariable][0m
        TGraph* temp = getResidualGraph( v[i]->getGraph( value ),
                ^
[1msrc/VAtmosphereSoundings.cpp:3414:13: [2mnote:[0m Shadowed declaration
    TGraph* temp = 0;
            ^
[1msrc/VAtmosphereSoundings.cpp:3539:17: [2mnote:[0m Shadow variable
        TGraph* temp = getResidualGraph( v[i]->getGraph( value ),
                ^
[1msrc/VAtmosphereSoundings.cpp:3612:37: [31mstyle:[39m Local variable 'j' shadows outer variable [shadowVariable][0m
        int y1, y2, m1, m2, d1, d2, j;
                                    ^
[1msrc/VAtmosphereSoundings.cpp:3593:9: [2mnote:[0m Shadowed declaration
    int j = 0;
        ^
[1msrc/VAtmosphereSoundings.cpp:3612:37: [2mnote:[0m Shadow variable
        int y1, y2, m1, m2, d1, d2, j;
                                    ^
[1msrc/VAtmosphereSoundings.cpp:3701:37: [31mstyle:[39m Local variable 'j' shadows outer variable [shadowVariable][0m
        int y1, y2, m1, m2, d1, d2, j;
                                    ^
[1msrc/VAtmosphereSoundings.cpp:3689:9: [2mnote:[0m Shadowed declaration
    int j = 0;
        ^
[1msrc/VAtmosphereSoundings.cpp:3701:37: [2mnote:[0m Shadow variable
        int y1, y2, m1, m2, d1, d2, j;
                                    ^
[1msrc/VAtmosphereSoundings.cpp:3712:37: [31mstyle:[39m Local variable 'j' shadows outer variable [shadowVariable][0m
        int y1, y2, m1, m2, d1, d2, j;
                                    ^
[1msrc/VAtmosphereSoundings.cpp:3689:9: [2mnote:[0m Shadowed declaration
    int j = 0;
        ^
[1msrc/VAtmosphereSoundings.cpp:3712:37: [2mnote:[0m Shadow variable
        int y1, y2, m1, m2, d1, d2, j;
                                    ^
[1msrc/VAtmosphereSoundings.cpp:534:14: [31mstyle:[39m Variable 'p' is assigned a value that is never used. [unreadVariable][0m
    double p = -9999;
             ^
[1msrc/VAtmosphereSoundings.cpp:577:14: [31mstyle:[39m Variable 't' is assigned a value that is never used. [unreadVariable][0m
    double t = -9999;
             ^
[1msrc/VAtmosphereSoundings.cpp:1427:87: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( i_iter = fPlottingPeriodFiles.begin(); i_iter != fPlottingPeriodFiles.end(); i_iter++ )
                                                                                      ^
[1msrc/VBFDataReader.cpp:44:10: [31mstyle:[39m The scope of the variable 'bSimulations' can be reduced. [variableScope][0m
    bool bSimulations = false;
         ^
[1msrc/VBaseRawDataReader.cpp:17:9: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( fDebug )
        ^
[1msrc/VBaseRawDataReader.cpp:13:9: [2mnote:[0m First condition
    if( fDebug )
        ^
[1msrc/VBaseRawDataReader.cpp:17:9: [2mnote:[0m Second condition
    if( fDebug )
        ^
[1msrc/VCTARequirements.cpp:174:17: [31mstyle:[39m Variable 'fsys' is assigned a value that is never used. [unreadVariable][0m
    double fsys = 0.3;
                ^
[1msrc/VCTARequirements.cpp:224:18: [31mstyle:[39m Variable 'y_low' is assigned a value that is never used. [unreadVariable][0m
    double y_low = 0.;
                 ^
[1msrc/VCalibrator.cpp:109:21: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                    sprintf( pedkey, "hped_%d_%d_%d", ( int )iTelType, i + 1, j );
                    ^
[1msrc/VCalibrator.cpp:109:21: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                    sprintf( pedkey, "hped_%d_%d_%d", ( int )iTelType, i + 1, j );
                    ^
[1msrc/VCalibrator.cpp:112:21: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                    sprintf( ic, "ped distribution (tel type %d, channel %d, sumwindow %d)", ( int )iTelType, j, i + 1 );
                    ^
[1msrc/VCalibrator.cpp:112:21: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                    sprintf( ic, "ped distribution (tel type %d, channel %d, sumwindow %d)", ( int )iTelType, j, i + 1 );
                    ^
[1msrc/VCalibrator.cpp:135:21: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                    sprintf( pedkey, "hpedPerTelescopeType_%d_%d_%d", ( int )iTelType, i + 1, j );
                    ^
[1msrc/VCalibrator.cpp:135:21: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                    sprintf( pedkey, "hpedPerTelescopeType_%d_%d_%d", ( int )iTelType, i + 1, j );
                    ^
[1msrc/VCalibrator.cpp:138:21: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                    sprintf( ic, "IPR distribution (tel type %d, channel %d, sumwindow %d)", ( int )iTelType, j, i + 1 );
                    ^
[1msrc/VCalibrator.cpp:138:21: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                    sprintf( ic, "IPR distribution (tel type %d, channel %d, sumwindow %d)", ( int )iTelType, j, i + 1 );
                    ^
[1msrc/VCalibrator.cpp:698:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( iname, "TSpedvar_sw%d[TSnSlices]/F", i + 1 );
            ^
[1msrc/VCalibrator.cpp:699:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( ititle, "TSpedvar_sw%d", i + 1 );
            ^
[1msrc/VCalibrator.cpp:819:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( toffkey, "htzero_%d_%d", telID, i );
                ^
[1msrc/VCalibrator.cpp:820:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( ic, "TZero distribution (tel %d, channel %d)", telID, i );
                ^
[1msrc/VCalibrator.cpp:822:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( toffkey, "htaverage_%d_%d", telID, i );
                ^
[1msrc/VCalibrator.cpp:823:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( ic, "TAverageArrTime distribution (tel %d, channel %d)", telID, i );
                ^
[1msrc/VCalibrator.cpp:1029:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( gainkey, "hgain_%d", i );
            ^
[1msrc/VCalibrator.cpp:1032:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( ic, "gain distribution (tel %d, channel %d)", getTelID() + 1, i );
            ^
[1msrc/VCalibrator.cpp:1036:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( pulsekey, "hpulse_%d", i );
            ^
[1msrc/VCalibrator.cpp:1042:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( spekey, "htcpulse_%d", i );
            ^
[1msrc/VCalibrator.cpp:1062:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( toff_vs_sumkey, "htoff_vs_sum_%d", i );
            ^
[1msrc/VCalibrator.cpp:1068:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( toffkey, "htoff_%d", i );
            ^
[1msrc/VCalibrator.cpp:1071:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( ic, "TOffset distribution (tel %d, channel %d)", getTelID() + 1, i );
            ^
[1msrc/VCalibrator.cpp:1266:17: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( i_name, "h_%d", i );
                ^
[1msrc/VCalibrator.cpp:1267:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( i_title, "event %d, channel %d", getEventNumber(), i );
                ^
[1msrc/VCalibrator.cpp:1806:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( i_branchname, "TSpedvar_sw%d", i + 1 );
            ^
[1msrc/VCalibrator.cpp:3997:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( hname, "iH_averageTZero_%d", i );
        ^
[1msrc/VCalibrator.cpp:38:10: [31mstyle:[39m The scope of the variable 'ic' can be reduced. [variableScope][0m
    char ic[800];
         ^
[1msrc/VCalibrator.cpp:639:10: [31mstyle:[39m The scope of the variable 'iname' can be reduced. [variableScope][0m
    char iname[800];
         ^
[1msrc/VCalibrator.cpp:640:10: [31mstyle:[39m The scope of the variable 'ititle' can be reduced. [variableScope][0m
    char ititle[800];
         ^
[1msrc/VCalibrator.cpp:807:13: [31mstyle:[39m The scope of the variable 'telID' can be reduced. [variableScope][0m
        int telID = 0;
            ^
[1msrc/VCalibrator.cpp:2142:11: [31mstyle:[39m The scope of the variable 'mean' can be reduced. [variableScope][0m
    float mean = 0.;
          ^
[1msrc/VCalibrator.cpp:2143:11: [31mstyle:[39m The scope of the variable 'rms' can be reduced. [variableScope][0m
    float rms = 0.;
          ^
[1msrc/VCalibrator.cpp:2160:13: [31mstyle:[39m The scope of the variable 'i_module' can be reduced. [variableScope][0m
        int i_module, i_chan, i_run, i;
            ^
[1msrc/VCalibrator.cpp:2160:23: [31mstyle:[39m The scope of the variable 'i_chan' can be reduced. [variableScope][0m
        int i_module, i_chan, i_run, i;
                      ^
[1msrc/VCalibrator.cpp:2160:31: [31mstyle:[39m The scope of the variable 'i_run' can be reduced. [variableScope][0m
        int i_module, i_chan, i_run, i;
                              ^
[1msrc/VCalibrator.cpp:2160:38: [31mstyle:[39m The scope of the variable 'i' can be reduced. [variableScope][0m
        int i_module, i_chan, i_run, i;
                                     ^
[1msrc/VCalibrator.cpp:2161:16: [31mstyle:[39m The scope of the variable 'i_ped' can be reduced. [variableScope][0m
        double i_ped, i_pedvar;
               ^
[1msrc/VCalibrator.cpp:2161:23: [31mstyle:[39m The scope of the variable 'i_pedvar' can be reduced. [variableScope][0m
        double i_ped, i_pedvar;
                      ^
[1msrc/VCalibrator.cpp:2393:16: [31mstyle:[39m The scope of the variable 'i_n' can be reduced. [variableScope][0m
        double i_n = 0.;
               ^
[1msrc/VCalibrator.cpp:2394:16: [31mstyle:[39m The scope of the variable 'i_sum' can be reduced. [variableScope][0m
        double i_sum = 0.;
               ^
[1msrc/VCalibrator.cpp:2395:16: [31mstyle:[39m The scope of the variable 'i_sum2' can be reduced. [variableScope][0m
        double i_sum2 = 0.;
               ^
[1msrc/VCalibrator.cpp:2532:9: [31mstyle:[39m The scope of the variable 'nZero' can be reduced. [variableScope][0m
    int nZero = 0; //counts number of channels with 0 gain.
        ^
[1msrc/VCalibrator.cpp:2595:18: [31mstyle:[39m The scope of the variable 'buffer' can be reduced. [variableScope][0m
            char buffer[100];
                 ^
[1msrc/VCalibrator.cpp:2906:18: [31mstyle:[39m The scope of the variable 'buffer' can be reduced. [variableScope][0m
            char buffer[100];
                 ^
[1msrc/VCalibrator.cpp:3291:9: [31mstyle:[39m The scope of the variable 'iLowGainCaliLines' can be reduced. [variableScope][0m
    int iLowGainCaliLines = 0;
        ^
[1msrc/VCalibrator.cpp:4236:31: [31mstyle:[39m Local variable 't' shadows outer variable [shadowVariable][0m
            for( unsigned int t = 0; t < iTelType.size(); t++ )
                              ^
[1msrc/VCalibrator.cpp:3896:12: [2mnote:[0m Shadowed declaration
    TTree* t = ( TTree* )iF.Get( "calibration" );
           ^
[1msrc/VCalibrator.cpp:4236:31: [2mnote:[0m Shadow variable
            for( unsigned int t = 0; t < iTelType.size(); t++ )
                              ^
[1msrc/VCalibrator.cpp:4294:27: [31mstyle:[39m Local variable 't' shadows outer variable [shadowVariable][0m
        for( unsigned int t = 0; t < iTelType.size(); t++ )
                          ^
[1msrc/VCalibrator.cpp:3896:12: [2mnote:[0m Shadowed declaration
    TTree* t = ( TTree* )iF.Get( "calibration" );
           ^
[1msrc/VCalibrator.cpp:4294:27: [2mnote:[0m Shadow variable
        for( unsigned int t = 0; t < iTelType.size(); t++ )
                          ^
[1msrc/VCalibrator.cpp:1477:18: [31mstyle:[39m Variable 'ichannel' is assigned a value that is never used. [unreadVariable][0m
        ichannel = ( int )i;
                 ^
[1msrc/VCalibrator.cpp:1480:20: [31mstyle:[39m Variable 'i_mean' is assigned a value that is never used. [unreadVariable][0m
            i_mean = h[i]->GetMean();
                   ^
[1msrc/VCalibrator.cpp:1481:20: [31mstyle:[39m Variable 'i_rms' is assigned a value that is never used. [unreadVariable][0m
            i_rms  = h[i]->GetRMS();
                   ^
[1msrc/VCalibrator.cpp:1483:22: [31mstyle:[39m Variable 'i_median' is assigned a value that is never used. [unreadVariable][0m
            i_median = i_b[0];
                     ^
[1msrc/VCalibrator.cpp:1487:20: [31mstyle:[39m Variable 'i_mean' is assigned a value that is never used. [unreadVariable][0m
            i_mean = 0.;
                   ^
[1msrc/VCalibrator.cpp:1488:20: [31mstyle:[39m Variable 'i_rms' is assigned a value that is never used. [unreadVariable][0m
            i_rms  = 0.;
                   ^
[1msrc/VCalibrator.cpp:1489:22: [31mstyle:[39m Variable 'i_median' is assigned a value that is never used. [unreadVariable][0m
            i_median = 0.;
                     ^
[1msrc/VCalibrator.cpp:2393:20: [31mstyle:[39m Variable 'i_n' is assigned a value that is never used. [unreadVariable][0m
        double i_n = 0.;
                   ^
[1msrc/VCalibrator.cpp:2394:22: [31mstyle:[39m Variable 'i_sum' is assigned a value that is never used. [unreadVariable][0m
        double i_sum = 0.;
                     ^
[1msrc/VCalibrator.cpp:2395:23: [31mstyle:[39m Variable 'i_sum2' is assigned a value that is never used. [unreadVariable][0m
        double i_sum2 = 0.;
                      ^
[1msrc/VCalibrator.cpp:3291:27: [31mstyle:[39m Variable 'iLowGainCaliLines' is assigned a value that is never used. [unreadVariable][0m
    int iLowGainCaliLines = 0;
                          ^
[1msrc/VCalibrator.cpp:4614:25: [31mstyle:[39m Variable 'i_gainCorrect' is assigned a value that is never used. [unreadVariable][0m
    float i_gainCorrect = 1.;
                        ^
[1msrc/VCalibrator.cpp:511:83: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
            i_PedestalsHistoClonesArray_iter != fPedestalsHistoClonesArray.end(); i_PedestalsHistoClonesArray_iter++ )
                                                                                  ^
[1msrc/VCalibrator.cpp:521:89: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( iPedOutFile_iter = fPedOutFile.begin(); iPedOutFile_iter != fPedOutFile.end(); iPedOutFile_iter++ )
                                                                                        ^
[1msrc/VCalibrator.cpp:4505:57: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
        for( iN_iter = iE.begin(); iN_iter != iE.end(); iN_iter++ )
                                                        ^
[1msrc/VCamera.cpp:113:9: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
 double x, y, rx, ry;
        ^
[1msrc/VCamera.cpp:113:12: [31mstyle:[39m The scope of the variable 'y' can be reduced. [variableScope][0m
 double x, y, rx, ry;
           ^
[1msrc/VCamera.cpp:113:15: [31mstyle:[39m The scope of the variable 'rx' can be reduced. [variableScope][0m
 double x, y, rx, ry;
              ^
[1msrc/VCamera.cpp:113:19: [31mstyle:[39m The scope of the variable 'ry' can be reduced. [variableScope][0m
 double x, y, rx, ry;
                  ^
[1msrc/VCamera.cpp:1317:13: [31mstyle:[39m The scope of the variable 'w2' can be reduced. [variableScope][0m
 double w1, w2;
            ^
[1msrc/VCamera.cpp:1858:9: [31mstyle:[39m The scope of the variable 'dist' can be reduced. [variableScope][0m
 double dist;
        ^
[1msrc/VCamera.cpp:1360:16: [31mstyle:[39m Variable 'scaler' is assigned a value that is never used. [unreadVariable][0m
 double scaler = 1.;
               ^
[1msrc/VCameraRead.cpp:1294:16: [31mstyle:[39m The scope of the variable 'i_TubeRadius_0' can be reduced. [variableScope][0m
        double i_TubeRadius_0 = 0.;
               ^
[1msrc/VCameraRead.cpp:1602:20: [31mstyle:[39m The scope of the variable 'iRot' can be reduced. [variableScope][0m
            double iRot = -99.;
                   ^
[1msrc/VCameraRead.cpp:193:22: [31mstyle:[39m Unused variable: i_temp [unusedVariable][0m
    std::vector<int> i_temp;
                     ^
[1msrc/VCameraRead.cpp:778:17: [31mstyle:[39m Variable 'iDist' is assigned a value that is never used. [unreadVariable][0m
    float iDist = 0.;
                ^
[1msrc/VCameraRead.cpp:1510:70: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( set< ULong64_t >::iterator i_s = s.begin(); i_s != s.end(); i_s++ )
                                                                     ^
[1msrc/VCameraRead.cpp:1536:45: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( it_s = s.begin(); it_s != s.end(); it_s++ )
                                            ^
[1msrc/VDBRunInfo.cpp:118:18: [31mstyle:[39m The scope of the variable 'ConfigMaskDQM' can be reduced. [variableScope][0m
    unsigned int ConfigMaskDQM = 0;
                 ^
[1msrc/VDBRunInfo.cpp:119:18: [31mstyle:[39m The scope of the variable 'ConfigMaskNew' can be reduced. [variableScope][0m
    unsigned int ConfigMaskNew = 0;
                 ^
[1msrc/VDB_PixelDataReader.cpp:175:17: [31mstyle:[39m Condition '!db_row' is always false [knownConditionTrueFalse][0m
            if( !db_row )
                ^
[1msrc/VDB_PixelDataReader.cpp:173:32: [2mnote:[0m Assuming that condition 'db_row=db_res->Next()' is not redundant
        while( TSQLRow* db_row = db_res->Next() )
                               ^
[1msrc/VDB_PixelDataReader.cpp:175:17: [2mnote:[0m Condition '!db_row' is always false
            if( !db_row )
                ^
[1msrc/VDB_PixelDataReader.cpp:220:21: [31mstyle:[39m Condition '!db_row' is always false [knownConditionTrueFalse][0m
                if( !db_row )
                    ^
[1msrc/VDB_PixelDataReader.cpp:218:36: [2mnote:[0m Assuming that condition 'db_row=db_res->Next()' is not redundant
            while( TSQLRow* db_row = db_res->Next() )
                                   ^
[1msrc/VDB_PixelDataReader.cpp:220:21: [2mnote:[0m Condition '!db_row' is always false
                if( !db_row )
                    ^
[1msrc/VDB_PixelDataReader.cpp:271:21: [31mstyle:[39m Condition '!db_row' is always false [knownConditionTrueFalse][0m
                if( !db_row )
                    ^
[1msrc/VDB_PixelDataReader.cpp:269:36: [2mnote:[0m Assuming that condition 'db_row=db_res->Next()' is not redundant
            while( TSQLRow* db_row = db_res->Next() )
                                   ^
[1msrc/VDB_PixelDataReader.cpp:271:21: [2mnote:[0m Condition '!db_row' is always false
                if( !db_row )
                    ^
[1msrc/VDB_PixelDataReader.cpp:37:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( hname, "h_%s_tel%d", fPixelDataType[t].c_str(), i + 1 );
            ^
[1msrc/VDB_PixelDataReader.cpp:38:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( htitle, "%s (tel %d)", fPixelDataType[t].c_str(), i + 1 );
            ^
[1msrc/VDB_PixelDataReader.cpp:256:9: [31mwarning:[39m %d in format string (no. 5) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( c_query, "select c.pixel_id , s.fadc_id, c.fadc_channel from tblFADC_Slot_Relation as s, tblFADC_Channel_Relation as c where s.db_start_time < \"%s\" and c.db_start_time < \"%s\" and ( s.db_end_time IS NULL or s.db_end_time > \"%s\" ) and ( c.db_end_time IS NULL or c.db_end_time > \"%s\" ) and s.fadc_crate=c.fadc_crate and s.fadc_slot=c.fadc_slot and s.telescope_id=c.telescope_id and c.pixel_id IS NOT NULL and s.telescope_id=%d order by c.pixel_id ;", iDBStartTimeSQL.c_str(), iDBStartTimeSQL.c_str(), fDBRunStoppTimeSQL.c_str(), fDBRunStoppTimeSQL.c_str(), i );
        ^
[1msrc/VDB_PixelDataReader.cpp:505:12: [31mstyle:[39m The scope of the variable 'i_rms' can be reduced. [variableScope][0m
    double i_rms = 0.;
           ^
[1msrc/VDB_PixelDataReader.cpp:203:23: [31mstyle:[39m Local variable 'c_queryS' shadows outer variable [shadowVariable][0m
        ostringstream c_queryS;
                      ^
[1msrc/VDB_PixelDataReader.cpp:158:19: [2mnote:[0m Shadowed declaration
    ostringstream c_queryS;
                  ^
[1msrc/VDB_PixelDataReader.cpp:203:23: [2mnote:[0m Shadow variable
        ostringstream c_queryS;
                      ^
[1msrc/VDB_PixelDataReader.cpp:214:21: [31mstyle:[39m Local variable 'db_res' shadows outer variable [shadowVariable][0m
        TSQLResult* db_res = my_connection.Get_QueryResult();
                    ^
[1msrc/VDB_PixelDataReader.cpp:169:17: [2mnote:[0m Shadowed declaration
    TSQLResult* db_res = my_connection.Get_QueryResult();
                ^
[1msrc/VDB_PixelDataReader.cpp:214:21: [2mnote:[0m Shadow variable
        TSQLResult* db_res = my_connection.Get_QueryResult();
                    ^
[1msrc/VDB_PixelDataReader.cpp:265:21: [31mstyle:[39m Local variable 'db_res' shadows outer variable [shadowVariable][0m
        TSQLResult* db_res = my_connection.Get_QueryResult();
                    ^
[1msrc/VDB_PixelDataReader.cpp:169:17: [2mnote:[0m Shadowed declaration
    TSQLResult* db_res = my_connection.Get_QueryResult();
                ^
[1msrc/VDB_PixelDataReader.cpp:265:21: [2mnote:[0m Shadow variable
        TSQLResult* db_res = my_connection.Get_QueryResult();
                    ^
[1msrc/VDataMCComparision.cpp:736:20: [31mstyle:[39m Variable 'theta2' is reassigned a value before the old one has been used. [redundantAssignment][0m
            theta2 = ( fData->Yoff - fData->MCyoff ) * ( fData->Yoff - fData->MCyoff )
                   ^
[1msrc/VDataMCComparision.cpp:731:16: [2mnote:[0m theta2 is assigned
        theta2 = fData->theta2;
               ^
[1msrc/VDataMCComparision.cpp:736:20: [2mnote:[0m theta2 is overwritten
            theta2 = ( fData->Yoff - fData->MCyoff ) * ( fData->Yoff - fData->MCyoff )
                   ^
[1msrc/VDataMCComparision.cpp:807:22: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
            for( int i = 0; i < fData->NImages; i++ )
                     ^
[1msrc/VDataMCComparision.cpp:649:14: [2mnote:[0m Shadowed declaration
    for( int i = 0; i < nentries; i++ )
             ^
[1msrc/VDataMCComparision.cpp:807:22: [2mnote:[0m Shadow variable
            for( int i = 0; i < fData->NImages; i++ )
                     ^
[1msrc/VDataMCComparision.cpp:383:140: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( map <E_varname, vector< VDataMCComparisionHistogramData* > >::iterator it = fHistoSingleTel.begin(); it != fHistoSingleTel.end(); it++ )
                                                                                                                                           ^
[1msrc/VDeadTime.cpp:174:9: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( bIsOn )
        ^
[1msrc/VDeadTime.cpp:169:9: [2mnote:[0m First condition
    if( bIsOn )
        ^
[1msrc/VDeadTime.cpp:174:9: [2mnote:[0m Second condition
    if( bIsOn )
        ^
[1msrc/VDispAnalyzer.cpp:491:15: [31mstyle:[39m The scope of the variable 'x1' can be reduced. [variableScope][0m
        float x1 = 0.;
              ^
[1msrc/VDispAnalyzer.cpp:492:15: [31mstyle:[39m The scope of the variable 'x2' can be reduced. [variableScope][0m
        float x2 = 0.;
              ^
[1msrc/VDispAnalyzer.cpp:493:15: [31mstyle:[39m The scope of the variable 'y1' can be reduced. [variableScope][0m
        float y1 = 0.;
              ^
[1msrc/VDispAnalyzer.cpp:494:15: [31mstyle:[39m The scope of the variable 'y2' can be reduced. [variableScope][0m
        float y2 = 0.;
              ^
[1msrc/VDispAnalyzer.cpp:269:18: [31mstyle:[39m Variable 'x5' is assigned a value that is never used. [unreadVariable][0m
        float x5 = 0.;
                 ^
[1msrc/VDispAnalyzer.cpp:270:18: [31mstyle:[39m Variable 'x6' is assigned a value that is never used. [unreadVariable][0m
        float x6 = 0.;
                 ^
[1msrc/VDispAnalyzer.cpp:275:18: [31mstyle:[39m Variable 'y5' is assigned a value that is never used. [unreadVariable][0m
        float y5 = 0.;
                 ^
[1msrc/VDispAnalyzer.cpp:276:18: [31mstyle:[39m Variable 'y6' is assigned a value that is never used. [unreadVariable][0m
        float y6 = 0.;
                 ^
[1msrc/VDispAnalyzer.cpp:491:18: [31mstyle:[39m Variable 'x1' is assigned a value that is never used. [unreadVariable][0m
        float x1 = 0.;
                 ^
[1msrc/VDispAnalyzer.cpp:492:18: [31mstyle:[39m Variable 'x2' is assigned a value that is never used. [unreadVariable][0m
        float x2 = 0.;
                 ^
[1msrc/VDispAnalyzer.cpp:493:18: [31mstyle:[39m Variable 'y1' is assigned a value that is never used. [unreadVariable][0m
        float y1 = 0.;
                 ^
[1msrc/VDispAnalyzer.cpp:494:18: [31mstyle:[39m Variable 'y2' is assigned a value that is never used. [unreadVariable][0m
        float y2 = 0.;
                 ^
[1msrc/VDispAnalyzer.cpp:636:16: [31mstyle:[39m Variable 'disp' is assigned a value that is never used. [unreadVariable][0m
    float disp = 0.;
               ^
[1msrc/VDispAnalyzer.cpp:971:14: [31mstyle:[39m Variable 'w' is assigned a value that is never used. [unreadVariable][0m
    double w = 0.;
             ^
[1msrc/VDispAnalyzer.cpp:980:15: [31mstyle:[39m Variable 'w' is assigned a value that is never used. [unreadVariable][0m
            w += energy_weight[j];
              ^
[1msrc/VDispAnalyzer.cpp:1165:13: [31mstyle:[39m Variable 'm' is assigned a value that is never used. [unreadVariable][0m
    float m = 0.;
            ^
[1msrc/VDispAnalyzer.cpp:1166:17: [31mstyle:[39m Variable 'theta' is assigned a value that is never used. [unreadVariable][0m
    float theta = 0.;
                ^
[1msrc/VDispAnalyzer.cpp:1167:13: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
    float x = 0.;
            ^
[1msrc/VDispAnalyzer.cpp:1168:13: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
    float y = 0.;
            ^
[1msrc/VDispAnalyzer.cpp:1169:14: [31mstyle:[39m Variable 'x1' is assigned a value that is never used. [unreadVariable][0m
    float x1 = 0.;
             ^
[1msrc/VDispAnalyzer.cpp:1170:14: [31mstyle:[39m Variable 'x2' is assigned a value that is never used. [unreadVariable][0m
    float x2 = 0.;
             ^
[1msrc/VDispAnalyzer.cpp:1171:14: [31mstyle:[39m Variable 'y1' is assigned a value that is never used. [unreadVariable][0m
    float y1 = 0.;
             ^
[1msrc/VDispAnalyzer.cpp:1172:14: [31mstyle:[39m Variable 'y2' is assigned a value that is never used. [unreadVariable][0m
    float y2 = 0.;
             ^
[1msrc/VDispAnalyzer.cpp:1174:19: [31mstyle:[39m Variable 'iweight' is assigned a value that is never used. [unreadVariable][0m
    float iweight = 0.;
                  ^
[1msrc/VDispTable.cpp:381:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( hname, "Tel_%d/tpars", i + 1 );
        ^
[1msrc/VDispTableAnalyzer.cpp:427:11: [31mstyle:[39m The scope of the variable 'x1' can be reduced. [variableScope][0m
    float x1 = 0.;
          ^
[1msrc/VDispTableAnalyzer.cpp:428:11: [31mstyle:[39m The scope of the variable 'x2' can be reduced. [variableScope][0m
    float x2 = 0.;
          ^
[1msrc/VDispTableAnalyzer.cpp:429:11: [31mstyle:[39m The scope of the variable 'y1' can be reduced. [variableScope][0m
    float y1 = 0.;
          ^
[1msrc/VDispTableAnalyzer.cpp:430:11: [31mstyle:[39m The scope of the variable 'y2' can be reduced. [variableScope][0m
    float y2 = 0.;
          ^
[1msrc/VDispTableAnalyzer.cpp:324:17: [31mstyle:[39m Variable 'iSign' is assigned a value that is never used. [unreadVariable][0m
    float iSign = -1.;
                ^
[1msrc/VDispTableAnalyzer.cpp:427:14: [31mstyle:[39m Variable 'x1' is assigned a value that is never used. [unreadVariable][0m
    float x1 = 0.;
             ^
[1msrc/VDispTableAnalyzer.cpp:428:14: [31mstyle:[39m Variable 'x2' is assigned a value that is never used. [unreadVariable][0m
    float x2 = 0.;
             ^
[1msrc/VDispTableAnalyzer.cpp:429:14: [31mstyle:[39m Variable 'y1' is assigned a value that is never used. [unreadVariable][0m
    float y1 = 0.;
             ^
[1msrc/VDispTableAnalyzer.cpp:430:14: [31mstyle:[39m Variable 'y2' is assigned a value that is never used. [unreadVariable][0m
    float y2 = 0.;
             ^
[1msrc/VDisplay.cpp:547:38: [31mstyle:[39m Array index 'j' is used before limits check. [arrayIndexThenCheck][0m
            if( objSel == fPadsCamera[j] && j < fEventLoop->getNTel() )
                                     ^
[1msrc/VDisplay.cpp:2237:9: [31mstyle:[39m Condition 'xgraph' is always true [knownConditionTrueFalse][0m
    if( xgraph && xgraph->GetN() > 1 )
        ^
[1msrc/VDisplay.cpp:2134:9: [2mnote:[0m Assuming that condition '!xgraph' is not redundant
    if( !xgraph || xgraph->GetN() < 1 )
        ^
[1msrc/VDisplay.cpp:2237:9: [2mnote:[0m Condition 'xgraph' is always true
    if( xgraph && xgraph->GetN() > 1 )
        ^
[1msrc/VDisplay.cpp:2197:11: [31mstyle:[39m Variable 'y_min' is reassigned a value before the old one has been used. [redundantAssignment][0m
    y_min = -5.;  // (just to make it look better)
          ^
[1msrc/VDisplay.cpp:2189:15: [2mnote:[0m y_min is assigned
        y_min = -0.5;
              ^
[1msrc/VDisplay.cpp:2197:11: [2mnote:[0m y_min is overwritten
    y_min = -5.;  // (just to make it look better)
          ^
[1msrc/VDisplay.cpp:562:22: [31mstyle:[39m The scope of the variable 'iSelect' can be reduced. [variableScope][0m
        unsigned int iSelect = 0;
                     ^
[1msrc/VDisplay.cpp:871:11: [31mstyle:[39m The scope of the variable 'iTraceFits' can be reduced. [variableScope][0m
    TH1D* iTraceFits;
          ^
[1msrc/VDisplay.cpp:2147:12: [31mstyle:[39m The scope of the variable 'yE' can be reduced. [variableScope][0m
    double yE = 0.;
           ^
[1msrc/VDisplay.cpp:562:30: [31mstyle:[39m Variable 'iSelect' is assigned a value that is never used. [unreadVariable][0m
        unsigned int iSelect = 0;
                             ^
[1msrc/VDisplay.cpp:2147:15: [31mstyle:[39m Variable 'yE' is assigned a value that is never used. [unreadVariable][0m
    double yE = 0.;
              ^
[1msrc/VDisplay.cpp:3409:97: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
                for( it_ImagePixel = i_ImagePixel.begin(); it_ImagePixel != i_ImagePixel.end(); it_ImagePixel++ )
                                                                                                ^
[1msrc/VDisplay.cpp:3418:117: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
                for( it_ImagePixelTzero = i_ImagePixelTzero.begin(); it_ImagePixelTzero != i_ImagePixelTzero.end(); it_ImagePixelTzero++ )
                                                                                                                    ^
[1msrc/VDisplay.cpp:3427:101: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
                for( it_BorderPixel = i_BorderPixel.begin(); it_BorderPixel != i_BorderPixel.end(); it_BorderPixel++ )
                                                                                                    ^
[1msrc/VDisplayBirdsEye.cpp:350:16: [31mstyle:[39m Variable 'i_x1' is assigned a value that is never used. [unreadVariable][0m
    float i_x1 = 0.;
               ^
[1msrc/VDisplayBirdsEye.cpp:351:16: [31mstyle:[39m Variable 'i_y1' is assigned a value that is never used. [unreadVariable][0m
    float i_y1 = 0.;
               ^
[1msrc/VDisplayBirdsEye.cpp:352:16: [31mstyle:[39m Variable 'i_x2' is assigned a value that is never used. [unreadVariable][0m
    float i_x2 = 0.;
               ^
[1msrc/VDisplayBirdsEye.cpp:353:16: [31mstyle:[39m Variable 'i_y2' is assigned a value that is never used. [unreadVariable][0m
    float i_y2 = 0.;
               ^
[1msrc/VEffectiveAreaCalculator.cpp:1612:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( bDebugCuts )
            ^
[1msrc/VEffectiveAreaCalculator.cpp:1605:13: [2mnote:[0m First condition
        if( bDebugCuts )
            ^
[1msrc/VEffectiveAreaCalculator.cpp:1612:13: [2mnote:[0m Second condition
        if( bDebugCuts )
            ^
[1msrc/VEffectiveAreaCalculator.cpp:434:9: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( hname, "%s_%d_%d", iName.c_str(), i, j );
        ^
[1msrc/VEffectiveAreaCalculator.cpp:458:9: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( hname, "%s_%d_%d", iName.c_str(), i, j );
        ^
[1msrc/VEffectiveAreaCalculator.cpp:2680:15: [31mstyle:[39m Variable 'pj' is assigned a value that is never used. [unreadVariable][0m
    double pj = 0.;
              ^
[1msrc/VEffectiveAreaCalculator.cpp:2681:15: [31mstyle:[39m Variable 'pr' is assigned a value that is never used. [unreadVariable][0m
    double pr = 0.;
              ^
[1msrc/VEffectiveAreaCalculator.cpp:2682:15: [31mstyle:[39m Variable 'pm' is assigned a value that is never used. [unreadVariable][0m
    double pm = 0.;
              ^
[1msrc/VEffectiveAreaCalculator.cpp:2683:15: [31mstyle:[39m Variable 'sj' is assigned a value that is never used. [unreadVariable][0m
    double sj = 0.;
              ^
[1msrc/VEffectiveAreaCalculator.cpp:518:16: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
               h_HIS1D_iterator++ )
               ^
[1msrc/VEffectiveAreaCalculator.cpp:529:16: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
               h_HIS1P_iterator++ )
               ^
[1msrc/VEffectiveAreaCalculator.cpp:540:16: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
               h_HIS2D_iterator++ )
               ^
[1msrc/VEffectiveAreaCalculatorMCHistograms.cpp:640:25: [31mstyle:[39m Local variable 'ihVEmc_new' shadows outer variable [shadowVariable][0m
        vector< TH1D* > ihVEmc_new;
                        ^
[1msrc/VEffectiveAreaCalculatorMCHistograms.cpp:587:31: [2mnote:[0m Shadowed declaration
    vector< vector< TH1D* > > ihVEmc_new;
                              ^
[1msrc/VEffectiveAreaCalculatorMCHistograms.cpp:640:25: [2mnote:[0m Shadow variable
        vector< TH1D* > ihVEmc_new;
                        ^
[1msrc/VEffectiveAreaCalculatorMCHistograms.cpp:641:29: [31mstyle:[39m Local variable 'iVEmcSWeight_new' shadows outer variable [shadowVariable][0m
        vector< TProfile* > iVEmcSWeight_new;
                            ^
[1msrc/VEffectiveAreaCalculatorMCHistograms.cpp:588:35: [2mnote:[0m Shadowed declaration
    vector< vector< TProfile* > > iVEmcSWeight_new;
                                  ^
[1msrc/VEffectiveAreaCalculatorMCHistograms.cpp:641:29: [2mnote:[0m Shadow variable
        vector< TProfile* > iVEmcSWeight_new;
                            ^
[1msrc/VEmissionHeightCalculator.cpp:29:38: [31mstyle:[39m Variable 'iEmissionHeightWeightTemp' is assigned a value that is never used. [unreadVariable][0m
    double iEmissionHeightWeightTemp = 0.;
                                     ^
[1msrc/VEmissionHeightCalculator.cpp:31:32: [31mstyle:[39m Variable 'iEmissionHeightTemp' is assigned a value that is never used. [unreadVariable][0m
    double iEmissionHeightTemp = 0.;
                               ^
[1msrc/VEmissionHeightCalculator.cpp:34:33: [31mstyle:[39m Variable 'fTelescopeDistanceSC' is assigned a value that is never used. [unreadVariable][0m
    double fTelescopeDistanceSC = 0.;
                                ^
[1msrc/VEmissionHeightCalculator.cpp:35:27: [31mstyle:[39m Variable 'fImageDistance' is assigned a value that is never used. [unreadVariable][0m
    double fImageDistance = 0.;
                          ^
[1msrc/VEnergySpectrum.cpp:482:16: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( fDebug == 3 )
               ^
[1msrc/VEnergySpectrum.cpp:477:16: [2mnote:[0m First condition
    if( fDebug == 3 )
               ^
[1msrc/VEnergySpectrum.cpp:482:16: [2mnote:[0m Second condition
    if( fDebug == 3 )
               ^
[1msrc/VEnergySpectrum.cpp:1090:16: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( fDebug >= 2 )
               ^
[1msrc/VEnergySpectrum.cpp:1076:16: [2mnote:[0m First condition
    if( fDebug >= 2 )
               ^
[1msrc/VEnergySpectrum.cpp:1090:16: [2mnote:[0m Second condition
    if( fDebug >= 2 )
               ^
[1msrc/VEnergySpectrum.cpp:211:51: [31mstyle:[39m Same expression on both sides of '&&'. [duplicateExpression][0m
        if( i_flux.DifferentialFluxError_low > 0. && i_flux.DifferentialFluxError_low > 0. )
                                                  ^
[1msrc/VEnergySpectrum.cpp:1155:11: [31mstyle:[39m The scope of the variable 'hNull' can be reduced. [variableScope][0m
    TH1D* hNull = 0;
          ^
[1msrc/VEnergySpectrum.cpp:786:16: [31mstyle:[39m Local variable 'x' shadows outer variable [shadowVariable][0m
        double x = VMathsandFunctions::getMeanEnergyInBin( fEnergyInBinDefinition, i_hErecCountsOn->GetXaxis()->GetBinLowEdge( i ),
               ^
[1msrc/VEnergySpectrum.cpp:741:12: [2mnote:[0m Shadowed declaration
    double x = 0.;
           ^
[1msrc/VEnergySpectrum.cpp:786:16: [2mnote:[0m Shadow variable
        double x = VMathsandFunctions::getMeanEnergyInBin( fEnergyInBinDefinition, i_hErecCountsOn->GetXaxis()->GetBinLowEdge( i ),
               ^
[1msrc/VEnergySpectrum.cpp:1794:15: [31mstyle:[39m Local variable 'h' shadows outer variable [shadowVariable][0m
        TH1D* h = ( TH1D* )getTotalTimeHistogram( true )->Clone();
              ^
[1msrc/VEnergySpectrum.cpp:1760:11: [2mnote:[0m Shadowed declaration
    TH1D* h = ( TH1D* )getTotalTimeHistogram( false )->Clone();
          ^
[1msrc/VEnergySpectrum.cpp:1794:15: [2mnote:[0m Shadow variable
        TH1D* h = ( TH1D* )getTotalTimeHistogram( true )->Clone();
              ^
[1msrc/VEnergySpectrum.cpp:1155:17: [31mstyle:[39m Variable 'hNull' is assigned a value that is never used. [unreadVariable][0m
    TH1D* hNull = 0;
                ^
[1msrc/VEnergySpectrum.cpp:1488:23: [31mstyle:[39m Variable 'i_ecutoffV' is assigned a value that is never used. [unreadVariable][0m
    double i_ecutoffV = 0.;
                      ^
[1msrc/VEnergySpectrum.cpp:1489:23: [31mstyle:[39m Variable 'i_ecutoffE' is assigned a value that is never used. [unreadVariable][0m
    double i_ecutoffE = 0.;
                      ^
[1msrc/VEnergySpectrum.cpp:1491:25: [31mstyle:[39m Variable 'i_curvatureV' is assigned a value that is never used. [unreadVariable][0m
    double i_curvatureV = 0.;
                        ^
[1msrc/VEnergySpectrum.cpp:1492:25: [31mstyle:[39m Variable 'i_curvatureE' is assigned a value that is never used. [unreadVariable][0m
    double i_curvatureE = 0.;
                        ^
[1msrc/VEnergySpectrum.cpp:1494:27: [31mstyle:[39m Variable 'i_breakenergyV' is assigned a value that is never used. [unreadVariable][0m
    double i_breakenergyV = 0.;
                          ^
[1msrc/VEnergySpectrum.cpp:1495:27: [31mstyle:[39m Variable 'i_breakenergyE' is assigned a value that is never used. [unreadVariable][0m
    double i_breakenergyE = 0.;
                          ^
[1msrc/VEnergySpectrum.cpp:1496:22: [31mstyle:[39m Variable 'i_index2V' is assigned a value that is never used. [unreadVariable][0m
    double i_index2V = 0.;
                     ^
[1msrc/VEnergySpectrum.cpp:1497:22: [31mstyle:[39m Variable 'i_index2E' is assigned a value that is never used. [unreadVariable][0m
    double i_index2E = 0.;
                     ^
[1msrc/VEnergySpectrum.cpp:1588:17: [31mstyle:[39m Variable 'ye_l' is assigned a value that is never used. [unreadVariable][0m
    double ye_l = 0.;
                ^
[1msrc/VEnergySpectrum.cpp:1589:17: [31mstyle:[39m Variable 'ye_u' is assigned a value that is never used. [unreadVariable][0m
    double ye_u = 0.;
                ^
[1msrc/VEnergySpectrumfromLiterature.cpp:278:12: [31mstyle:[39m The scope of the variable 'ymin' can be reduced. [variableScope][0m
    double ymin = 0.;
           ^
[1msrc/VEnergySpectrumfromLiterature.cpp:279:12: [31mstyle:[39m The scope of the variable 'ymax' can be reduced. [variableScope][0m
    double ymax = 0.;
           ^
[1msrc/VEnergySpectrumfromLiterature.cpp:399:10: [31mstyle:[39m The scope of the variable 'h_exponent' can be reduced. [variableScope][0m
    char h_exponent[600];
         ^
[1msrc/VEnergySpectrumfromLiterature.cpp:666:10: [31mstyle:[39m The scope of the variable 'hname' can be reduced. [variableScope][0m
    char hname[600];
         ^
[1msrc/VEnergySpectrumfromLiterature.cpp:667:10: [31mstyle:[39m The scope of the variable 'htitle' can be reduced. [variableScope][0m
    char htitle[600];
         ^
[1msrc/VEnergySpectrumfromLiterature.cpp:668:11: [31mstyle:[39m The scope of the variable 'hNull' can be reduced. [variableScope][0m
    TH1D* hNull = 0;
          ^
[1msrc/VEnergySpectrumfromLiterature.cpp:277:14: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
    double x = 0.;
             ^
[1msrc/VEnergySpectrumfromLiterature.cpp:278:17: [31mstyle:[39m Variable 'ymin' is assigned a value that is never used. [unreadVariable][0m
    double ymin = 0.;
                ^
[1msrc/VEnergySpectrumfromLiterature.cpp:279:17: [31mstyle:[39m Variable 'ymax' is assigned a value that is never used. [unreadVariable][0m
    double ymax = 0.;
                ^
[1msrc/VEnergySpectrumfromLiterature.cpp:668:17: [31mstyle:[39m Variable 'hNull' is assigned a value that is never used. [unreadVariable][0m
    TH1D* hNull = 0;
                ^
[1msrc/VEnergyThreshold.cpp:716:18: [31mstyle:[39m The scope of the variable 'i_npoints' can be reduced. [variableScope][0m
    unsigned int i_npoints = 500;
                 ^
[1msrc/VEnergyThreshold.cpp:717:12: [31mstyle:[39m The scope of the variable 'i_logE_min' can be reduced. [variableScope][0m
    double i_logE_min = -2.;
           ^
[1msrc/VEnergyThreshold.cpp:718:12: [31mstyle:[39m The scope of the variable 'i_logE_max' can be reduced. [variableScope][0m
    double i_logE_max = 1.;
           ^
[1msrc/VEnergyThreshold.cpp:719:12: [31mstyle:[39m The scope of the variable 'i_EffA' can be reduced. [variableScope][0m
    double i_EffA = 0.;
           ^
[1msrc/VEnergyThreshold.cpp:720:12: [31mstyle:[39m The scope of the variable 'i_DiffFlux' can be reduced. [variableScope][0m
    double i_DiffFlux = 0.;
           ^
[1msrc/VEnergyThreshold.cpp:726:16: [31mstyle:[39m The scope of the variable 'a' can be reduced. [variableScope][0m
        double a, b;
               ^
[1msrc/VEnergyThreshold.cpp:726:19: [31mstyle:[39m The scope of the variable 'b' can be reduced. [variableScope][0m
        double a, b;
                  ^
[1msrc/VEnergyThreshold.cpp:728:16: [31mstyle:[39m The scope of the variable 'i_maxFlux' can be reduced. [variableScope][0m
        double i_maxFlux = 0.;
               ^
[1msrc/VEnergyThreshold.cpp:729:16: [31mstyle:[39m The scope of the variable 'i_maxEnergy' can be reduced. [variableScope][0m
        double i_maxEnergy = -99.;
               ^
[1msrc/VEnergyThreshold.cpp:738:20: [31mstyle:[39m The scope of the variable 'e' can be reduced. [variableScope][0m
            double e = 0.;
                   ^
[1msrc/VEnergyThreshold.cpp:620:16: [31mstyle:[39m Variable 'c' is assigned a value that is never used. [unreadVariable][0m
    TCanvas* c = 0;
               ^
[1msrc/VEnergyThreshold.cpp:717:23: [31mstyle:[39m Variable 'i_logE_min' is assigned a value that is never used. [unreadVariable][0m
    double i_logE_min = -2.;
                      ^
[1msrc/VEnergyThreshold.cpp:718:23: [31mstyle:[39m Variable 'i_logE_max' is assigned a value that is never used. [unreadVariable][0m
    double i_logE_max = 1.;
                      ^
[1msrc/VEnergyThreshold.cpp:719:19: [31mstyle:[39m Variable 'i_EffA' is assigned a value that is never used. [unreadVariable][0m
    double i_EffA = 0.;
                  ^
[1msrc/VEnergyThreshold.cpp:720:23: [31mstyle:[39m Variable 'i_DiffFlux' is assigned a value that is never used. [unreadVariable][0m
    double i_DiffFlux = 0.;
                      ^
[1msrc/VEnergyThreshold.cpp:738:22: [31mstyle:[39m Variable 'e' is assigned a value that is never used. [unreadVariable][0m
            double e = 0.;
                     ^
[1msrc/VEventLoop.cpp:932:13: [31mstyle:[39m Condition 'i_res' is always true [knownConditionTrueFalse][0m
        if( i_res )
            ^
[1msrc/VEventLoop.cpp:926:13: [2mnote:[0m Assuming that condition '!i_res' is not redundant
        if( !i_res )
            ^
[1msrc/VEventLoop.cpp:932:13: [2mnote:[0m Condition 'i_res' is always true
        if( i_res )
            ^
[1msrc/VEvndispData.cpp:328:18: [31mstyle:[39m The scope of the variable 'iNMethods' can be reduced. [variableScope][0m
    unsigned int iNMethods = 0;
                 ^
[1msrc/VEvndispData.cpp:328:28: [31mstyle:[39m Variable 'iNMethods' is assigned a value that is never used. [unreadVariable][0m
    unsigned int iNMethods = 0;
                           ^
[1msrc/VEvndispReconstructionParameter.cpp:215:25: [31mstyle:[39m Condition '!iArrayCut' is always true [knownConditionTrueFalse][0m
                    if( !iArrayCut )
                        ^
[1msrc/VEvndispReconstructionParameter.cpp:207:33: [2mnote:[0m Assignment 'iArrayCut=false', assigned value is 0
                    iArrayCut = false;
                                ^
[1msrc/VEvndispReconstructionParameter.cpp:215:25: [2mnote:[0m Condition '!iArrayCut' is always true
                    if( !iArrayCut )
                        ^
[1msrc/VEvndispReconstructionParameter.cpp:1195:16: [31mstyle:[39m Variable 't_temp' is assigned a value that is never used. [unreadVariable][0m
    int t_temp = 0;
               ^
[1msrc/VEvndispReconstructionParameter.cpp:1443:17: [31mstyle:[39m Variable 'v' is assigned a value that is never used. [unreadVariable][0m
    ULong64_t v = 0;
                ^
[1msrc/VEvndispReconstructionParameter.cpp:1473:17: [31mstyle:[39m Variable 'v' is assigned a value that is never used. [unreadVariable][0m
    ULong64_t v = 0;
                ^
[1msrc/VEvndispReconstructionParameter.cpp:1474:18: [31mstyle:[39m Variable 'v2' is assigned a value that is never used. [unreadVariable][0m
    ULong64_t v2 = 0;
                 ^
[1msrc/VEvndispReconstructionParameter.cpp:1519:17: [31mstyle:[39m Variable 'v' is assigned a value that is never used. [unreadVariable][0m
    ULong64_t v = 0;
                ^
[1msrc/VEvndispReconstructionParameter.cpp:1551:17: [31mstyle:[39m Variable 'v' is assigned a value that is never used. [unreadVariable][0m
    ULong64_t v = 0;
                ^
[1msrc/VEvndispReconstructionParameter.cpp:1552:18: [31mstyle:[39m Variable 'v2' is assigned a value that is never used. [unreadVariable][0m
    ULong64_t v2 = 0;
                 ^
[1msrc/VEvndispReconstructionParameter.cpp:42:81: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( fTel_type_iter = fTel_type.begin(); fTel_type_iter != fTel_type.end(); fTel_type_iter++ )
                                                                                ^
[1msrc/VEvndispReconstructionParameter.cpp:1426:81: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( fTel_type_iter = fTel_type.begin(); fTel_type_iter != fTel_type.end(); fTel_type_iter++ )
                                                                                ^
[1msrc/VEvndispReconstructionParameter.cpp:1445:81: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( fTel_type_iter = fTel_type.begin(); fTel_type_iter != fTel_type.end(); fTel_type_iter++ )
                                                                                ^
[1msrc/VEvndispReconstructionParameter.cpp:1476:81: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( fTel_type_iter = fTel_type.begin(); fTel_type_iter != fTel_type.end(); fTel_type_iter++ )
                                                                                ^
[1msrc/VEvndispReconstructionParameter.cpp:1502:81: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( fTel_type_iter = fTel_type.begin(); fTel_type_iter != fTel_type.end(); fTel_type_iter++ )
                                                                                ^
[1msrc/VEvndispReconstructionParameter.cpp:1522:81: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( fTel_type_iter = fTel_type.begin(); fTel_type_iter != fTel_type.end(); fTel_type_iter++ )
                                                                                ^
[1msrc/VExposure.cpp:134:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( fDebug )
            ^
[1msrc/VExposure.cpp:130:13: [2mnote:[0m First condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:134:13: [2mnote:[0m Second condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:303:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( fDebug )
            ^
[1msrc/VExposure.cpp:299:13: [2mnote:[0m First condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:303:13: [2mnote:[0m Second condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:341:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( fDebug )
            ^
[1msrc/VExposure.cpp:337:13: [2mnote:[0m First condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:341:13: [2mnote:[0m Second condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:463:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( fDebug )
            ^
[1msrc/VExposure.cpp:458:13: [2mnote:[0m First condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:463:13: [2mnote:[0m Second condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:635:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( fDebug )
            ^
[1msrc/VExposure.cpp:631:13: [2mnote:[0m First condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:635:13: [2mnote:[0m Second condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:717:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( fDebug )
            ^
[1msrc/VExposure.cpp:712:13: [2mnote:[0m First condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:717:13: [2mnote:[0m Second condition
        if( fDebug )
            ^
[1msrc/VExposure.cpp:2973:17: [31mstyle:[39m Condition '!db_row' is always false [knownConditionTrueFalse][0m
            if( !db_row )
                ^
[1msrc/VExposure.cpp:2971:32: [2mnote:[0m Assuming that condition 'db_row=db_res->Next()' is not redundant
        while( TSQLRow* db_row = db_res->Next() )
                               ^
[1msrc/VExposure.cpp:2973:17: [2mnote:[0m Condition '!db_row' is always false
            if( !db_row )
                ^
[1msrc/VExposure.cpp:2347:21: [31mstyle:[39m Variable 'fconfig' is reassigned a value before the old one has been used. [redundantAssignment][0m
            fconfig = "1234";
                    ^
[1msrc/VExposure.cpp:2285:17: [2mnote:[0m fconfig is assigned
        fconfig = "";
                ^
[1msrc/VExposure.cpp:2347:21: [2mnote:[0m fconfig is overwritten
            fconfig = "1234";
                    ^
[1msrc/VExposure.cpp:995:12: [31mstyle:[39m The scope of the variable 'xl' can be reduced. [variableScope][0m
    double xl = 0.;
           ^
[1msrc/VExposure.cpp:1105:12: [31mstyle:[39m The scope of the variable 'xl' can be reduced. [variableScope][0m
    double xl = 0.;
           ^
[1msrc/VExposure.cpp:1371:12: [31mstyle:[39m The scope of the variable 'l' can be reduced. [variableScope][0m
    double l = 0.;
           ^
[1msrc/VExposure.cpp:1372:12: [31mstyle:[39m The scope of the variable 'b' can be reduced. [variableScope][0m
    double b = 0.;
           ^
[1msrc/VExposure.cpp:1839:12: [31mstyle:[39m The scope of the variable 'r_dist' can be reduced. [variableScope][0m
    double r_dist = 0.;
           ^
[1msrc/VExposure.cpp:2080:12: [31mstyle:[39m The scope of the variable 'iDiff' can be reduced. [variableScope][0m
    double iDiff = 0.;
           ^
[1msrc/VExposure.cpp:1083:22: [31mstyle:[39m Local variable 'l' shadows outer variable [shadowVariable][0m
            for( int l = i_l_start; l <= i_l_stop; l++ )
                     ^
[1msrc/VExposure.cpp:1039:16: [2mnote:[0m Shadowed declaration
        double l = fRunGalLong1958[i];
               ^
[1msrc/VExposure.cpp:1083:22: [2mnote:[0m Shadow variable
            for( int l = i_l_start; l <= i_l_stop; l++ )
                     ^
[1msrc/VExposure.cpp:2205:13: [31mstyle:[39m Local variable 'k' shadows outer variable [shadowVariable][0m
        int k = 0;
            ^
[1msrc/VExposure.cpp:2104:9: [2mnote:[0m Shadowed declaration
    int k = 0;
        ^
[1msrc/VExposure.cpp:2205:13: [2mnote:[0m Shadow variable
        int k = 0;
            ^
[1msrc/VExposure.cpp:995:15: [31mstyle:[39m Variable 'xl' is assigned a value that is never used. [unreadVariable][0m
    double xl = 0.;
              ^
[1msrc/VExposure.cpp:996:15: [31mstyle:[39m Variable 'xb' is assigned a value that is never used. [unreadVariable][0m
    double xb = 0.;
              ^
[1msrc/VExposure.cpp:997:12: [31mstyle:[39m Variable 'bl' is assigned a value that is never used. [unreadVariable][0m
    int bl = 0;
           ^
[1msrc/VExposure.cpp:998:12: [31mstyle:[39m Variable 'bb' is assigned a value that is never used. [unreadVariable][0m
    int bb = 0;
           ^
[1msrc/VExposure.cpp:1033:19: [31mstyle:[39m Variable 'r_dist' is assigned a value that is never used. [unreadVariable][0m
    double r_dist = 0.;
                  ^
[1msrc/VExposure.cpp:1105:15: [31mstyle:[39m Variable 'xl' is assigned a value that is never used. [unreadVariable][0m
    double xl = 0.;
              ^
[1msrc/VExposure.cpp:1106:15: [31mstyle:[39m Variable 'xb' is assigned a value that is never used. [unreadVariable][0m
    double xb = 0.;
              ^
[1msrc/VExposure.cpp:1107:12: [31mstyle:[39m Variable 'bl' is assigned a value that is never used. [unreadVariable][0m
    int bl = 0;
           ^
[1msrc/VExposure.cpp:1108:12: [31mstyle:[39m Variable 'bb' is assigned a value that is never used. [unreadVariable][0m
    int bb = 0;
           ^
[1msrc/VExposure.cpp:1341:15: [31mstyle:[39m Variable 'ra' is assigned a value that is never used. [unreadVariable][0m
    double ra = 0.;
              ^
[1msrc/VExposure.cpp:1342:16: [31mstyle:[39m Variable 'dec' is assigned a value that is never used. [unreadVariable][0m
    double dec = 0.;
               ^
[1msrc/VExposure.cpp:1343:19: [31mstyle:[39m Variable 'l_name' is assigned a value that is never used. [unreadVariable][0m
    string l_name = "";
                  ^
[1msrc/VExposure.cpp:1371:14: [31mstyle:[39m Variable 'l' is assigned a value that is never used. [unreadVariable][0m
    double l = 0.;
             ^
[1msrc/VExposure.cpp:1372:14: [31mstyle:[39m Variable 'b' is assigned a value that is never used. [unreadVariable][0m
    double b = 0.;
             ^
[1msrc/VExposure.cpp:1373:19: [31mstyle:[39m Variable 'l_name' is assigned a value that is never used. [unreadVariable][0m
    string l_name = "";
                  ^
[1msrc/VExposure.cpp:1691:21: [31mstyle:[39m Variable 'r_centre' is assigned a value that is never used. [unreadVariable][0m
    double r_centre = 0.;
                    ^
[1msrc/VExposure.cpp:1839:19: [31mstyle:[39m Variable 'r_dist' is assigned a value that is never used. [unreadVariable][0m
    double r_dist = 0.;
                  ^
[1msrc/VExposure.cpp:2080:18: [31mstyle:[39m Variable 'iDiff' is assigned a value that is never used. [unreadVariable][0m
    double iDiff = 0.;
                 ^
[1msrc/VExposure.cpp:2105:15: [31mstyle:[39m Variable 'itemp' is assigned a value that is never used. [unreadVariable][0m
    int itemp = 0;
              ^
[1msrc/VExposure.cpp:2205:15: [31mstyle:[39m Variable 'k' is assigned a value that is never used. [unreadVariable][0m
        int k = 0;
              ^
[1msrc/VExposure.cpp:2748:22: [31mstyle:[39m Variable 'checksum' is assigned a value that is never used. [unreadVariable][0m
    TString checksum = "";
                     ^
[1msrc/VFITS.cpp:1303:50: [31merror:[39m Undefined behavior: Variable 'tType[h]' is used as parameter and destination in sprintf(). [sprintfOverlappingData][0m
                sprintf( tType[h], "%s_%d", tType[h], f++ );
                                                 ^
[1msrc/VFluxAndLightCurveUtilities.cpp:113:12: [31mstyle:[39m The scope of the variable 'iP' can be reduced. [variableScope][0m
    double iP = 0.;
           ^
[1msrc/VFluxAndLightCurveUtilities.cpp:113:15: [31mstyle:[39m Variable 'iP' is assigned a value that is never used. [unreadVariable][0m
    double iP = 0.;
              ^
[1msrc/VFluxDataPoint.cpp:373:12: [31mstyle:[39m The scope of the variable 'ieff_mean' can be reduced. [variableScope][0m
    double ieff_mean = 0.;
           ^
[1msrc/VFluxDataPoint.cpp:374:12: [31mstyle:[39m The scope of the variable 'e0' can be reduced. [variableScope][0m
    double e0 = 0.;
           ^
[1msrc/VFluxDataPoint.cpp:375:12: [31mstyle:[39m The scope of the variable 'e1' can be reduced. [variableScope][0m
    double e1 = 0.;
           ^
[1msrc/VFluxDataPoint.cpp:376:12: [31mstyle:[39m The scope of the variable 'e2' can be reduced. [variableScope][0m
    double e2 = 0.;
           ^
[1msrc/VFluxDataPoint.cpp:373:22: [31mstyle:[39m Variable 'ieff_mean' is assigned a value that is never used. [unreadVariable][0m
    double ieff_mean = 0.;
                     ^
[1msrc/VFluxDataPoint.cpp:374:15: [31mstyle:[39m Variable 'e0' is assigned a value that is never used. [unreadVariable][0m
    double e0 = 0.;
              ^
[1msrc/VFluxDataPoint.cpp:375:15: [31mstyle:[39m Variable 'e1' is assigned a value that is never used. [unreadVariable][0m
    double e1 = 0.;
              ^
[1msrc/VFluxDataPoint.cpp:376:15: [31mstyle:[39m Variable 'e2' is assigned a value that is never used. [unreadVariable][0m
    double e2 = 0.;
              ^
[1msrc/VGammaHadronCuts.cpp:2632:87: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( iIter = fTMVASignalEfficiency.begin(); iIter != fTMVASignalEfficiency.end(); iIter++ )
                                                                                      ^
[1msrc/VGrIsuAnalyzer.cpp:246:11: [31mstyle:[39m The scope of the variable 'totweight' can be reduced. [variableScope][0m
    float totweight = 0.;
          ^
[1msrc/VGrIsuAnalyzer.cpp:247:11: [31mstyle:[39m The scope of the variable 'a1' can be reduced. [variableScope][0m
    float a1 = 0.;
          ^
[1msrc/VGrIsuAnalyzer.cpp:248:11: [31mstyle:[39m The scope of the variable 'a2' can be reduced. [variableScope][0m
    float a2 = 0.;
          ^
[1msrc/VGrIsuAnalyzer.cpp:249:11: [31mstyle:[39m The scope of the variable 'b1' can be reduced. [variableScope][0m
    float b1 = 0.;
          ^
[1msrc/VGrIsuAnalyzer.cpp:250:11: [31mstyle:[39m The scope of the variable 'b2' can be reduced. [variableScope][0m
    float b2 = 0.;
          ^
[1msrc/VGrIsuAnalyzer.cpp:251:11: [31mstyle:[39m The scope of the variable 'c1' can be reduced. [variableScope][0m
    float c1 = 0.;
          ^
[1msrc/VGrIsuAnalyzer.cpp:252:11: [31mstyle:[39m The scope of the variable 'c2' can be reduced. [variableScope][0m
    float c2 = 0.;
          ^
[1msrc/VGrIsuAnalyzer.cpp:253:11: [31mstyle:[39m The scope of the variable 'gamma' can be reduced. [variableScope][0m
    float gamma = 0.;
          ^
[1msrc/VGrIsuAnalyzer.cpp:254:11: [31mstyle:[39m The scope of the variable 'D' can be reduced. [variableScope][0m
    float D = 0.;
          ^
[1msrc/VGrIsuAnalyzer.cpp:255:11: [31mstyle:[39m The scope of the variable 'm2' can be reduced. [variableScope][0m
    float m2 = 0.;
          ^
[1msrc/VGrIsuAnalyzer.cpp:256:11: [31mstyle:[39m The scope of the variable 'd' can be reduced. [variableScope][0m
    float d = 0.0;
          ^
[1msrc/VGrIsuAnalyzer.cpp:253:17: [31mstyle:[39m Variable 'gamma' is assigned a value that is never used. [unreadVariable][0m
    float gamma = 0.;
                ^
[1msrc/VGrIsuAnalyzer.cpp:254:13: [31mstyle:[39m Variable 'D' is assigned a value that is never used. [unreadVariable][0m
    float D = 0.;
            ^
[1msrc/VGrIsuAnalyzer.cpp:255:14: [31mstyle:[39m Variable 'm2' is assigned a value that is never used. [unreadVariable][0m
    float m2 = 0.;
             ^
[1msrc/VGrIsuAnalyzer.cpp:256:13: [31mstyle:[39m Variable 'd' is assigned a value that is never used. [unreadVariable][0m
    float d = 0.0;
            ^
[1msrc/VGrIsuReader.cpp:321:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( hname, "hped_%d_%d_%d", i, fSumWindow[i], j );
            ^
[1msrc/VGrIsuReader.cpp:321:13: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( hname, "hped_%d_%d_%d", i, fSumWindow[i], j );
            ^
[1msrc/VGrIsuReader.cpp:382:5: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
    sprintf( iTreeName, "pedTree_%d", i );
    ^
[1msrc/VGrIsuReader.cpp:1231:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( itree, "trace_%d", i );
            ^
[1msrc/VGrIsuReader.cpp:1416:34: [31mstyle:[39m The scope of the variable 'iTemp' can be reduced. [variableScope][0m
                    unsigned int iTemp = 0;
                                 ^
[1msrc/VGrIsuReader.cpp:1544:17: [31mstyle:[39m The scope of the variable 'iPix' can be reduced. [variableScope][0m
            int iPix = 0;
                ^
[1msrc/VGrIsuReader.cpp:1566:22: [31mstyle:[39m The scope of the variable 'iNboard' can be reduced. [variableScope][0m
        unsigned int iNboard = 10;
                     ^
[1msrc/VGrIsuReader.cpp:1570:17: [31mstyle:[39m The scope of the variable 'iPix' can be reduced. [variableScope][0m
            int iPix = 0;
                ^
[1msrc/VGrIsuReader.cpp:484:23: [31mstyle:[39m Local variable 'i_telID' shadows outer variable [shadowVariable][0m
    for( unsigned int i_telID = 0; i_telID < fNTel; i_telID++ )
                      ^
[1msrc/VGrIsuReader.cpp:469:18: [2mnote:[0m Shadowed declaration
    unsigned int i_telID = 0;
                 ^
[1msrc/VGrIsuReader.cpp:484:23: [2mnote:[0m Shadow variable
    for( unsigned int i_telID = 0; i_telID < fNTel; i_telID++ )
                      ^
[1msrc/VGrIsuReader.cpp:504:39: [31mstyle:[39m Local variable 'i_telID' shadows outer variable [shadowVariable][0m
                    for( unsigned int i_telID = 0; i_telID < fNTel; i_telID++ )
                                      ^
[1msrc/VGrIsuReader.cpp:469:18: [2mnote:[0m Shadowed declaration
    unsigned int i_telID = 0;
                 ^
[1msrc/VGrIsuReader.cpp:504:39: [2mnote:[0m Shadow variable
                    for( unsigned int i_telID = 0; i_telID < fNTel; i_telID++ )
                                      ^
[1msrc/VGrIsuReader.cpp:469:26: [31mstyle:[39m Variable 'i_telID' is assigned a value that is never used. [unreadVariable][0m
    unsigned int i_telID = 0;
                         ^
[1msrc/VGrIsuReader.cpp:476:21: [31mstyle:[39m Variable 'meanRMS2' is assigned a value that is never used. [unreadVariable][0m
    double meanRMS2 = 0.;
                    ^
[1msrc/VGrIsuReader.cpp:696:26: [31mstyle:[39m Variable 'iPStart' is assigned a value that is never used. [unreadVariable][0m
    unsigned int iPStart = 0;
                         ^
[1msrc/VGrIsuReader.cpp:746:20: [31mstyle:[39m Variable 'is_line' is assigned a value that is never used. [unreadVariable][0m
    string is_line = "";
                   ^
[1msrc/VGrIsuReader.cpp:1315:22: [31mstyle:[39m Variable 'i_traceValue' is assigned a value that is never used. [unreadVariable][0m
    int i_traceValue = 0;
                     ^
[1msrc/VGrIsuReader.cpp:1316:21: [31mstyle:[39m Variable 'i_newPed' is assigned a value that is never used. [unreadVariable][0m
    double i_newPed = 0.;
                    ^
[1msrc/VGrIsuReader.cpp:1317:19: [31mstyle:[39m Variable 'i_newPedN' is assigned a value that is never used. [unreadVariable][0m
    int i_newPedN = 0;
                  ^
[1msrc/VGrIsuReader.cpp:1327:22: [31mstyle:[39m Variable 'i_newPed' is assigned a value that is never used. [unreadVariable][0m
            i_newPed = 0.;
                     ^
[1msrc/VGrIsuReader.cpp:1331:30: [31mstyle:[39m Variable 'i_traceValue' is assigned a value that is never used. [unreadVariable][0m
                i_traceValue = 0;
                             ^
[1msrc/VGrIsuReader.cpp:1352:38: [31mstyle:[39m Variable 'i_newPed' is assigned a value that is never used. [unreadVariable][0m
                            i_newPed += ( double )i_traceValue;
                                     ^
[1msrc/VGrIsuReader.cpp:1371:38: [31mstyle:[39m Variable 'i_newPed' is assigned a value that is never used. [unreadVariable][0m
                            i_newPed += ( double )i_traceValue;
                                     ^
[1msrc/VHistogramUtilities.cpp:990:15: [31mstyle:[39m Variable 'nBinY_min' is reassigned a value before the old one has been used. [redundantAssignment][0m
    nBinY_min = 1;
              ^
[1msrc/VHistogramUtilities.cpp:987:19: [2mnote:[0m nBinY_min is assigned
        nBinY_min = 1;
                  ^
[1msrc/VHistogramUtilities.cpp:990:15: [2mnote:[0m nBinY_min is overwritten
    nBinY_min = 1;
              ^
[1msrc/VHistogramUtilities.cpp:318:12: [31mstyle:[39m The scope of the variable 'i_sum' can be reduced. [variableScope][0m
    double i_sum = 0.;
           ^
[1msrc/VHistogramUtilities.cpp:429:9: [31mstyle:[39m The scope of the variable 'nbin' can be reduced. [variableScope][0m
    int nbin = 100;
        ^
[1msrc/VHistogramUtilities.cpp:430:12: [31mstyle:[39m The scope of the variable 'xmin' can be reduced. [variableScope][0m
    double xmin = -7.1;
           ^
[1msrc/VHistogramUtilities.cpp:431:12: [31mstyle:[39m The scope of the variable 'xmax' can be reduced. [variableScope][0m
    double xmax = 10.9;
           ^
[1msrc/VHistogramUtilities.cpp:649:11: [31mstyle:[39m The scope of the variable 'h2D' can be reduced. [variableScope][0m
    TH2F* h2D = 0;
          ^
[1msrc/VHistogramUtilities.cpp:650:10: [31mstyle:[39m The scope of the variable 'hname' can be reduced. [variableScope][0m
    char hname[200];
         ^
[1msrc/VHistogramUtilities.cpp:713:12: [31mstyle:[39m The scope of the variable 'i_x_low' can be reduced. [variableScope][0m
    double i_x_low = 0.;
           ^
[1msrc/VHistogramUtilities.cpp:714:12: [31mstyle:[39m The scope of the variable 'i_x_high' can be reduced. [variableScope][0m
    double i_x_high = 0.;
           ^
[1msrc/VHistogramUtilities.cpp:318:18: [31mstyle:[39m Variable 'i_sum' is assigned a value that is never used. [unreadVariable][0m
    double i_sum = 0.;
                 ^
[1msrc/VHistogramUtilities.cpp:649:15: [31mstyle:[39m Variable 'h2D' is assigned a value that is never used. [unreadVariable][0m
    TH2F* h2D = 0;
              ^
[1msrc/VHistogramUtilities.cpp:713:20: [31mstyle:[39m Variable 'i_x_low' is assigned a value that is never used. [unreadVariable][0m
    double i_x_low = 0.;
                   ^
[1msrc/VHistogramUtilities.cpp:714:21: [31mstyle:[39m Variable 'i_x_high' is assigned a value that is never used. [unreadVariable][0m
    double i_x_high = 0.;
                    ^
[1msrc/VHoughTransform.cpp:193:43: [31mwarning:[39m Identical inner 'if' condition is always true. [identicalInnerCondition][0m
                if( fCircleCoordinates[2] != 0 )// If the r coordinate is not zero (end of list), do this
                                          ^
[1msrc/VHoughTransform.cpp:188:78: [2mnote:[0m outer condition: fCircleCoordinates[2]!=0
            for( int iCircleParametrizationIndex = 0 ; fCircleCoordinates[2] != 0 ; iCircleParametrizationIndex++ ) //Loop over circle parametrizations until the r coordinate is zero (Last entries are 0,0,0)
                                                                             ^
[1msrc/VHoughTransform.cpp:193:43: [2mnote:[0m identical inner condition: fCircleCoordinates[2]!=0
                if( fCircleCoordinates[2] != 0 )// If the r coordinate is not zero (end of list), do this
                                          ^
[1msrc/VHoughTransform.cpp:103:30: [31mstyle:[39m Variable 'fPixelXCoordinate' is assigned a value that is never used. [unreadVariable][0m
    double fPixelXCoordinate = 0; //The X coordinate of a pixel
                             ^
[1msrc/VHoughTransform.cpp:104:30: [31mstyle:[39m Variable 'fPixelYCoordinate' is assigned a value that is never used. [unreadVariable][0m
    double fPixelYCoordinate = 0; //The Y coordinate of a pixel
                             ^
[1msrc/VImageAnalyzer.cpp:864:22: [31mstyle:[39m The scope of the variable 'chanID' can be reduced. [variableScope][0m
        unsigned int chanID = 0;
                     ^
[1msrc/VImageBaseAnalyzer.cpp:239:22: [31mstyle:[39m The scope of the variable 'i_channelHitID' can be reduced. [variableScope][0m
        unsigned int i_channelHitID = 0;
                     ^
[1msrc/VImageBaseAnalyzer.cpp:325:16: [31mstyle:[39m The scope of the variable 'crateTZero' can be reduced. [variableScope][0m
        double crateTZero = 0.;
               ^
[1msrc/VImageBaseAnalyzer.cpp:326:16: [31mstyle:[39m The scope of the variable 'offset' can be reduced. [variableScope][0m
        double offset = 0.;
               ^
[1msrc/VImageBaseAnalyzer.cpp:1058:22: [31mstyle:[39m The scope of the variable 'iPix' can be reduced. [variableScope][0m
        unsigned int iPix = 0;
                     ^
[1msrc/VImageBaseAnalyzer.cpp:1248:22: [31mstyle:[39m The scope of the variable 'i_channelHitID' can be reduced. [variableScope][0m
        unsigned int i_channelHitID = 0;
                     ^
[1msrc/VImageBaseAnalyzer.cpp:1294:22: [31mstyle:[39m The scope of the variable 'i_channelHitID' can be reduced. [variableScope][0m
        unsigned int i_channelHitID = 0;
                     ^
[1msrc/VImageBaseAnalyzer.cpp:1058:27: [31mstyle:[39m Variable 'iPix' is assigned a value that is never used. [unreadVariable][0m
        unsigned int iPix = 0;
                          ^
[1msrc/VImageCleaning.cpp:693:36: [31mstyle:[39m The statement 'if (VALIDITYBOUND[idx]!=refvalidity) VALIDITYBOUND[idx]=refvalidity' is logically equivalent to 'VALIDITYBOUND[idx]=refvalidity'. [duplicateConditionalAssign][0m
            if( VALIDITYBOUND[idx] != refvalidity )
                                   ^
[1msrc/VImageCleaning.cpp:695:36: [2mnote:[0m Assignment 'VALIDITYBOUND[idx]=refvalidity'
                VALIDITYBOUND[idx] = refvalidity;
                                   ^
[1msrc/VImageCleaning.cpp:693:36: [2mnote:[0m Condition 'VALIDITYBOUND[idx]!=refvalidity' is redundant
            if( VALIDITYBOUND[idx] != refvalidity )
                                   ^
[1msrc/VImageCleaning.cpp:2610:12: [31mstyle:[39m The scope of the variable 'i_cenx' can be reduced. [variableScope][0m
    double i_cenx, i_ceny;
           ^
[1msrc/VImageCleaning.cpp:2610:20: [31mstyle:[39m The scope of the variable 'i_ceny' can be reduced. [variableScope][0m
    double i_cenx, i_ceny;
                   ^
[1msrc/VImageCleaning.cpp:2686:11: [31mstyle:[39m The scope of the variable 'i_clusterX' can be reduced. [variableScope][0m
    float i_clusterX, i_clusterY;  // c.o.g. (cluster)
          ^
[1msrc/VImageCleaning.cpp:2686:23: [31mstyle:[39m The scope of the variable 'i_clusterY' can be reduced. [variableScope][0m
    float i_clusterX, i_clusterY;  // c.o.g. (cluster)
                      ^
[1msrc/VImageCleaning.cpp:2687:11: [31mstyle:[39m The scope of the variable 'i_clusterXpos' can be reduced. [variableScope][0m
    float i_clusterXpos;           // position on major axis
          ^
[1msrc/VImageCleaning.cpp:2688:11: [31mstyle:[39m The scope of the variable 'i_clusterXtime' can be reduced. [variableScope][0m
    float i_clusterXtime;          // time on major axis
          ^
[1msrc/VImageCleaning.cpp:2969:9: [31mstyle:[39m The scope of the variable 'i_cluster' can be reduced. [variableScope][0m
    int i_cluster = 0;
        ^
[1msrc/VImageCleaning.cpp:2998:14: [31mstyle:[39m The scope of the variable 'dont_remove' can be reduced. [variableScope][0m
        bool dont_remove = false;
             ^
[1msrc/VImageCleaning.cpp:3260:22: [31mstyle:[39m The scope of the variable 'i_channelHitID' can be reduced. [variableScope][0m
        unsigned int i_channelHitID = 0;
                     ^
[1msrc/VImageCleaning.cpp:3299:22: [31mstyle:[39m The scope of the variable 'k' can be reduced. [variableScope][0m
        unsigned int k = 0;
                     ^
[1msrc/VImageCleaning.cpp:2122:11: [31mstyle:[39m Variable 'ThreshFreq' can be declared with const [constVariable][0m
    float ThreshFreq[6] = {8.5E6, 2.4E6, 4.2E6, 1.5E5, 1.1E7, 4.0E5};
          ^
[1msrc/VImageCleaning.cpp:619:11: [31mstyle:[39m Variable 'CombFactor' can be declared with const [constVariable][0m
    float CombFactor[5] = {60000.*20., 950000., 130000., 6000., 2.}; //for 2400 pixels
          ^
[1msrc/VImageCleaning.cpp:2155:21: [31mstyle:[39m Variable 'RATE[thbin]' is assigned a value that is never used. [unreadVariable][0m
        RATE[thbin] = 0;
                    ^
[1msrc/VImageCleaning.cpp:2174:37: [31mstyle:[39m Variable 'RATE[thbin]' is assigned a value that is never used. [unreadVariable][0m
                        RATE[thbin] += 1.;
                                    ^
[1msrc/VImageCleaning.cpp:2701:20: [31mstyle:[39m Variable 'i_clusterX' is assigned a value that is never used. [unreadVariable][0m
        i_clusterX = 0.;
                   ^
[1msrc/VImageCleaning.cpp:2702:20: [31mstyle:[39m Variable 'i_clusterY' is assigned a value that is never used. [unreadVariable][0m
        i_clusterY = 0.;
                   ^
[1msrc/VImageCleaning.cpp:2703:23: [31mstyle:[39m Variable 'i_clusterXpos' is assigned a value that is never used. [unreadVariable][0m
        i_clusterXpos = 0.;
                      ^
[1msrc/VImageCleaning.cpp:2704:24: [31mstyle:[39m Variable 'i_clusterXtime' is assigned a value that is never used. [unreadVariable][0m
        i_clusterXtime = 0.;
                       ^
[1msrc/VImageCleaning.cpp:2969:19: [31mstyle:[39m Variable 'i_cluster' is assigned a value that is never used. [unreadVariable][0m
    int i_cluster = 0;
                  ^
[1msrc/VImageCleaning.cpp:3097:18: [31mstyle:[39m Variable 'i_neigh' is assigned a value that is never used. [unreadVariable][0m
    bool i_neigh = false;
                 ^
[1msrc/VImageCleaning.cpp:3098:35: [31mstyle:[39m Variable 'i_neighbour_size' is assigned a value that is never used. [unreadVariable][0m
    unsigned int i_neighbour_size = 0;
                                  ^
[1msrc/VImageCleaning.cpp:3099:20: [31mstyle:[39m Variable 'k' is assigned a value that is never used. [unreadVariable][0m
    unsigned int k = 0;
                   ^
[1msrc/VImageCleaning.cpp:3113:29: [31mstyle:[39m Variable 'i_neigh' is assigned a value that is never used. [unreadVariable][0m
                    i_neigh = true;
                            ^
[1msrc/VImageCleaning.cpp:3299:24: [31mstyle:[39m Variable 'k' is assigned a value that is never used. [unreadVariable][0m
        unsigned int k = 0;
                       ^
[1msrc/VImageParameterCalculation.cpp:435:13: [31mstyle:[39m Variable 'tmp' is assigned a value that is never used. [unreadVariable][0m
        tmp = 0;
            ^
[1msrc/VImageParameterFitter.cpp:278:12: [31mstyle:[39m The scope of the variable 'sum' can be reduced. [variableScope][0m
    double sum = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:284:12: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
    double x = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:285:12: [31mstyle:[39m The scope of the variable 'y' can be reduced. [variableScope][0m
    double y = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:286:12: [31mstyle:[39m The scope of the variable 'n' can be reduced. [variableScope][0m
    double n = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:287:12: [31mstyle:[39m The scope of the variable 't' can be reduced. [variableScope][0m
    double t = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:288:12: [31mstyle:[39m The scope of the variable 'tx' can be reduced. [variableScope][0m
    double tx = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:517:12: [31mstyle:[39m The scope of the variable 'sum' can be reduced. [variableScope][0m
    double sum = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:523:12: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
    double x = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:524:12: [31mstyle:[39m The scope of the variable 'y' can be reduced. [variableScope][0m
    double y = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:525:12: [31mstyle:[39m The scope of the variable 'r' can be reduced. [variableScope][0m
    double r = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:526:12: [31mstyle:[39m The scope of the variable 'x_p' can be reduced. [variableScope][0m
    double x_p = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:527:12: [31mstyle:[39m The scope of the variable 'y_p' can be reduced. [variableScope][0m
    double y_p = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:530:12: [31mstyle:[39m The scope of the variable 'n' can be reduced. [variableScope][0m
    double n = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:531:12: [31mstyle:[39m The scope of the variable 't' can be reduced. [variableScope][0m
    double t = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:532:12: [31mstyle:[39m The scope of the variable 'tx' can be reduced. [variableScope][0m
    double tx = 0.;
           ^
[1msrc/VImageParameterFitter.cpp:1245:50: [31mstyle:[39m Parameter 'par' can be declared with const [constParameter][0m
Double_t normal2DRotated( Double_t *x, Double_t *par )
                                                 ^
[1msrc/VImageParameterFitter.cpp:1245:37: [31mstyle:[39m Parameter 'x' can be declared with const [constParameter][0m
Double_t normal2DRotated( Double_t *x, Double_t *par )
                                    ^
[1msrc/VImageParameterFitter.cpp:274:88: [31mstyle:[39m Parameter 'par' can be declared with const [constParameter][0m
void get_LL_imageParameter_2DGauss( Int_t& npar, Double_t* gin, Double_t& f, Double_t* par, Int_t iflag )
                                                                                       ^
[1msrc/VImageParameterFitter.cpp:278:16: [31mstyle:[39m Variable 'sum' is assigned a value that is never used. [unreadVariable][0m
    double sum = 0.;
               ^
[1msrc/VImageParameterFitter.cpp:281:9: [31mstyle:[39m Variable 'gin' is assigned a value that is never used. [unreadVariable][0m
    gin = 0;
        ^
[1msrc/VImageParameterFitter.cpp:282:11: [31mstyle:[39m Variable 'iflag' is assigned a value that is never used. [unreadVariable][0m
    iflag = 0;
          ^
[1msrc/VImageParameterFitter.cpp:284:14: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
    double x = 0.;
             ^
[1msrc/VImageParameterFitter.cpp:285:14: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
    double y = 0.;
             ^
[1msrc/VImageParameterFitter.cpp:286:14: [31mstyle:[39m Variable 'n' is assigned a value that is never used. [unreadVariable][0m
    double n = 0.;
             ^
[1msrc/VImageParameterFitter.cpp:287:14: [31mstyle:[39m Variable 't' is assigned a value that is never used. [unreadVariable][0m
    double t = 0.;
             ^
[1msrc/VImageParameterFitter.cpp:288:15: [31mstyle:[39m Variable 'tx' is assigned a value that is never used. [unreadVariable][0m
    double tx = 0.;
              ^
[1msrc/VImageParameterFitter.cpp:517:16: [31mstyle:[39m Variable 'sum' is assigned a value that is never used. [unreadVariable][0m
    double sum = 0.;
               ^
[1msrc/VImageParameterFitter.cpp:520:9: [31mstyle:[39m Variable 'gin' is assigned a value that is never used. [unreadVariable][0m
    gin = 0;
        ^
[1msrc/VImageParameterFitter.cpp:521:11: [31mstyle:[39m Variable 'iflag' is assigned a value that is never used. [unreadVariable][0m
    iflag = 0;
          ^
[1msrc/VImageParameterFitter.cpp:523:14: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
    double x = 0.;
             ^
[1msrc/VImageParameterFitter.cpp:524:14: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
    double y = 0.;
             ^
[1msrc/VImageParameterFitter.cpp:525:14: [31mstyle:[39m Variable 'r' is assigned a value that is never used. [unreadVariable][0m
    double r = 0.;
             ^
[1msrc/VImageParameterFitter.cpp:526:16: [31mstyle:[39m Variable 'x_p' is assigned a value that is never used. [unreadVariable][0m
    double x_p = 0.;
               ^
[1msrc/VImageParameterFitter.cpp:527:16: [31mstyle:[39m Variable 'y_p' is assigned a value that is never used. [unreadVariable][0m
    double y_p = 0.;
               ^
[1msrc/VImageParameterFitter.cpp:530:14: [31mstyle:[39m Variable 'n' is assigned a value that is never used. [unreadVariable][0m
    double n = 0.;
             ^
[1msrc/VImageParameterFitter.cpp:531:14: [31mstyle:[39m Variable 't' is assigned a value that is never used. [unreadVariable][0m
    double t = 0.;
             ^
[1msrc/VImageParameterFitter.cpp:532:15: [31mstyle:[39m Variable 'tx' is assigned a value that is never used. [unreadVariable][0m
    double tx = 0.;
              ^
[1msrc/VInstrumentResponseFunction.cpp:123:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( hname, "%s_%d_%d", iName.c_str(), i, j );
            ^
[1msrc/VInstrumentResponseFunction.cpp:123:13: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( hname, "%s_%d_%d", iName.c_str(), i, j );
            ^
[1msrc/VInstrumentResponseFunctionData.cpp:623:11: [31mstyle:[39m The scope of the variable 'iTemp' can be reduced. [variableScope][0m
    TH1D* iTemp = 0;
          ^
[1msrc/VInstrumentResponseFunctionData.cpp:636:12: [31mstyle:[39m The scope of the variable 'i_energy' can be reduced. [variableScope][0m
    double i_energy = 0.;
           ^
[1msrc/VInstrumentResponseFunctionData.cpp:623:17: [31mstyle:[39m Variable 'iTemp' is assigned a value that is never used. [unreadVariable][0m
    TH1D* iTemp = 0;
                ^
[1msrc/VInstrumentResponseFunctionData.cpp:636:21: [31mstyle:[39m Variable 'i_energy' is assigned a value that is never used. [unreadVariable][0m
    double i_energy = 0.;
                    ^
[1msrc/VInstrumentResponseFunctionData.cpp:731:14: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
    double x = 0;
             ^
[1msrc/VInstrumentResponseFunctionData.cpp:732:14: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
    double y = 0.;
             ^
[1msrc/VInstrumentResponseFunctionReader.cpp:863:9: [31mstyle:[39m Condition 'bUseMedian' is always true [knownConditionTrueFalse][0m
    if( bUseMedian )
        ^
[1msrc/VInstrumentResponseFunctionReader.cpp:858:23: [2mnote:[0m Assignment 'bUseMedian=true', assigned value is 1
    bool bUseMedian = true;   // median is the default for e.g. prod3
                      ^
[1msrc/VInstrumentResponseFunctionReader.cpp:863:9: [2mnote:[0m Condition 'bUseMedian' is always true
    if( bUseMedian )
        ^
[1msrc/VInstrumentResponseFunctionReader.cpp:904:9: [31mstyle:[39m Condition 'bXaxisIsEtrue' is always false [knownConditionTrueFalse][0m
    if( bXaxisIsEtrue )
        ^
[1msrc/VInstrumentResponseFunctionReader.cpp:903:21: [2mnote:[0m Assignment 'bXaxisIsEtrue=false', assigned value is 0
    bXaxisIsEtrue = false;
                    ^
[1msrc/VInstrumentResponseFunctionReader.cpp:904:9: [2mnote:[0m Condition 'bXaxisIsEtrue' is always false
    if( bXaxisIsEtrue )
        ^
[1msrc/VInstrumentResponseFunctionReader.cpp:295:9: [31mwarning:[39m Either the condition 'iFile' is redundant or there is possible null pointer dereference: iFile. [nullPointerRedundantCheck][0m
    if( iFile->IsZombie() )
        ^
[1msrc/VInstrumentResponseFunctionReader.cpp:316:17: [2mnote:[0m Assuming that condition 'iFile' is not redundant
            if( iFile )
                ^
[1msrc/VInstrumentResponseFunctionReader.cpp:295:9: [2mnote:[0m Null pointer dereference
    if( iFile->IsZombie() )
        ^
[1msrc/VInstrumentResponseFunctionReader.cpp:303:26: [31mwarning:[39m Either the condition 'iFile' is redundant or there is possible null pointer dereference: iFile. [nullPointerRedundantCheck][0m
    TTree* t = ( TTree* )iFile->Get( "fEffArea" );
                         ^
[1msrc/VInstrumentResponseFunctionReader.cpp:316:17: [2mnote:[0m Assuming that condition 'iFile' is not redundant
            if( iFile )
                ^
[1msrc/VInstrumentResponseFunctionReader.cpp:303:26: [2mnote:[0m Null pointer dereference
    TTree* t = ( TTree* )iFile->Get( "fEffArea" );
                         ^
[1msrc/VInstrumentResponseFunctionReader.cpp:668:27: [31mstyle:[39m The scope of the variable 'i_ffactor_80p' can be reduced. [variableScope][0m
                    float i_ffactor_80p = 1.;
                          ^
[1msrc/VInstrumentResponseFunctionReader.cpp:1297:12: [31mstyle:[39m The scope of the variable 'y1_U' can be reduced. [variableScope][0m
    double y1_U = 0.;
           ^
[1msrc/VInstrumentResponseFunctionReader.cpp:1298:12: [31mstyle:[39m The scope of the variable 'y1_L' can be reduced. [variableScope][0m
    double y1_L = 0.;
           ^
[1msrc/VInstrumentResponseFunctionReader.cpp:1752:28: [31mstyle:[39m The scope of the variable 'yE' can be reduced. [variableScope][0m
                    double yE = 0.;
                           ^
[1msrc/VInstrumentResponseFunctionReader.cpp:653:15: [31mstyle:[39m Variable 'z' is assigned a value that is never used. [unreadVariable][0m
        int z = 0;
              ^
[1msrc/VInstrumentResponseFunctionReader.cpp:668:41: [31mstyle:[39m Variable 'i_ffactor_80p' is assigned a value that is never used. [unreadVariable][0m
                    float i_ffactor_80p = 1.;
                                        ^
[1msrc/VInstrumentResponseFunctionReader.cpp:897:19: [31mstyle:[39m Variable 'energy' is assigned a value that is never used. [unreadVariable][0m
    double energy = 0.;
                  ^
[1msrc/VInstrumentResponseFunctionReader.cpp:1085:18: [31mstyle:[39m Variable 'e_res' is assigned a value that is never used. [unreadVariable][0m
    double e_res = 0.;
                 ^
[1msrc/VInstrumentResponseFunctionReader.cpp:1287:14: [31mstyle:[39m Variable 'e' is assigned a value that is never used. [unreadVariable][0m
    double e = 0.;
             ^
[1msrc/VInstrumentResponseFunctionReader.cpp:1292:17: [31mstyle:[39m Variable 'y0_U' is assigned a value that is never used. [unreadVariable][0m
    double y0_U = 0.;
                ^
[1msrc/VInstrumentResponseFunctionReader.cpp:1293:17: [31mstyle:[39m Variable 'y0_L' is assigned a value that is never used. [unreadVariable][0m
    double y0_L = 0.;
                ^
[1msrc/VInstrumentResponseFunctionReader.cpp:1297:17: [31mstyle:[39m Variable 'y1_U' is assigned a value that is never used. [unreadVariable][0m
    double y1_U = 0.;
                ^
[1msrc/VInstrumentResponseFunctionReader.cpp:1298:17: [31mstyle:[39m Variable 'y1_L' is assigned a value that is never used. [unreadVariable][0m
    double y1_L = 0.;
                ^
[1msrc/VInstrumentResponseFunctionReader.cpp:1536:17: [31mstyle:[39m Variable 'iTemp' is assigned a value that is never used. [unreadVariable][0m
    TH1D* iTemp = 0;
                ^
[1msrc/VInterpolate2DHistos.cpp:228:12: [31mstyle:[39m The scope of the variable 'xc' can be reduced. [variableScope][0m
    double xc = 0.;
           ^
[1msrc/VInterpolate2DHistos.cpp:226:14: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
    double x = 0.;
             ^
[1msrc/VInterpolate2DHistos.cpp:227:14: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
    double y = 0.;
             ^
[1msrc/VInterpolate2DHistos.cpp:228:15: [31mstyle:[39m Variable 'xc' is assigned a value that is never used. [unreadVariable][0m
    double xc = 0.;
              ^
[1msrc/VInterpolate2DHistos.cpp:229:15: [31mstyle:[39m Variable 'yc' is assigned a value that is never used. [unreadVariable][0m
    double yc = 0.;
              ^
[1msrc/VInterpolate2DHistos.cpp:230:14: [31mstyle:[39m Variable 'z' is assigned a value that is never used. [unreadVariable][0m
    double z = 0.;
             ^
[1msrc/VLightCurvePlotter.cpp:285:10: [31mstyle:[39m The scope of the variable 'hname' can be reduced. [variableScope][0m
    char hname[800];
         ^
[1msrc/VLikelihoodFitter.cpp:3658:5: [31mstyle:[39m Variable 'p' is reassigned a value before the old one has been used. [redundantAssignment][0m
  p = (TPad*)i_cTemp->cd(4);
    ^
[1msrc/VLikelihoodFitter.cpp:3639:5: [2mnote:[0m p is assigned
  p = (TPad*)i_cTemp->cd(3);
    ^
[1msrc/VLikelihoodFitter.cpp:3658:5: [2mnote:[0m p is overwritten
  p = (TPad*)i_cTemp->cd(4);
    ^
[1msrc/VLikelihoodFitter.cpp:3004:8: [31mstyle:[39m The scope of the variable 'i_bInc' can be reduced. [variableScope][0m
  bool i_bInc = true;
       ^
[1msrc/VLikelihoodFitter.cpp:505:19: [31mstyle:[39m Variable 'i_J_Rec_Cur' is assigned a value that is never used. [unreadVariable][0m
  int i_J_Rec_Cur = 0;
                  ^
[1msrc/VLikelihoodFitter.cpp:506:18: [31mstyle:[39m Variable 'i_L_MC_Cur' is assigned a value that is never used. [unreadVariable][0m
  int i_L_MC_Cur = 0;
                 ^
[1msrc/VLikelihoodFitter.cpp:3004:15: [31mstyle:[39m Variable 'i_bInc' is assigned a value that is never used. [unreadVariable][0m
  bool i_bInc = true;
              ^
[1msrc/VLikelihoodFitter.cpp:3521:20: [31mstyle:[39m Variable 'i_ExcessRes[i]' is assigned a value that is never used. [unreadVariable][0m
   i_ExcessRes [i] =  ( i_ExcessTotal[i] - i_vModelTotal[i] ) / i_vModelTotal[i];
                   ^
[1msrc/VLikelihoodFitter.cpp:3658:5: [31mstyle:[39m Variable 'p' is assigned a value that is never used. [unreadVariable][0m
  p = (TPad*)i_cTemp->cd(4);
    ^
[1msrc/VLombScargle.cpp:88:12: [31mstyle:[39m The scope of the variable 'f' can be reduced. [variableScope][0m
    double f = 0.;
           ^
[1msrc/VLombScargle.cpp:89:12: [31mstyle:[39m The scope of the variable 'w' can be reduced. [variableScope][0m
    double w = 0.;
           ^
[1msrc/VLombScargle.cpp:90:12: [31mstyle:[39m The scope of the variable 'tau' can be reduced. [variableScope][0m
    double tau = 0.;
           ^
[1msrc/VLombScargle.cpp:115:16: [31mstyle:[39m The scope of the variable 'i_wtau' can be reduced. [variableScope][0m
        double i_wtau  = 0.;
               ^
[1msrc/VLombScargle.cpp:116:16: [31mstyle:[39m The scope of the variable 'i_fdev' can be reduced. [variableScope][0m
        double i_fdev  = 0.;
               ^
[1msrc/VLombScargle.cpp:224:12: [31mstyle:[39m The scope of the variable 'i_z' can be reduced. [variableScope][0m
    double i_z = 0.;
           ^
[1msrc/VLombScargle.cpp:88:14: [31mstyle:[39m Variable 'f' is assigned a value that is never used. [unreadVariable][0m
    double f = 0.;
             ^
[1msrc/VLombScargle.cpp:89:14: [31mstyle:[39m Variable 'w' is assigned a value that is never used. [unreadVariable][0m
    double w = 0.;
             ^
[1msrc/VLombScargle.cpp:90:16: [31mstyle:[39m Variable 'tau' is assigned a value that is never used. [unreadVariable][0m
    double tau = 0.;
               ^
[1msrc/VLombScargle.cpp:224:16: [31mstyle:[39m Variable 'i_z' is assigned a value that is never used. [unreadVariable][0m
    double i_z = 0.;
               ^
[1msrc/VLowGainCalibrator.cpp:175:37: [31mstyle:[39m Parameter 'par' can be declared with const [constParameter][0m
Double_t fpeaks( double* x, double* par )
                                    ^
[1msrc/VLowGainCalibrator.cpp:456:21: [31mstyle:[39m Variable 'iNfound' is assigned a value that is never used. [unreadVariable][0m
            iNfound = 0;
                    ^
[1msrc/VMonteCarloRateCalculator.cpp:82:12: [31mstyle:[39m The scope of the variable 'y1' can be reduced. [variableScope][0m
    double y1 = 0.;
           ^
[1msrc/VMonteCarloRateCalculator.cpp:87:12: [31mstyle:[39m The scope of the variable 'i_bflux' can be reduced. [variableScope][0m
    double i_bflux = 0.;
           ^
[1msrc/VMonteCarloRateCalculator.cpp:82:15: [31mstyle:[39m Variable 'y1' is assigned a value that is never used. [unreadVariable][0m
    double y1 = 0.;
              ^
[1msrc/VMonteCarloRateCalculator.cpp:85:15: [31mstyle:[39m Variable 'x1' is assigned a value that is never used. [unreadVariable][0m
    double x1 = 0.;
              ^
[1msrc/VMonteCarloRateCalculator.cpp:86:15: [31mstyle:[39m Variable 'x2' is assigned a value that is never used. [unreadVariable][0m
    double x2 = 0.;
              ^
[1msrc/VMonteCarloRateCalculator.cpp:87:20: [31mstyle:[39m Variable 'i_bflux' is assigned a value that is never used. [unreadVariable][0m
    double i_bflux = 0.;
                   ^
[1msrc/VMonteCarloRateCalculator.cpp:343:15: [31mstyle:[39m Variable 'y1' is assigned a value that is never used. [unreadVariable][0m
    double y1 = 0.;
              ^
[1msrc/VMonteCarloRateCalculator.cpp:346:15: [31mstyle:[39m Variable 'x1' is assigned a value that is never used. [unreadVariable][0m
    double x1 = 0.;
              ^
[1msrc/VMonteCarloRateCalculator.cpp:347:15: [31mstyle:[39m Variable 'x2' is assigned a value that is never used. [unreadVariable][0m
    double x2 = 0.;
              ^
[1msrc/VMonteCarloRateCalculator.cpp:348:20: [31mstyle:[39m Variable 'i_bflux' is assigned a value that is never used. [unreadVariable][0m
    double i_bflux = 0.;
                   ^
[1msrc/VMonteCarloRateCalculator.cpp:349:19: [31mstyle:[39m Variable 'i_Rec_Bin' is assigned a value that is never used. [unreadVariable][0m
    int i_Rec_Bin = 0;
                  ^
[1msrc/VMonteCarloRateCalculator.cpp:350:19: [31mstyle:[39m Variable 'j_Rec_Bin' is assigned a value that is never used. [unreadVariable][0m
    int j_Rec_Bin = 0;
                  ^
[1msrc/VMultipleGrIsuReader.cpp:63:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( hname, "%s.T%d", i_sourcefile.c_str(), i + 1 );
                ^
[1msrc/VOnOff.cpp:85:16: [31mstyle:[39m Variable 'ihname' is assigned a value that is never used. [unreadVariable][0m
        ihname = hon->GetName();
               ^
[1msrc/VOnOff.cpp:267:17: [31mstyle:[39m Variable 'hTemp' is assigned a value that is never used. [unreadVariable][0m
    TH1D* hTemp = 0;
                ^
[1msrc/VOnOff.cpp:534:15: [31mstyle:[39m Variable 'ir' is assigned a value that is never used. [unreadVariable][0m
    double ir = 0.;
              ^
[1msrc/VPEReader.cpp:121:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( hname, "tPE_T%d", iTelID );
            ^
[1msrc/VPedestalCalculator.cpp:125:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( htitle, "pedestal variations (telescope %d)", t + 1 );
            ^
[1msrc/VPedestalCalculator.cpp:278:30: [31mstyle:[39m The scope of the variable 'chanID' can be reduced. [variableScope][0m
                unsigned int chanID = 0;
                             ^
[1msrc/VPedestalLowGain.cpp:76:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( hname, "hped_%d_%d_%d", fTelescopeID, s, i );
                ^
[1msrc/VPedestalLowGain.cpp:76:17: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( hname, "hped_%d_%d_%d", fTelescopeID, s, i );
                ^
[1msrc/VPedestalLowGain.cpp:193:9: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( hname1, "%s/Tel_%d/%s.lped", iCalibrationDirectory.c_str(), i + 1, iRun1.c_str() );
        ^
[1msrc/VPedestalLowGain.cpp:194:9: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( hname2, "%s/Tel_%d/%s.lped", iCalibrationDirectory.c_str(), i + 1, iRun2.c_str() );
        ^
[1msrc/VPedestalLowGain.cpp:197:9: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( hname1, "%s/Tel_%d/%s.lped", iCalibrationDirectory.c_str(), i + 1, iOutRun.c_str() );
        ^
[1msrc/VPlotAnasumHistograms.cpp:521:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( hname, "c_skyUC_%d_%d", fRunNumber, i );
                ^
[1msrc/VPlotAnasumHistograms.cpp:522:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( htitle, "sky/camera map  run %d (uncorrelated plot %d )", fRunNumber, i );
                ^
[1msrc/VPlotAnasumHistograms.cpp:526:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( hname, "c_sky_%d_%d", fRunNumber, i );
                ^
[1msrc/VPlotAnasumHistograms.cpp:527:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( htitle, "sky/camera map  run %d (correlated plots %d)", fRunNumber, i );
                ^
[1msrc/VPlotAnasumHistograms.cpp:1263:16: [31mstyle:[39m Same expression used in consecutive assignments of 'Xmin' and 'Xmax'. [duplicateAssignExpression][0m
        double Xmin = -1.*ra;
               ^
[1msrc/VPlotAnasumHistograms.cpp:1264:16: [2mnote:[0m Same expression used in consecutive assignments of 'Xmin' and 'Xmax'.
        double Xmax = -1.*ra;
               ^
[1msrc/VPlotAnasumHistograms.cpp:1263:16: [2mnote:[0m Same expression used in consecutive assignments of 'Xmin' and 'Xmax'.
        double Xmin = -1.*ra;
               ^
[1msrc/VPlotAnasumHistograms.cpp:207:10: [31mstyle:[39m The scope of the variable 'hname' can be reduced. [variableScope][0m
    char hname[200];
         ^
[1msrc/VPlotAnasumHistograms.cpp:208:10: [31mstyle:[39m The scope of the variable 'htitle' can be reduced. [variableScope][0m
    char htitle[200];
         ^
[1msrc/VPlotAnasumHistograms.cpp:671:12: [31mstyle:[39m The scope of the variable 'setYMax' can be reduced. [variableScope][0m
    double setYMax = -1.;
           ^
[1msrc/VPlotAnasumHistograms.cpp:674:10: [31mstyle:[39m The scope of the variable 'htitle' can be reduced. [variableScope][0m
    char htitle[200];
         ^
[1msrc/VPlotAnasumHistograms.cpp:725:16: [31mstyle:[39m The scope of the variable 'nt2_68' can be reduced. [variableScope][0m
        double nt2_68 = 0.;
               ^
[1msrc/VPlotAnasumHistograms.cpp:801:10: [31mstyle:[39m The scope of the variable 'htitle' can be reduced. [variableScope][0m
    char htitle[200];
         ^
[1msrc/VPlotAnasumHistograms.cpp:972:14: [31mstyle:[39m The scope of the variable 'c_sig1D' can be reduced. [variableScope][0m
    TCanvas* c_sig1D = 0;
             ^
[1msrc/VPlotAnasumHistograms.cpp:1096:10: [31mstyle:[39m The scope of the variable 'htitle' can be reduced. [variableScope][0m
    char htitle[200];
         ^
[1msrc/VPlotAnasumHistograms.cpp:1772:12: [31mstyle:[39m The scope of the variable 'f1' can be reduced. [variableScope][0m
    TFile* f1 = 0;
           ^
[1msrc/VPlotAnasumHistograms.cpp:1788:11: [31mstyle:[39m The scope of the variable 'hNull' can be reduced. [variableScope][0m
    TH2D* hNull = 0;
          ^
[1msrc/VPlotAnasumHistograms.cpp:2340:12: [31mstyle:[39m The scope of the variable 'h_xrange' can be reduced. [variableScope][0m
    double h_xrange = 0.;
           ^
[1msrc/VPlotAnasumHistograms.cpp:2341:12: [31mstyle:[39m The scope of the variable 'h_yrange' can be reduced. [variableScope][0m
    double h_yrange = 0.;
           ^
[1msrc/VPlotAnasumHistograms.cpp:2732:10: [31mstyle:[39m The scope of the variable 'itemp' can be reduced. [variableScope][0m
    char itemp[200];
         ^
[1msrc/VPlotAnasumHistograms.cpp:2820:10: [31mstyle:[39m The scope of the variable 'hname' can be reduced. [variableScope][0m
    char hname[200];
         ^
[1msrc/VPlotAnasumHistograms.cpp:2821:10: [31mstyle:[39m The scope of the variable 'htitle' can be reduced. [variableScope][0m
    char htitle[200];
         ^
[1msrc/VPlotAnasumHistograms.cpp:2875:10: [31mstyle:[39m The scope of the variable 'bZetaTau' can be reduced. [variableScope][0m
    bool bZetaTau = false;
         ^
[1msrc/VPlotAnasumHistograms.cpp:3014:14: [31mstyle:[39m The scope of the variable 'c_skyAlphaNorm' can be reduced. [variableScope][0m
    TCanvas* c_skyAlphaNorm = 0;
             ^
[1msrc/VPlotAnasumHistograms.cpp:3057:10: [31mstyle:[39m The scope of the variable 'htitle' can be reduced. [variableScope][0m
    char htitle[200];
         ^
[1msrc/VPlotAnasumHistograms.cpp:972:22: [31mstyle:[39m Variable 'c_sig1D' is assigned a value that is never used. [unreadVariable][0m
    TCanvas* c_sig1D = 0;
                     ^
[1msrc/VPlotAnasumHistograms.cpp:1772:15: [31mstyle:[39m Variable 'f1' is assigned a value that is never used. [unreadVariable][0m
    TFile* f1 = 0;
              ^
[1msrc/VPlotAnasumHistograms.cpp:1788:17: [31mstyle:[39m Variable 'hNull' is assigned a value that is never used. [unreadVariable][0m
    TH2D* hNull = 0;
                ^
[1msrc/VPlotAnasumHistograms.cpp:2268:29: [31mstyle:[39m Variable 'currrentDir' is assigned a value that is never used. [unreadVariable][0m
    TDirectory* currrentDir = gDirectory;
                            ^
[1msrc/VPlotAnasumHistograms.cpp:2340:21: [31mstyle:[39m Variable 'h_xrange' is assigned a value that is never used. [unreadVariable][0m
    double h_xrange = 0.;
                    ^
[1msrc/VPlotAnasumHistograms.cpp:2341:21: [31mstyle:[39m Variable 'h_yrange' is assigned a value that is never used. [unreadVariable][0m
    double h_yrange = 0.;
                    ^
[1msrc/VPlotAnasumHistograms.cpp:3014:29: [31mstyle:[39m Variable 'c_skyAlphaNorm' is assigned a value that is never used. [unreadVariable][0m
    TCanvas* c_skyAlphaNorm = 0;
                            ^
[1msrc/VPlotArrayReconstruction.cpp:140:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( hname, "Tel_%d", i + 1 );
        ^
[1msrc/VPlotArrayReconstruction.cpp:563:41: [31mstyle:[39m Redundant initialization for 'fPlotTelescopeScale'. The initialized value is overwritten before it is read. [redundantInitialization][0m
                    fPlotTelescopeScale = max( iMC_dist, iRE_dist ) * 1.1;
                                        ^
[1msrc/VPlotArrayReconstruction.cpp:557:44: [2mnote:[0m fPlotTelescopeScale is initialized
                double fPlotTelescopeScale = ( fPlotxmax - fPlotxmin ) / 2.;
                                           ^
[1msrc/VPlotArrayReconstruction.cpp:563:41: [2mnote:[0m fPlotTelescopeScale is overwritten
                    fPlotTelescopeScale = max( iMC_dist, iRE_dist ) * 1.1;
                                        ^
[1msrc/VPlotArrayReconstruction.cpp:715:32: [31mstyle:[39m Redundant initialization for 'iScale'. The initialized value is overwritten before it is read. [redundantInitialization][0m
                        iScale = max( iMC_dist, iRE_dist ) * 1.1;
                               ^
[1msrc/VPlotArrayReconstruction.cpp:711:39: [2mnote:[0m iScale is initialized
                        double iScale = fPlotFOV / 2.;
                                      ^
[1msrc/VPlotArrayReconstruction.cpp:715:32: [2mnote:[0m iScale is overwritten
                        iScale = max( iMC_dist, iRE_dist ) * 1.1;
                               ^
[1msrc/VPlotCompareDataWithMC.cpp:1566:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( hname, "cdistsim_%d", i );
            ^
[1msrc/VPlotCompareDataWithMC.cpp:1567:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( htitle, "distance plot (Telescope %d)", i + 1 );
            ^
[1msrc/VPlotCompareDataWithMC.cpp:1627:16: [31mwarning:[39m Either the condition 'hR_sims[i]' is redundant or there is possible null pointer dereference: hR_sims[i]. [nullPointerRedundantCheck][0m
        hR_sims[i]->Draw( "e" );
               ^
[1msrc/VPlotCompareDataWithMC.cpp:1639:20: [2mnote:[0m Assuming that condition 'hR_sims[i]' is not redundant
        if( hR_sims[i] && hR_diff[i] )
                   ^
[1msrc/VPlotCompareDataWithMC.cpp:1627:16: [2mnote:[0m Null pointer dereference
        hR_sims[i]->Draw( "e" );
               ^
[1msrc/VPlotCompareDataWithMC.cpp:1628:16: [31mwarning:[39m Either the condition 'hR_diff[i]' is redundant or there is possible null pointer dereference: hR_diff[i]. [nullPointerRedundantCheck][0m
        hR_diff[i]->Draw( "e same" );
               ^
[1msrc/VPlotCompareDataWithMC.cpp:1639:34: [2mnote:[0m Assuming that condition 'hR_diff[i]' is not redundant
        if( hR_sims[i] && hR_diff[i] )
                                 ^
[1msrc/VPlotCompareDataWithMC.cpp:1628:16: [2mnote:[0m Null pointer dereference
        hR_diff[i]->Draw( "e same" );
               ^
[1msrc/VPlotCompareDataWithMC.cpp:750:12: [31mstyle:[39m The scope of the variable 'KSProb' can be reduced. [variableScope][0m
    double KSProb = 0;
           ^
[1msrc/VPlotCompareDataWithMC.cpp:751:12: [31mstyle:[39m The scope of the variable 'KSSig' can be reduced. [variableScope][0m
    double KSSig = 0;
           ^
[1msrc/VPlotCompareDataWithMC.cpp:752:12: [31mstyle:[39m The scope of the variable 'Chi2Prob' can be reduced. [variableScope][0m
    double Chi2Prob = 0.;
           ^
[1msrc/VPlotCompareDataWithMC.cpp:753:12: [31mstyle:[39m The scope of the variable 'Chi2Sig' can be reduced. [variableScope][0m
    double Chi2Sig = 0.;
           ^
[1msrc/VPlotCompareDataWithMC.cpp:892:19: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
            float x = 0.;
                  ^
[1msrc/VPlotCompareDataWithMC.cpp:1198:12: [31mstyle:[39m The scope of the variable 'error_sims' can be reduced. [variableScope][0m
    double error_sims = 0.;
           ^
[1msrc/VPlotCompareDataWithMC.cpp:1199:12: [31mstyle:[39m The scope of the variable 'error_diff' can be reduced. [variableScope][0m
    double error_diff = 0.;
           ^
[1msrc/VPlotCompareDataWithMC.cpp:1550:10: [31mstyle:[39m The scope of the variable 'htitle' can be reduced. [variableScope][0m
    char htitle[200];
         ^
[1msrc/VPlotCompareDataWithMC.cpp:437:14: [31mstyle:[39m Local variable 'hname' shadows outer variable [shadowVariable][0m
        char hname[500];
             ^
[1msrc/VPlotCompareDataWithMC.cpp:424:10: [2mnote:[0m Shadowed declaration
    char hname[200];
         ^
[1msrc/VPlotCompareDataWithMC.cpp:437:14: [2mnote:[0m Shadow variable
        char hname[500];
             ^
[1msrc/VPlotCompareDataWithMC.cpp:571:14: [31mstyle:[39m Local variable 'hname' shadows outer variable [shadowVariable][0m
        char hname[200];
             ^
[1msrc/VPlotCompareDataWithMC.cpp:499:10: [2mnote:[0m Shadowed declaration
    char hname[600];
         ^
[1msrc/VPlotCompareDataWithMC.cpp:571:14: [2mnote:[0m Shadow variable
        char hname[200];
             ^
[1msrc/VPlotCompareDataWithMC.cpp:588:14: [31mstyle:[39m Local variable 'hname' shadows outer variable [shadowVariable][0m
        char hname[200];
             ^
[1msrc/VPlotCompareDataWithMC.cpp:499:10: [2mnote:[0m Shadowed declaration
    char hname[600];
         ^
[1msrc/VPlotCompareDataWithMC.cpp:588:14: [2mnote:[0m Shadow variable
        char hname[200];
             ^
[1msrc/VPlotCompareDataWithMC.cpp:750:19: [31mstyle:[39m Variable 'KSProb' is assigned a value that is never used. [unreadVariable][0m
    double KSProb = 0;
                  ^
[1msrc/VPlotCompareDataWithMC.cpp:751:18: [31mstyle:[39m Variable 'KSSig' is assigned a value that is never used. [unreadVariable][0m
    double KSSig = 0;
                 ^
[1msrc/VPlotCompareDataWithMC.cpp:752:21: [31mstyle:[39m Variable 'Chi2Prob' is assigned a value that is never used. [unreadVariable][0m
    double Chi2Prob = 0.;
                    ^
[1msrc/VPlotCompareDataWithMC.cpp:753:20: [31mstyle:[39m Variable 'Chi2Sig' is assigned a value that is never used. [unreadVariable][0m
    double Chi2Sig = 0.;
                   ^
[1msrc/VPlotCompareDataWithMC.cpp:759:23: [31mstyle:[39m Variable 'error_sims' is assigned a value that is never used. [unreadVariable][0m
    double error_sims = 0.;
                      ^
[1msrc/VPlotCompareDataWithMC.cpp:760:23: [31mstyle:[39m Variable 'error_diff' is assigned a value that is never used. [unreadVariable][0m
    double error_diff = 0.;
                      ^
[1msrc/VPlotCompareDataWithMC.cpp:1198:23: [31mstyle:[39m Variable 'error_sims' is assigned a value that is never used. [unreadVariable][0m
    double error_sims = 0.;
                      ^
[1msrc/VPlotCompareDataWithMC.cpp:1199:23: [31mstyle:[39m Variable 'error_diff' is assigned a value that is never used. [unreadVariable][0m
    double error_diff = 0.;
                      ^
[1msrc/VPlotCompareDataWithMC.cpp:1591:16: [31mstyle:[39m Variable 'hrel' is assigned a value that is never used. [unreadVariable][0m
    TH1D* hrel = 0;
               ^
[1msrc/VPlotCompareDataWithMC.cpp:1869:17: [31mstyle:[39m Variable 'hsims' is assigned a value that is never used. [unreadVariable][0m
    TH1D* hsims = 0;
                ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1060:28: [31mstyle:[39m Condition 'addEntry' is always true [knownConditionTrueFalse][0m
            if( iLegend && addEntry )
                           ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1056:25: [2mnote:[0m Assignment 'addEntry=true', assigned value is 1
        bool addEntry = true;
                        ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1060:28: [2mnote:[0m Condition 'addEntry' is always true
            if( iLegend && addEntry )
                           ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1750:13: [31mstyle:[39m Condition 'g' is always true [knownConditionTrueFalse][0m
        if( g )
            ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1713:13: [2mnote:[0m Assuming that condition '!g' is not redundant
        if( !g )
            ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1750:13: [2mnote:[0m Condition 'g' is always true
        if( g )
            ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1945:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( hname, "hTheta2_ID_%d_%d", iCumulative, j );
            ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1949:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( hname, "hTheta_ID_%d_%d", iCumulative, j );
            ^
[1msrc/VPlotInstrumentResponseFunction.cpp:191:10: [31mstyle:[39m The scope of the variable 'hname' can be reduced. [variableScope][0m
    char hname[200];
         ^
[1msrc/VPlotInstrumentResponseFunction.cpp:921:11: [31mstyle:[39m The scope of the variable 'he0' can be reduced. [variableScope][0m
    TH1D* he0 = 0;
          ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1399:12: [31mstyle:[39m The scope of the variable 'i_Plotting_Min' can be reduced. [variableScope][0m
    double i_Plotting_Min = 0.;
           ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1400:12: [31mstyle:[39m The scope of the variable 'i_Plotting_Max' can be reduced. [variableScope][0m
    double i_Plotting_Max = 0.;
           ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1399:27: [31mstyle:[39m Variable 'i_Plotting_Min' is assigned a value that is never used. [unreadVariable][0m
    double i_Plotting_Min = 0.;
                          ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1400:27: [31mstyle:[39m Variable 'i_Plotting_Max' is assigned a value that is never used. [unreadVariable][0m
    double i_Plotting_Max = 0.;
                          ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1404:20: [31mstyle:[39m Variable 'iXTitle' is assigned a value that is never used. [unreadVariable][0m
    string iXTitle = "";
                   ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1449:17: [31mstyle:[39m Variable 'iXTitle' is assigned a value that is never used. [unreadVariable][0m
        iXTitle = getPlottingAxis( iPlottingAxis )->fAxisTitle;
                ^
[1msrc/VPlotInstrumentResponseFunction.cpp:1853:15: [31mstyle:[39m Variable 'h2D' is assigned a value that is never used. [unreadVariable][0m
    TH2D* h2D = 0;
              ^
[1msrc/VPlotLookupTable.cpp:107:12: [31mstyle:[39m Variable 'ii' is assigned a value that is never used. [unreadVariable][0m
    int ii = 0;
           ^
[1msrc/VPlotLookupTable.cpp:108:12: [31mstyle:[39m Variable 'jj' is assigned a value that is never used. [unreadVariable][0m
    int jj = 0;
           ^
[1msrc/VPlotMonteCarloQualityFactor.cpp:67:55: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( iData = fData.begin(); iData != fData.end(); iData++ )
                                                      ^
[1msrc/VPlotMonteCarloQualityFactor.cpp:112:55: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( iData = fData.begin(); iData != fData.end(); iData++ )
                                                      ^
[1msrc/VPlotMonteCarloQualityFactor.cpp:204:59: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
        for( iData = fData.begin(); iData != fData.end(); iData++ )
                                                          ^
[1msrc/VPlotMonteCarloQualityFactor.cpp:242:55: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( iData = fData.begin(); iData != fData.end(); iData++ )
                                                      ^
[1msrc/VPlotMonteCarloQualityFactor.cpp:469:55: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( iData = fData.begin(); iData != fData.end(); iData++ )
                                                      ^
[1msrc/VPlotOptimalCut.cpp:241:12: [31mstyle:[39m The scope of the variable 'fix_MSCW_max' can be reduced. [variableScope][0m
    double fix_MSCW_max = 0.35;
           ^
[1msrc/VPlotOptimalCut.cpp:242:12: [31mstyle:[39m The scope of the variable 'fix_MSCL_max' can be reduced. [variableScope][0m
    double fix_MSCL_max = 0.7;
           ^
[1msrc/VPlotOptimalCut.cpp:243:12: [31mstyle:[39m The scope of the variable 'fix_theta2_max' can be reduced. [variableScope][0m
    double fix_theta2_max = 0.008;
           ^
[1msrc/VPlotOptimalCut.cpp:267:13: [31mstyle:[39m Variable 'cVar' is assigned a value that is never used. [unreadVariable][0m
        cVar++;
            ^
[1msrc/VPlotRadialAcceptance.cpp:528:23: [31mstyle:[39m Variable 'iTitle' is assigned a value that is never used. [unreadVariable][0m
        string iTitle = fName;
                      ^
[1msrc/VPlotRadialAcceptance.cpp:615:23: [31mstyle:[39m Variable 'iTitle' is assigned a value that is never used. [unreadVariable][0m
        string iTitle = fName;
                      ^
[1msrc/VPlotSensitivityfromLisFiles.cpp:256:10: [31mstyle:[39m The scope of the variable 'hname' can be reduced. [variableScope][0m
    char hname[800];
         ^
[1msrc/VPlotSensitivityfromLisFiles.cpp:257:10: [31mstyle:[39m The scope of the variable 'htitle' can be reduced. [variableScope][0m
    char htitle[800];
         ^
[1msrc/VPlotUtilities.cpp:292:12: [31mstyle:[39m The scope of the variable 'w1' can be reduced. [variableScope][0m
    double w1, w2;
           ^
[1msrc/VPlotUtilities.cpp:292:16: [31mstyle:[39m The scope of the variable 'w2' can be reduced. [variableScope][0m
    double w1, w2;
               ^
[1msrc/VPlotUtilities.cpp:424:12: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
    double x = 0.;
           ^
[1msrc/VPlotUtilities.cpp:424:14: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
    double x = 0.;
             ^
[1msrc/VPlotUtilities.cpp:425:14: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
    double y = 0.;
             ^
[1msrc/VPlotUtilities.cpp:475:81: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( i_iter = fPlottingAxisData.begin(); i_iter != fPlottingAxisData.end(); i_iter++ )
                                                                                ^
[1msrc/VPlotWPPhysSensitivity.cpp:388:13: [31mstyle:[39m Condition 'bUpsideDown' is always false [knownConditionTrueFalse][0m
        if( bUpsideDown )
            ^
[1msrc/VPlotWPPhysSensitivity.cpp:370:24: [2mnote:[0m Assignment 'bUpsideDown=false', assigned value is 0
    bool bUpsideDown = false;
                       ^
[1msrc/VPlotWPPhysSensitivity.cpp:388:13: [2mnote:[0m Condition 'bUpsideDown' is always false
        if( bUpsideDown )
            ^
[1msrc/VPlotWPPhysSensitivity.cpp:440:29: [31mstyle:[39m Condition 'bUpsideDown' is always false [knownConditionTrueFalse][0m
                        if( bUpsideDown )
                            ^
[1msrc/VPlotWPPhysSensitivity.cpp:370:24: [2mnote:[0m Assignment 'bUpsideDown=false', assigned value is 0
    bool bUpsideDown = false;
                       ^
[1msrc/VPlotWPPhysSensitivity.cpp:440:29: [2mnote:[0m Condition 'bUpsideDown' is always false
                        if( bUpsideDown )
                            ^
[1msrc/VPlotWPPhysSensitivity.cpp:285:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( hname, "fProjectionSensitivityvsCameraOffset_%s_%d", fData[i]->fReferenceSiteName.c_str(), j );
                ^
[1msrc/VPlotWPPhysSensitivity.cpp:955:7: [31mstyle:[39m Redundant initialization for 'x'. The initialized value is overwritten before it is read. [redundantInitialization][0m
    x = 0.1 + 0.35;
      ^
[1msrc/VPlotWPPhysSensitivity.cpp:953:14: [2mnote:[0m x is initialized
    double x = 0.2 + 0.35;
             ^
[1msrc/VPlotWPPhysSensitivity.cpp:955:7: [2mnote:[0m x is overwritten
    x = 0.1 + 0.35;
      ^
[1msrc/VPlotWPPhysSensitivity.cpp:1111:12: [31mstyle:[39m The scope of the variable 'fsys' can be reduced. [variableScope][0m
    double fsys = 0.3;
           ^
[1msrc/VPlotWPPhysSensitivity.cpp:1311:16: [31mstyle:[39m The scope of the variable 'dy' can be reduced. [variableScope][0m
        double dy = 0.;
               ^
[1msrc/VPlotWPPhysSensitivity.cpp:677:27: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
        for( unsigned int i = 0; i < iCurrentInstruments.size(); i++ )
                          ^
[1msrc/VPlotWPPhysSensitivity.cpp:584:23: [2mnote:[0m Shadowed declaration
    for( unsigned int i = 0; i < fData.size(); i++ )
                      ^
[1msrc/VPlotWPPhysSensitivity.cpp:677:27: [2mnote:[0m Shadow variable
        for( unsigned int i = 0; i < iCurrentInstruments.size(); i++ )
                          ^
[1msrc/VPlotWPPhysSensitivity.cpp:736:18: [31mstyle:[39m Local variable 'hname' shadows outer variable [shadowVariable][0m
            char hname[2000];
                 ^
[1msrc/VPlotWPPhysSensitivity.cpp:507:10: [2mnote:[0m Shadowed declaration
    char hname[200];
         ^
[1msrc/VPlotWPPhysSensitivity.cpp:736:18: [2mnote:[0m Shadow variable
            char hname[2000];
                 ^
[1msrc/VPlotWPPhysSensitivity.cpp:1111:17: [31mstyle:[39m Variable 'fsys' is assigned a value that is never used. [unreadVariable][0m
    double fsys = 0.3;
                ^
[1msrc/VPlotWPPhysSensitivity.cpp:1311:19: [31mstyle:[39m Variable 'dy' is assigned a value that is never used. [unreadVariable][0m
        double dy = 0.;
                  ^
[1msrc/VPlotWPPhysSensitivity.cpp:414:13: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
            i_fProjectionSensitivityvsCameraOffset_iter++ )
            ^
[1msrc/VPointingDB.cpp:624:12: [31mstyle:[39m The scope of the variable 'iITime' can be reduced. [variableScope][0m
    double iITime = 0.;
           ^
[1msrc/VPointingDB.cpp:625:12: [31mstyle:[39m The scope of the variable 'iRA' can be reduced. [variableScope][0m
    double iRA = 0.;
           ^
[1msrc/VPointingDB.cpp:626:12: [31mstyle:[39m The scope of the variable 'iDec' can be reduced. [variableScope][0m
    double iDec = 0.;
           ^
[1msrc/VPointingDB.cpp:677:12: [31mstyle:[39m The scope of the variable 'decoff' can be reduced. [variableScope][0m
    double decoff = 0;
           ^
[1msrc/VPointingDB.cpp:678:12: [31mstyle:[39m The scope of the variable 'raoff' can be reduced. [variableScope][0m
    double raoff = 0;
           ^
[1msrc/VPointingDB.cpp:623:17: [31mstyle:[39m Variable 'iMJD' is assigned a value that is never used. [unreadVariable][0m
    double iMJD = 0.;
                ^
[1msrc/VPointingDB.cpp:624:19: [31mstyle:[39m Variable 'iITime' is assigned a value that is never used. [unreadVariable][0m
    double iITime = 0.;
                  ^
[1msrc/VPointingDB.cpp:625:16: [31mstyle:[39m Variable 'iRA' is assigned a value that is never used. [unreadVariable][0m
    double iRA = 0.;
               ^
[1msrc/VPointingDB.cpp:626:17: [31mstyle:[39m Variable 'iDec' is assigned a value that is never used. [unreadVariable][0m
    double iDec = 0.;
                ^
[1msrc/VPointingDB.cpp:677:19: [31mstyle:[39m Variable 'decoff' is assigned a value that is never used. [unreadVariable][0m
    double decoff = 0;
                  ^
[1msrc/VPointingDB.cpp:678:18: [31mstyle:[39m Variable 'raoff' is assigned a value that is never used. [unreadVariable][0m
    double raoff = 0;
                 ^
[1msrc/VRadialAcceptance.cpp:907:12: [31mstyle:[39m The scope of the variable 'bincentx' can be reduced. [variableScope][0m
    double bincentx, bincenty, iradius, binCont;
           ^
[1msrc/VRadialAcceptance.cpp:907:22: [31mstyle:[39m The scope of the variable 'bincenty' can be reduced. [variableScope][0m
    double bincentx, bincenty, iradius, binCont;
                     ^
[1msrc/VRadialAcceptance.cpp:907:32: [31mstyle:[39m The scope of the variable 'iradius' can be reduced. [variableScope][0m
    double bincentx, bincenty, iradius, binCont;
                               ^
[1msrc/VRadialAcceptance.cpp:907:41: [31mstyle:[39m The scope of the variable 'binCont' can be reduced. [variableScope][0m
    double bincentx, bincenty, iradius, binCont;
                                        ^
[1msrc/VRadialAcceptance.cpp:871:76: [31mstyle:[39m Parameter 'par' can be declared with const [constParameter][0m
Double_t VRadialAcceptance_fit_acceptance_function( Double_t* x, Double_t* par )
                                                                           ^
[1msrc/VRadialAcceptance.cpp:871:63: [31mstyle:[39m Parameter 'x' can be declared with const [constParameter][0m
Double_t VRadialAcceptance_fit_acceptance_function( Double_t* x, Double_t* par )
                                                              ^
[1msrc/VReadRunParameter.cpp:1690:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( i_text, "%s/Tel_%d/", fRunPara->getDirectory_EVNDISPCalibrationData_perRun().c_str(), i + 1 );
            ^
[1msrc/VReadRunParameter.cpp:1983:17: [31mstyle:[39m The scope of the variable 'run_min' can be reduced. [variableScope][0m
            int run_min = 0;
                ^
[1msrc/VReadRunParameter.cpp:1984:17: [31mstyle:[39m The scope of the variable 'run_max' can be reduced. [variableScope][0m
            int run_max = 0;
                ^
[1msrc/VReadRunParameter.cpp:2079:30: [31mstyle:[39m The scope of the variable 'iTelNum' can be reduced. [variableScope][0m
                unsigned int iTelNum = 0;
                             ^
[1msrc/VRunStats.cpp:376:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( c_query, "select * from tblHV_Telescope%d_Voltages where db_start_time >= \"%s 14:00:00\"  and db_end_time < \"%s 16:00:00\"", i,  fStartDate.c_str(), fStopDate.c_str() );
        ^
[1msrc/VRunStats.cpp:462:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( c_query, "select * from tblHV_Telescope%d_DefaultVoltage where db_start_time >= \"2005-01-01 14:00:00\" ", i );
        ^
[1msrc/VRunStats.cpp:401:17: [31mstyle:[39m The scope of the variable 'iMJD' can be reduced. [variableScope][0m
            int iMJD = 0;
                ^
[1msrc/VRunStats.cpp:402:20: [31mstyle:[39m The scope of the variable 'iTime' can be reduced. [variableScope][0m
            double iTime = 0.;
                   ^
[1msrc/VRunStats.cpp:489:17: [31mstyle:[39m The scope of the variable 'iMJD' can be reduced. [variableScope][0m
            int iMJD = 0;
                ^
[1msrc/VRunStats.cpp:490:20: [31mstyle:[39m The scope of the variable 'iTime' can be reduced. [variableScope][0m
            double iTime = 0.;
                   ^
[1msrc/VRunStats.cpp:1688:35: [31mstyle:[39m Local variable 'l' shadows outer variable [shadowVariable][0m
                for( unsigned int l = 0; l < 4; l++ )
                                  ^
[1msrc/VRunStats.cpp:1191:12: [2mnote:[0m Shadowed declaration
    double l;
           ^
[1msrc/VRunStats.cpp:1688:35: [2mnote:[0m Shadow variable
                for( unsigned int l = 0; l < 4; l++ )
                                  ^
[1msrc/VSensitivityCalculator.cpp:2769:9: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( !fTMVAEvaluatorResults )
        ^
[1msrc/VSensitivityCalculator.cpp:2765:9: [2mnote:[0m First condition
    if( !fTMVAEvaluatorResults )
        ^
[1msrc/VSensitivityCalculator.cpp:2769:9: [2mnote:[0m Second condition
    if( !fTMVAEvaluatorResults )
        ^
[1msrc/VSensitivityCalculator.cpp:169:12: [31mstyle:[39m The scope of the variable 's' can be reduced. [variableScope][0m
    double s = 0.;
           ^
[1msrc/VSensitivityCalculator.cpp:517:16: [31mstyle:[39m The scope of the variable 'iE' can be reduced. [variableScope][0m
        double iE = 0.;
               ^
[1msrc/VSensitivityCalculator.cpp:518:16: [31mstyle:[39m The scope of the variable 'iY' can be reduced. [variableScope][0m
        double iY = 0.;
               ^
[1msrc/VSensitivityCalculator.cpp:560:20: [31mstyle:[39m The scope of the variable 'iE' can be reduced. [variableScope][0m
            double iE = 0.;
                   ^
[1msrc/VSensitivityCalculator.cpp:561:20: [31mstyle:[39m The scope of the variable 'iY' can be reduced. [variableScope][0m
            double iY = 0.;
                   ^
[1msrc/VSensitivityCalculator.cpp:584:20: [31mstyle:[39m The scope of the variable 'iE' can be reduced. [variableScope][0m
            double iE = 0.;
                   ^
[1msrc/VSensitivityCalculator.cpp:585:20: [31mstyle:[39m The scope of the variable 'iY' can be reduced. [variableScope][0m
            double iY = 0.;
                   ^
[1msrc/VSensitivityCalculator.cpp:1453:12: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
    double x = 0.;
           ^
[1msrc/VSensitivityCalculator.cpp:2259:12: [31mstyle:[39m The scope of the variable 'iTotG' can be reduced. [variableScope][0m
    double iTotG = 0.;
           ^
[1msrc/VSensitivityCalculator.cpp:2260:12: [31mstyle:[39m The scope of the variable 'iTotB' can be reduced. [variableScope][0m
    double iTotB = 0.;
           ^
[1msrc/VSensitivityCalculator.cpp:2614:10: [31mstyle:[39m The scope of the variable 'bGoodBin' can be reduced. [variableScope][0m
    bool bGoodBin = false;
         ^
[1msrc/VSensitivityCalculator.cpp:2730:16: [31mstyle:[39m The scope of the variable 'e' can be reduced. [variableScope][0m
        double e = 0.;
               ^
[1msrc/VSensitivityCalculator.cpp:2732:16: [31mstyle:[39m The scope of the variable 'itheta2' can be reduced. [variableScope][0m
        double itheta2 = 0.;
               ^
[1msrc/VSensitivityCalculator.cpp:3329:16: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
        double x = 0.;
               ^
[1msrc/VSensitivityCalculator.cpp:3330:16: [31mstyle:[39m The scope of the variable 'y' can be reduced. [variableScope][0m
        double y = 0.;
               ^
[1msrc/VSensitivityCalculator.cpp:3331:13: [31mstyle:[39m The scope of the variable 'i_x' can be reduced. [variableScope][0m
        int i_x = 0;
            ^
[1msrc/VSensitivityCalculator.cpp:3471:12: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
    double x = 0.;
           ^
[1msrc/VSensitivityCalculator.cpp:3472:12: [31mstyle:[39m The scope of the variable 'y' can be reduced. [variableScope][0m
    double y = 0.;
           ^
[1msrc/VSensitivityCalculator.cpp:2128:35: [31mstyle:[39m Local variable 'iMCR' shadows outer variable [shadowVariable][0m
        VMonteCarloRateCalculator iMCR;
                                  ^
[1msrc/VSensitivityCalculator.cpp:2084:31: [2mnote:[0m Shadowed declaration
    VMonteCarloRateCalculator iMCR;
                              ^
[1msrc/VSensitivityCalculator.cpp:2128:35: [2mnote:[0m Shadow variable
        VMonteCarloRateCalculator iMCR;
                                  ^
[1msrc/VSensitivityCalculator.cpp:2540:22: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
            for( int i = 0; i <= c->hWeightedRate->GetNbinsX(); i++ )
                     ^
[1msrc/VSensitivityCalculator.cpp:2487:23: [2mnote:[0m Shadowed declaration
    for( unsigned int i = 0; i < c->fChain->GetEntries(); i++ )
                      ^
[1msrc/VSensitivityCalculator.cpp:2540:22: [2mnote:[0m Shadow variable
            for( int i = 0; i <= c->hWeightedRate->GetNbinsX(); i++ )
                     ^
[1msrc/VSensitivityCalculator.cpp:2548:22: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
            for( int i = 1; i <= iMCPara->hWeightedRate->GetNbinsX(); i++ )
                     ^
[1msrc/VSensitivityCalculator.cpp:2487:23: [2mnote:[0m Shadowed declaration
    for( unsigned int i = 0; i < c->fChain->GetEntries(); i++ )
                      ^
[1msrc/VSensitivityCalculator.cpp:2548:22: [2mnote:[0m Shadow variable
            for( int i = 1; i <= iMCPara->hWeightedRate->GetNbinsX(); i++ )
                     ^
[1msrc/VSensitivityCalculator.cpp:2566:31: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
            for( unsigned int i = 0; i < iMCPara->energy.size(); i++ )
                              ^
[1msrc/VSensitivityCalculator.cpp:2487:23: [2mnote:[0m Shadowed declaration
    for( unsigned int i = 0; i < c->fChain->GetEntries(); i++ )
                      ^
[1msrc/VSensitivityCalculator.cpp:2566:31: [2mnote:[0m Shadow variable
            for( unsigned int i = 0; i < iMCPara->energy.size(); i++ )
                              ^
[1msrc/VSensitivityCalculator.cpp:2714:27: [31mstyle:[39m Local variable 'c' shadows outer variable [shadowVariable][0m
        for( unsigned int c = 0; c < iCuts.size(); c++ )
                          ^
[1msrc/VSensitivityCalculator.cpp:2469:15: [2mnote:[0m Shadowed declaration
    CEffArea* c = new CEffArea( t );
              ^
[1msrc/VSensitivityCalculator.cpp:2714:27: [2mnote:[0m Shadow variable
        for( unsigned int c = 0; c < iCuts.size(); c++ )
                          ^
[1msrc/VSensitivityCalculator.cpp:2739:31: [31mstyle:[39m Local variable 'c' shadows outer variable [shadowVariable][0m
            for( unsigned int c = 0; c < iCuts.size(); c++ )
                              ^
[1msrc/VSensitivityCalculator.cpp:2469:15: [2mnote:[0m Shadowed declaration
    CEffArea* c = new CEffArea( t );
              ^
[1msrc/VSensitivityCalculator.cpp:2739:31: [2mnote:[0m Shadow variable
            for( unsigned int c = 0; c < iCuts.size(); c++ )
                              ^
[1msrc/VSensitivityCalculator.cpp:789:14: [31mwarning:[39m Conversion of string literal "CTA-PHYSTREE" to bool always evaluates to true. [incorrectStringBooleanError][0m
    else if( "CTA-PHYSTREE" )
             ^
[1msrc/VSensitivityCalculator.cpp:169:14: [31mstyle:[39m Variable 's' is assigned a value that is never used. [unreadVariable][0m
    double s = 0.;
             ^
[1msrc/VSensitivityCalculator.cpp:517:19: [31mstyle:[39m Variable 'iE' is assigned a value that is never used. [unreadVariable][0m
        double iE = 0.;
                  ^
[1msrc/VSensitivityCalculator.cpp:518:19: [31mstyle:[39m Variable 'iY' is assigned a value that is never used. [unreadVariable][0m
        double iY = 0.;
                  ^
[1msrc/VSensitivityCalculator.cpp:560:23: [31mstyle:[39m Variable 'iE' is assigned a value that is never used. [unreadVariable][0m
            double iE = 0.;
                      ^
[1msrc/VSensitivityCalculator.cpp:561:23: [31mstyle:[39m Variable 'iY' is assigned a value that is never used. [unreadVariable][0m
            double iY = 0.;
                      ^
[1msrc/VSensitivityCalculator.cpp:584:23: [31mstyle:[39m Variable 'iE' is assigned a value that is never used. [unreadVariable][0m
            double iE = 0.;
                      ^
[1msrc/VSensitivityCalculator.cpp:585:23: [31mstyle:[39m Variable 'iY' is assigned a value that is never used. [unreadVariable][0m
            double iY = 0.;
                      ^
[1msrc/VSensitivityCalculator.cpp:1451:14: [31mstyle:[39m Variable 's' is assigned a value that is never used. [unreadVariable][0m
    double s = 0.;
             ^
[1msrc/VSensitivityCalculator.cpp:1453:14: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
    double x = 0.;
             ^
[1msrc/VSensitivityCalculator.cpp:2730:18: [31mstyle:[39m Variable 'e' is assigned a value that is never used. [unreadVariable][0m
        double e = 0.;
                 ^
[1msrc/VSensitivityCalculator.cpp:2732:24: [31mstyle:[39m Variable 'itheta2' is assigned a value that is never used. [unreadVariable][0m
        double itheta2 = 0.;
                       ^
[1msrc/VSensitivityCalculator.cpp:3329:18: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
        double x = 0.;
                 ^
[1msrc/VSensitivityCalculator.cpp:3330:18: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
        double y = 0.;
                 ^
[1msrc/VSensitivityCalculator.cpp:3331:17: [31mstyle:[39m Variable 'i_x' is assigned a value that is never used. [unreadVariable][0m
        int i_x = 0;
                ^
[1msrc/VSensitivityCalculator.cpp:3471:14: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
    double x = 0.;
             ^
[1msrc/VSensitivityCalculator.cpp:3472:14: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
    double y = 0.;
             ^
[1msrc/VSensitivityCalculator.cpp:3599:19: [31mstyle:[39m Variable 'yN' is assigned a value that is never used. [unreadVariable][0m
        double yN = 0.;
                  ^
[1msrc/VSensitivityCalculator.cpp:1881:85: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( i_MCData_iterator = fMC_Data.begin(); i_MCData_iterator != fMC_Data.end(); i_MCData_iterator++ )
                                                                                    ^
[1msrc/VSensitivityCalculator.cpp:1894:85: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( i_MCData_iterator = fMC_Data.begin(); i_MCData_iterator != fMC_Data.end(); i_MCData_iterator++ )
                                                                                    ^
[1msrc/VSensitivityCalculator.cpp:1925:85: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( i_MCData_iterator = fMC_Data.begin(); i_MCData_iterator != fMC_Data.end(); i_MCData_iterator++ )
                                                                                    ^
[1msrc/VSensitivityCalculator.cpp:2103:85: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( i_MCData_iterator = fMC_Data.begin(); i_MCData_iterator != fMC_Data.end(); i_MCData_iterator++ )
                                                                                    ^
[1msrc/VSensitivityCalculator.cpp:2223:85: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( i_MCData_iterator = fMC_Data.begin(); i_MCData_iterator != fMC_Data.end(); i_MCData_iterator++ )
                                                                                    ^
[1msrc/VSensitivityCalculator.cpp:2969:89: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( i_flux_NOff_iter = i_flux_NOff.begin(); i_flux_NOff_iter != i_flux_NOff.end(); i_flux_NOff_iter++ )
                                                                                        ^
[1msrc/VSensitivityCalculator.cpp:3151:79: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
        for( itx = fMinEventsLimited.begin(); itx != fMinEventsLimited.end(); itx++ )
                                                                              ^
[1msrc/VShowerParameters.cpp:70:24: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( fShortTree < 1 && !iMC )
                       ^
[1msrc/VShowerParameters.cpp:65:14: [2mnote:[0m First condition
    if( !iMC && fShortTree < 1 )
             ^
[1msrc/VShowerParameters.cpp:70:24: [2mnote:[0m Second condition
    if( fShortTree < 1 && !iMC )
                       ^
[1msrc/VSimpleStereoReconstructor.cpp:251:27: [31mstyle:[39m Local variable 'm' shadows outer variable [shadowVariable][0m
            for( unsigned m = 0; m < v_xs.size(); m++ )
                          ^
[1msrc/VSimpleStereoReconstructor.cpp:98:21: [2mnote:[0m Shadowed declaration
    vector< float > m;
                    ^
[1msrc/VSimpleStereoReconstructor.cpp:251:27: [2mnote:[0m Shadow variable
            for( unsigned m = 0; m < v_xs.size(); m++ )
                          ^
[1msrc/VSimpleStereoReconstructor.cpp:295:18: [31mstyle:[39m Variable 'i_cenx' is assigned a value that is never used. [unreadVariable][0m
    float i_cenx = 0.;
                 ^
[1msrc/VSimpleStereoReconstructor.cpp:296:18: [31mstyle:[39m Variable 'i_ceny' is assigned a value that is never used. [unreadVariable][0m
    float i_ceny = 0.;
                 ^
[1msrc/VSourceGeometryFitter.cpp:464:20: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
            double x = 0.;
                   ^
[1msrc/VSourceGeometryFitter.cpp:464:22: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
            double x = 0.;
                     ^
[1msrc/VSourceGeometryFitter.cpp:465:22: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
            double y = 0.;
                     ^
[1msrc/VSourceGeometryFitter.cpp:466:23: [31mstyle:[39m Variable 't2' is assigned a value that is never used. [unreadVariable][0m
            double t2 = 0.;
                      ^
[1msrc/VSpecialChannel.cpp:196:83: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
            for( it = fHIGHQE_gainfactor.begin(); it != fHIGHQE_gainfactor.end(); it++ )
                                                                                  ^
[1msrc/VSpecialChannel.cpp:208:75: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
            for( it = fChannelStatus.begin(); it != fChannelStatus.end(); it++ )
                                                                          ^
[1msrc/VSpectralEnergyDistribution.cpp:647:21: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( iFormat == 0 )
                    ^
[1msrc/VSpectralEnergyDistribution.cpp:642:21: [2mnote:[0m First condition
        if( iFormat == 0 )
                    ^
[1msrc/VSpectralEnergyDistribution.cpp:647:21: [2mnote:[0m Second condition
        if( iFormat == 0 )
                    ^
[1msrc/VSpectralEnergyDistribution.cpp:1258:22: [31mstyle:[39m The scope of the variable 'hname' can be reduced. [variableScope][0m
                char hname[600];
                     ^
[1msrc/VSpectralEnergyDistribution.cpp:1070:27: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
        for( unsigned int i = 0; i < fGalacticExtinction.size(); i++ )
                          ^
[1msrc/VSpectralEnergyDistribution.cpp:1031:9: [2mnote:[0m Shadowed declaration
    int i = 0;
        ^
[1msrc/VSpectralEnergyDistribution.cpp:1070:27: [2mnote:[0m Shadow variable
        for( unsigned int i = 0; i < fGalacticExtinction.size(); i++ )
                          ^
[1msrc/VStarCatalogue.cpp:1585:12: [31mstyle:[39m The scope of the variable 'x_rot' can be reduced. [variableScope][0m
    double x_rot = 0.;
           ^
[1msrc/VStarCatalogue.cpp:1586:12: [31mstyle:[39m The scope of the variable 'y_rot' can be reduced. [variableScope][0m
    double y_rot = 0.;
           ^
[1msrc/VStarCatalogue.cpp:965:15: [31mstyle:[39m Variable 'iTemp' is assigned a value that is never used. [unreadVariable][0m
        iTemp = iTemp.substr( iTemp.find( "," ) + 1, iTemp.size() );
              ^
[1msrc/VStarCatalogue.cpp:1585:18: [31mstyle:[39m Variable 'x_rot' is assigned a value that is never used. [unreadVariable][0m
    double x_rot = 0.;
                 ^
[1msrc/VStarCatalogue.cpp:1586:18: [31mstyle:[39m Variable 'y_rot' is assigned a value that is never used. [unreadVariable][0m
    double y_rot = 0.;
                 ^
[1msrc/VStereoAnalysis.cpp:55:9: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( !bTotalAnalysisOnly )
        ^
[1msrc/VStereoAnalysis.cpp:49:9: [2mnote:[0m First condition
    if( !bTotalAnalysisOnly )
        ^
[1msrc/VStereoAnalysis.cpp:55:9: [2mnote:[0m Second condition
    if( !bTotalAnalysisOnly )
        ^
[1msrc/VStereoAnalysis.cpp:744:26: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
            if( bIsGamma && bDirectionCuts )
                         ^
[1msrc/VStereoAnalysis.cpp:715:26: [2mnote:[0m First condition
            if( bIsGamma && bDirectionCuts )
                         ^
[1msrc/VStereoAnalysis.cpp:744:26: [2mnote:[0m Second condition
            if( bIsGamma && bDirectionCuts )
                         ^
[1msrc/VStereoAnalysis.cpp:577:28: [31mstyle:[39m Variable 'bDirectionCuts' is reassigned a value before the old one has been used. [redundantAssignment][0m
            bDirectionCuts = fMapUC->fill( fIsOn, i_xderot, i_yderot, fCuts->getTheta2Cut_max( iErec ),
                           ^
[1msrc/VStereoAnalysis.cpp:575:28: [2mnote:[0m bDirectionCuts is assigned
            bDirectionCuts = fMap->fill( fIsOn, i_xderot, i_yderot, fCuts->getTheta2Cut_max( iErec ),
                           ^
[1msrc/VStereoAnalysis.cpp:577:28: [2mnote:[0m bDirectionCuts is overwritten
            bDirectionCuts = fMapUC->fill( fIsOn, i_xderot, i_yderot, fCuts->getTheta2Cut_max( iErec ),
                           ^
[1msrc/VStereoAnalysis.cpp:456:18: [31mstyle:[39m Variable 'i_UTC' is assigned a value that is never used. [unreadVariable][0m
    double i_UTC = 0.;
                 ^
[1msrc/VStereoHistograms.cpp:744:111: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
            for( iter = hListNameofParameterHistograms.begin(); iter != hListNameofParameterHistograms.end(); iter++ )
                                                                                                              ^
[1msrc/VStereoMaps.cpp:158:12: [31mstyle:[39m The scope of the variable 'i_weight' can be reduced. [variableScope][0m
    double i_weight = 1.;
           ^
[1msrc/VStereoMaps.cpp:515:12: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
    double x = 0.;
           ^
[1msrc/VStereoMaps.cpp:517:9: [31mstyle:[39m The scope of the variable 'ix_start' can be reduced. [variableScope][0m
    int ix_start = 0;
        ^
[1msrc/VStereoMaps.cpp:518:9: [31mstyle:[39m The scope of the variable 'ix_stopp' can be reduced. [variableScope][0m
    int ix_stopp = 0;
        ^
[1msrc/VStereoMaps.cpp:553:12: [31mstyle:[39m The scope of the variable 'i_xLE' can be reduced. [variableScope][0m
    double i_xLE = 0.;
           ^
[1msrc/VStereoMaps.cpp:800:16: [31mstyle:[39m The scope of the variable 'i_cx' can be reduced. [variableScope][0m
        double i_cx = 0.;
               ^
[1msrc/VStereoMaps.cpp:1198:42: [31mstyle:[39m The scope of the variable 'remo_iter' can be reduced. [variableScope][0m
                            unsigned int remo_iter = 0;
                                         ^
[1msrc/VStereoMaps.cpp:1350:16: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
        double x = 0.;
               ^
[1msrc/VStereoMaps.cpp:1463:12: [31mstyle:[39m The scope of the variable 'i_cx' can be reduced. [variableScope][0m
    double i_cx = 0.;
           ^
[1msrc/VStereoMaps.cpp:1464:12: [31mstyle:[39m The scope of the variable 'i_cy' can be reduced. [variableScope][0m
    double i_cy = 0.;
           ^
[1msrc/VStereoMaps.cpp:1685:12: [31mstyle:[39m The scope of the variable 'x' can be reduced. [variableScope][0m
    double x = 0.;
           ^
[1msrc/VStereoMaps.cpp:1013:13: [31mstyle:[39m Local variable 'x_bin_wobble' shadows outer variable [shadowVariable][0m
        int x_bin_wobble = hmap_stereo->GetXaxis()->FindBin( fRunList.fWobbleWestMod );
            ^
[1msrc/VStereoMaps.cpp:906:9: [2mnote:[0m Shadowed declaration
    int x_bin_wobble = 0;
        ^
[1msrc/VStereoMaps.cpp:1013:13: [2mnote:[0m Shadow variable
        int x_bin_wobble = hmap_stereo->GetXaxis()->FindBin( fRunList.fWobbleWestMod );
            ^
[1msrc/VStereoMaps.cpp:1017:13: [31mstyle:[39m Local variable 'y_bin_wobble' shadows outer variable [shadowVariable][0m
        int y_bin_wobble = hmap_stereo->GetYaxis()->FindBin( fRunList.fWobbleNorthMod );
            ^
[1msrc/VStereoMaps.cpp:907:9: [2mnote:[0m Shadowed declaration
    int y_bin_wobble = 0;
        ^
[1msrc/VStereoMaps.cpp:1017:13: [2mnote:[0m Shadow variable
        int y_bin_wobble = hmap_stereo->GetYaxis()->FindBin( fRunList.fWobbleNorthMod );
            ^
[1msrc/VStereoMaps.cpp:383:19: [31mstyle:[39m Variable 'i_xbin' is assigned a value that is never used. [unreadVariable][0m
    double i_xbin = 0.;
                  ^
[1msrc/VStereoMaps.cpp:384:19: [31mstyle:[39m Variable 'i_ybin' is assigned a value that is never used. [unreadVariable][0m
    double i_ybin = 0.;
                  ^
[1msrc/VStereoMaps.cpp:515:14: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
    double x = 0.;
             ^
[1msrc/VStereoMaps.cpp:517:18: [31mstyle:[39m Variable 'ix_start' is assigned a value that is never used. [unreadVariable][0m
    int ix_start = 0;
                 ^
[1msrc/VStereoMaps.cpp:518:18: [31mstyle:[39m Variable 'ix_stopp' is assigned a value that is never used. [unreadVariable][0m
    int ix_stopp = 0;
                 ^
[1msrc/VStereoMaps.cpp:519:14: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
    double y = 0.;
             ^
[1msrc/VStereoMaps.cpp:553:18: [31mstyle:[39m Variable 'i_xLE' is assigned a value that is never used. [unreadVariable][0m
    double i_xLE = 0.;
                 ^
[1msrc/VStereoMaps.cpp:554:18: [31mstyle:[39m Variable 'i_yLE' is assigned a value that is never used. [unreadVariable][0m
    double i_yLE = 0.;
                 ^
[1msrc/VStereoMaps.cpp:800:21: [31mstyle:[39m Variable 'i_cx' is assigned a value that is never used. [unreadVariable][0m
        double i_cx = 0.;
                    ^
[1msrc/VStereoMaps.cpp:801:21: [31mstyle:[39m Variable 'i_cy' is assigned a value that is never used. [unreadVariable][0m
        double i_cy = 0.;
                    ^
[1msrc/VStereoMaps.cpp:802:26: [31mstyle:[39m Variable 'i_binDist' is assigned a value that is never used. [unreadVariable][0m
        double i_binDist = 0.;
                         ^
[1msrc/VStereoMaps.cpp:1036:16: [31mstyle:[39m Variable 'ids' is assigned a value that is never used. [unreadVariable][0m
    double ids = 0.;
               ^
[1msrc/VStereoMaps.cpp:1350:18: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
        double x = 0.;
                 ^
[1msrc/VStereoMaps.cpp:1351:18: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
        double y = 0.;
                 ^
[1msrc/VStereoMaps.cpp:1355:23: [31mstyle:[39m Variable 'i_tAcc' is assigned a value that is never used. [unreadVariable][0m
        double i_tAcc = 1.;
                      ^
[1msrc/VStereoMaps.cpp:1463:17: [31mstyle:[39m Variable 'i_cx' is assigned a value that is never used. [unreadVariable][0m
    double i_cx = 0.;
                ^
[1msrc/VStereoMaps.cpp:1464:17: [31mstyle:[39m Variable 'i_cy' is assigned a value that is never used. [unreadVariable][0m
    double i_cy = 0.;
                ^
[1msrc/VStereoMaps.cpp:1533:19: [31mstyle:[39m Variable 'theta2' is assigned a value that is never used. [unreadVariable][0m
    double theta2 = 0.;
                  ^
[1msrc/VStereoMaps.cpp:1535:35: [31mstyle:[39m Variable 'i_phaseSpaceCorrection' is assigned a value that is never used. [unreadVariable][0m
    double i_phaseSpaceCorrection = 1.;
                                  ^
[1msrc/VStereoMaps.cpp:1685:14: [31mstyle:[39m Variable 'x' is assigned a value that is never used. [unreadVariable][0m
    double x = 0.;
             ^
[1msrc/VStereoMaps.cpp:1686:14: [31mstyle:[39m Variable 'y' is assigned a value that is never used. [unreadVariable][0m
    double y = 0.;
             ^
[1msrc/VStereoMaps.cpp:1687:14: [31mstyle:[39m Variable 'r' is assigned a value that is never used. [unreadVariable][0m
    double r = 0.;
             ^
[1msrc/VStereoReconstruction.cpp:79:10: [31mstyle:[39m The scope of the variable 'hname' can be reduced. [variableScope][0m
    char hname[800];
         ^
[1msrc/VStereoReconstruction.cpp:80:10: [31mstyle:[39m The scope of the variable 'htitle' can be reduced. [variableScope][0m
    char htitle[800];
         ^
[1msrc/VStereoReconstruction.cpp:82:11: [31mstyle:[39m The scope of the variable 'hNull' can be reduced. [variableScope][0m
    TH1D* hNull = 0;
          ^
[1msrc/VStereoReconstruction.cpp:82:17: [31mstyle:[39m Variable 'hNull' is assigned a value that is never used. [unreadVariable][0m
    TH1D* hNull = 0;
                ^
[1msrc/VTMVAEvaluator.cpp:1624:19: [31mstyle:[39m Array index 'w' is used before limits check. [arrayIndexThenCheck][0m
            if( iW[w] > 0.001 && w < fTMVAData.size() )
                  ^
[1msrc/VTMVAEvaluator.cpp:1682:19: [31mstyle:[39m Array index 'w' is used before limits check. [arrayIndexThenCheck][0m
            if( iW[w] > 0.001 && w < fTMVAData.size() )
                  ^
[1msrc/VTMVAEvaluator.cpp:1765:29: [31mstyle:[39m Array index 'w' is used before limits check. [arrayIndexThenCheck][0m
                      if( iW[w] > 0.001 && w < fTMVAData.size() )
                            ^
[1msrc/VTMVAEvaluator.cpp:2272:10: [31mstyle:[39m Redundant initialization for 'i_dE'. The initialized value is overwritten before it is read. [redundantInitialization][0m
    i_dE = TMath::Abs( fTMVAData[iDataBin]->fEnergyCut_Log10TeV_max - fTMVAData[iDataBin]->fEnergyCut_Log10TeV_min );
         ^
[1msrc/VTMVAEvaluator.cpp:2269:17: [2mnote:[0m i_dE is initialized
    double i_dE = TMath::Power( 10., fTMVAData[iDataBin]->fEnergyCut_Log10TeV_max )
                ^
[1msrc/VTMVAEvaluator.cpp:2272:10: [2mnote:[0m i_dE is overwritten
    i_dE = TMath::Abs( fTMVAData[iDataBin]->fEnergyCut_Log10TeV_max - fTMVAData[iDataBin]->fEnergyCut_Log10TeV_min );
         ^
[1msrc/VTMVAEvaluator.cpp:2604:16: [31mstyle:[39m The scope of the variable 'i_xmax' can be reduced. [variableScope][0m
        double i_xmax = -99.;
               ^
[1msrc/VTMVAEvaluator.cpp:2878:12: [31mstyle:[39m The scope of the variable 'eS' can be reduced. [variableScope][0m
    double eS = 0.;
           ^
[1msrc/VTMVAEvaluator.cpp:2879:12: [31mstyle:[39m The scope of the variable 'eB' can be reduced. [variableScope][0m
    double eB = 0.;
           ^
[1msrc/VTMVAEvaluator.cpp:2926:9: [31mstyle:[39m The scope of the variable 'z' can be reduced. [variableScope][0m
    int z = 0;
        ^
[1msrc/VTMVAEvaluator.cpp:3130:12: [31mstyle:[39m The scope of the variable 'iC' can be reduced. [variableScope][0m
    double iC = 0.;
           ^
[1msrc/VTMVAEvaluator.cpp:3131:12: [31mstyle:[39m The scope of the variable 'iR' can be reduced. [variableScope][0m
    double iR = 0.;
           ^
[1msrc/VTMVAEvaluator.cpp:1379:15: [31mstyle:[39m Local variable 'hnull' shadows outer variable [shadowVariable][0m
        TH1D* hnull = new TH1D( "hnullcMVACuts", "", 100, iE_min, iE_max );
              ^
[1msrc/VTMVAEvaluator.cpp:1335:11: [2mnote:[0m Shadowed declaration
    TH1D* hnull = new TH1D( "hnullcSignalAndBackgroundEfficiencies", "", 100, iE_min, iE_max );
          ^
[1msrc/VTMVAEvaluator.cpp:1379:15: [2mnote:[0m Shadow variable
        TH1D* hnull = new TH1D( "hnullcMVACuts", "", 100, iE_min, iE_max );
              ^
[1msrc/VTMVAEvaluator.cpp:2040:23: [31mstyle:[39m Local variable 'z' shadows outer variable [shadowVariable][0m
    for( unsigned int z = fWeightFileIndex_Zmin; z <= fWeightFileIndex_Zmax; z++ )
                      ^
[1msrc/VTMVAEvaluator.cpp:2021:18: [2mnote:[0m Shadowed declaration
    unsigned int z = 0;
                 ^
[1msrc/VTMVAEvaluator.cpp:2040:23: [2mnote:[0m Shadow variable
    for( unsigned int z = fWeightFileIndex_Zmin; z <= fWeightFileIndex_Zmax; z++ )
                      ^
[1msrc/VTMVAEvaluator.cpp:115:14: [31mstyle:[39m Variable 'nVar' is assigned a value that is never used. [unreadVariable][0m
    int nVar = 0;
             ^
[1msrc/VTMVAEvaluator.cpp:1117:30: [31mstyle:[39m Variable 'iMeanEnergy' is assigned a value that is never used. [unreadVariable][0m
    double       iMeanEnergy = 0.;
                             ^
[1msrc/VTMVAEvaluator.cpp:1486:27: [31mstyle:[39m Variable 'iG' is assigned a value that is never used. [unreadVariable][0m
    TGraphAsymmErrors *iG = 0;
                          ^
[1msrc/VTMVAEvaluator.cpp:1740:23: [31mstyle:[39m Variable 'e_log10_G' is assigned a value that is never used. [unreadVariable][0m
     double e_log10_G = 0.;
                      ^
[1msrc/VTMVAEvaluator.cpp:1840:23: [31mstyle:[39m Variable 'e_log10_G' is assigned a value that is never used. [unreadVariable][0m
     double e_log10_G = 0.;
                      ^
[1msrc/VTMVAEvaluator.cpp:2877:14: [31mstyle:[39m Variable 'q' is assigned a value that is never used. [unreadVariable][0m
    double q = -1.;
             ^
[1msrc/VTMVAEvaluator.cpp:2878:15: [31mstyle:[39m Variable 'eS' is assigned a value that is never used. [unreadVariable][0m
    double eS = 0.;
              ^
[1msrc/VTMVAEvaluator.cpp:2879:15: [31mstyle:[39m Variable 'eB' is assigned a value that is never used. [unreadVariable][0m
    double eB = 0.;
              ^
[1msrc/VTMVAEvaluator.cpp:3130:15: [31mstyle:[39m Variable 'iC' is assigned a value that is never used. [unreadVariable][0m
    double iC = 0.;
              ^
[1msrc/VTMVAEvaluator.cpp:3131:15: [31mstyle:[39m Variable 'iR' is assigned a value that is never used. [unreadVariable][0m
    double iR = 0.;
              ^
[1msrc/VTS.analyzeMuonRings.cpp:128:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        sprintf( hname, "Tel_%d/tpars", i + 1 );
        ^
[1msrc/VTS.analyzeMuonRings.cpp:223:13: [31mwarning:[39m %i in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( ctitle, "muon_tel_%i", i + 1 );
            ^
[1msrc/VTS.analyzeMuonRings.cpp:248:13: [31mwarning:[39m %i in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( ctitle, "%s/muon_%i_T%i.pdf", dir.c_str(), RunNumber, i + 1 );
            ^
[1msrc/VTS.analyzeMuonRings.cpp:336:13: [31mwarning:[39m %i in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( c_query, "SELECT calib_id,run_id,telescope_id FROM tblCalib_Run_Data WHERE calib_id=%i AND run_id=%i AND telescope_id=%i", calib_ID, RunNumber, i );
            ^
[1msrc/VTS.analyzeMuonRings.cpp:351:17: [31mwarning:[39m %i in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( c_query, "INSERT INTO tblCalib_Run_Data (calib_id,run_id,telescope_id,val1,err1,val2) VALUES (%i, %i, %i, %.1f, %.1f, %i )", calib_ID, RunNumber, i, slope[i], slopeErr[i], nMuons[i] );
                ^
[1msrc/VTS.analyzeMuonRings.cpp:362:17: [31mwarning:[39m %i in format string (no. 6) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( c_query, "UPDATE tblCalib_Run_Data SET val1 = %.1f, err1 = %.1f, val2 = %i WHERE calib_id=%i AND run_id=%i AND telescope_id=%i", slope[i], slopeErr[i], nMuons[i], calib_ID, RunNumber, i );
                ^
[1msrc/VTS.analyzeMuonRings.cpp:25:27: [31mstyle:[39m Parameter 'argv' can be declared with const [constParameter][0m
int main( int argc, char* argv[] )
                          ^
[1msrc/VTS.calculateCrabRateFromMC.cpp:160:27: [31mstyle:[39m Local variable 't' shadows outer variable [shadowVariable][0m
        for( unsigned int t = 0; t < fESpecFun.size(); t++ )
                          ^
[1msrc/VTS.calculateCrabRateFromMC.cpp:78:12: [2mnote:[0m Shadowed declaration
    TTree* t = ( TTree* )gDirectory->Get( "fEffArea" );
           ^
[1msrc/VTS.calculateCrabRateFromMC.cpp:160:27: [2mnote:[0m Shadow variable
        for( unsigned int t = 0; t < fESpecFun.size(); t++ )
                          ^
[1msrc/VTS.calculateExposureFromDB.cpp:14:27: [31mstyle:[39m Parameter 'argv' can be declared with const [constParameter][0m
int main( int argc, char* argv[] )
                          ^
[1msrc/VTS.getObservingTimesWithinTimeAzElBounds.cpp:225:12: [31mstyle:[39m The scope of the variable 'tmpelev' can be reduced. [variableScope][0m
    double tmpelev = 0.0 ;
           ^
[1msrc/VTS.getObservingTimesWithinTimeAzElBounds.cpp:226:12: [31mstyle:[39m The scope of the variable 'tmpazim' can be reduced. [variableScope][0m
    double tmpazim = 0.0 ;
           ^
[1msrc/VTS.getObservingTimesWithinTimeAzElBounds.cpp:237:10: [31mstyle:[39m The scope of the variable 'withinBounds' can be reduced. [variableScope][0m
    bool withinBounds        = false ;
         ^
[1msrc/VTS.getObservingTimesWithinTimeAzElBounds.cpp:244:35: [31mwarning:[39m Either the condition 'decl.size()==0' is redundant or expression 'decl[i_row]' cause access out of bounds. [containerOutOfBounds][0m
        vsky->setTargetJ2000( decl[i_row] * TMath::RadToDeg() , ra[i_row] * TMath::RadToDeg() ) ;
                                  ^
[1msrc/VTS.getObservingTimesWithinTimeAzElBounds.cpp:279:25: [2mnote:[0m Assuming that condition 'decl.size()==0' is not redundant
        if( decl.size() == 0 )
                        ^
[1msrc/VTS.getObservingTimesWithinTimeAzElBounds.cpp:244:35: [2mnote:[0m Access out of bounds
        vsky->setTargetJ2000( decl[i_row] * TMath::RadToDeg() , ra[i_row] * TMath::RadToDeg() ) ;
                                  ^
[1msrc/VTS.getObservingTimesWithinTimeAzElBounds.cpp:225:20: [31mstyle:[39m Variable 'tmpelev' is assigned a value that is never used. [unreadVariable][0m
    double tmpelev = 0.0 ;
                   ^
[1msrc/VTS.getObservingTimesWithinTimeAzElBounds.cpp:226:20: [31mstyle:[39m Variable 'tmpazim' is assigned a value that is never used. [unreadVariable][0m
    double tmpazim = 0.0 ;
                   ^
[1msrc/VTS.getObservingTimesWithinTimeAzElBounds.cpp:237:30: [31mstyle:[39m Variable 'withinBounds' is assigned a value that is never used. [unreadVariable][0m
    bool withinBounds        = false ;
                             ^
[1msrc/VTS.getObservingTimesWithinTimeAzElBounds.cpp:238:20: [31mstyle:[39m Variable 'tdiff' is assigned a value that is never used. [unreadVariable][0m
    double tdiff   = 0.0 ;
                   ^
[1msrc/VTS.getRun_TimeElevAzim.cpp:250:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( c_query, "select mjd, ra, decl from VOFFLINE.tblPointing_Monitor_Telescope%d_Calibrated_Pointing where mjd > %f and mjd < %f ;", i_tel, MJDStart, MJDEnd ) ;
            ^
[1msrc/VTS.getRun_TimeElevAzim.cpp:112:19: [31mstyle:[39m Variable 'runnumber' is assigned a value that is never used. [unreadVariable][0m
    int runnumber = 0 ;
                  ^
[1msrc/VTS.next_day.cpp:59:12: [31mstyle:[39m The scope of the variable 'fGamma' can be reduced. [variableScope][0m
    double fGamma = 2.5;
           ^
[1msrc/VTableCalculator.cpp:517:25: [31mwarning:[39m Identical inner 'if' condition is always true. [identicalInnerCondition][0m
                    if( h )
                        ^
[1msrc/VTableCalculator.cpp:514:21: [2mnote:[0m outer condition: h
                if( h )
                    ^
[1msrc/VTableCalculator.cpp:517:25: [2mnote:[0m identical inner condition: h
                    if( h )
                        ^
[1msrc/VTableCalculator.cpp:532:25: [31mwarning:[39m Identical inner 'if' condition is always true. [identicalInnerCondition][0m
                    if( h )
                        ^
[1msrc/VTableCalculator.cpp:529:21: [2mnote:[0m outer condition: h
                if( h )
                    ^
[1msrc/VTableCalculator.cpp:532:25: [2mnote:[0m identical inner condition: h
                    if( h )
                        ^
[1msrc/VTableCalculator.cpp:547:25: [31mwarning:[39m Identical inner 'if' condition is always true. [identicalInnerCondition][0m
                    if( h )
                        ^
[1msrc/VTableCalculator.cpp:544:21: [2mnote:[0m outer condition: h
                if( h )
                    ^
[1msrc/VTableCalculator.cpp:547:25: [2mnote:[0m identical inner condition: h
                    if( h )
                        ^
[1msrc/VTableCalculator.cpp:562:25: [31mwarning:[39m Identical inner 'if' condition is always true. [identicalInnerCondition][0m
                    if( h )
                        ^
[1msrc/VTableCalculator.cpp:559:21: [2mnote:[0m outer condition: h
                if( h )
                    ^
[1msrc/VTableCalculator.cpp:562:25: [2mnote:[0m identical inner condition: h
                    if( h )
                        ^
[1msrc/VTableCalculator.cpp:100:9: [31mstyle:[39m The scope of the variable 'i' can be reduced. [variableScope][0m
    int i = 0;
        ^
[1msrc/VTableCalculator.cpp:101:9: [31mstyle:[39m The scope of the variable 'j' can be reduced. [variableScope][0m
    int j = 0;
        ^
[1msrc/VTableCalculator.cpp:100:11: [31mstyle:[39m Variable 'i' is assigned a value that is never used. [unreadVariable][0m
    int i = 0;
          ^
[1msrc/VTableCalculator.cpp:101:11: [31mstyle:[39m Variable 'j' is assigned a value that is never used. [unreadVariable][0m
    int j = 0;
          ^
[1msrc/VTableCalculator.cpp:410:19: [31mstyle:[39m Variable 'med' is assigned a value that is never used. [unreadVariable][0m
        float med = 0.;
                  ^
[1msrc/VTableCalculator.cpp:495:21: [31mstyle:[39m Variable 'h' is assigned a value that is never used. [unreadVariable][0m
            TH2F* h = 0;
                    ^
[1msrc/VTableCalculator.cpp:669:16: [31mstyle:[39m Variable 'ir' is assigned a value that is never used. [unreadVariable][0m
        int ir = 0;
               ^
[1msrc/VTableCalculator.cpp:765:20: [31mstyle:[39m Variable 'med' is assigned a value that is never used. [unreadVariable][0m
        double med = 0.;
                   ^
[1msrc/VTableCalculator.cpp:766:22: [31mstyle:[39m Variable 'sigma' is assigned a value that is never used. [unreadVariable][0m
        double sigma = 0.;
                     ^
[1msrc/VTableLookup.cpp:987:41: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
            if( fTLRunParameter->fDebug == 2 )
                                        ^
[1msrc/VTableLookup.cpp:975:41: [2mnote:[0m First condition
            if( fTLRunParameter->fDebug == 2 )
                                        ^
[1msrc/VTableLookup.cpp:987:41: [2mnote:[0m Second condition
            if( fTLRunParameter->fDebug == 2 )
                                        ^
[1msrc/VTableLookup.cpp:1136:41: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
            if( fTLRunParameter->fDebug == 2 )
                                        ^
[1msrc/VTableLookup.cpp:1125:41: [2mnote:[0m First condition
            if( fTLRunParameter->fDebug == 2 )
                                        ^
[1msrc/VTableLookup.cpp:1136:41: [2mnote:[0m Second condition
            if( fTLRunParameter->fDebug == 2 )
                                        ^
[1msrc/VTableLookup.cpp:654:32: [31mstyle:[39m Condition 'iPrint==true' is always false [knownConditionTrueFalse][0m
                    if( iPrint == true )
                               ^
[1msrc/VTableLookup.cpp:646:24: [2mnote:[0m Assuming that condition 'iPrint==true' is not redundant
            if( iPrint == true )
                       ^
[1msrc/VTableLookup.cpp:654:32: [2mnote:[0m Condition 'iPrint==true' is always false
                    if( iPrint == true )
                               ^
[1msrc/VTableLookup.cpp:673:36: [31mstyle:[39m Condition 'iPrint==true' is always false [knownConditionTrueFalse][0m
                        if( iPrint == true )
                                   ^
[1msrc/VTableLookup.cpp:665:28: [2mnote:[0m Assuming that condition 'iPrint==true' is not redundant
                if( iPrint == true )
                           ^
[1msrc/VTableLookup.cpp:673:36: [2mnote:[0m Condition 'iPrint==true' is always false
                        if( iPrint == true )
                                   ^
[1msrc/VTableLookup.cpp:736:12: [31mstyle:[39m The scope of the variable 'iEventWeight' can be reduced. [variableScope][0m
    double iEventWeight = 0.;
           ^
[1msrc/VTableLookup.cpp:738:9: [31mstyle:[39m The scope of the variable 'fevent' can be reduced. [variableScope][0m
    int fevent = 0;
        ^
[1msrc/VTableLookup.cpp:870:9: [31mstyle:[39m The scope of the variable 'fevent' can be reduced. [variableScope][0m
    int fevent = 0;
        ^
[1msrc/VTableLookup.cpp:947:13: [31mstyle:[39m The scope of the variable 'fnmscw' can be reduced. [variableScope][0m
        int fnmscw = 0;
            ^
[1msrc/VTableLookup.cpp:736:25: [31mstyle:[39m Variable 'iEventWeight' is assigned a value that is never used. [unreadVariable][0m
    double iEventWeight = 0.;
                        ^
[1msrc/VTableLookup.cpp:738:16: [31mstyle:[39m Variable 'fevent' is assigned a value that is never used. [unreadVariable][0m
    int fevent = 0;
               ^
[1msrc/VTableLookup.cpp:870:16: [31mstyle:[39m Variable 'fevent' is assigned a value that is never used. [unreadVariable][0m
    int fevent = 0;
               ^
[1msrc/VTableLookup.cpp:1414:15: [31mstyle:[39m Variable 'fevent' is assigned a value that is never used. [unreadVariable][0m
        fevent++;
              ^
[1msrc/VTableLookup.cpp:1950:23: [31mstyle:[39m Variable 'iTitle' is assigned a value that is never used. [unreadVariable][0m
        string iTitle = ihname;
                      ^
[1msrc/VTableLookup.cpp:132:81: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( iter_iLT_Data = fTableData.begin(); iter_iLT_Data != fTableData.end(); iter_iLT_Data++ )
                                                                                ^
[1msrc/VTableLookup.cpp:210:81: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( iter_iLT_Data = fTableData.begin(); iter_iLT_Data != fTableData.end(); iter_iLT_Data++ )
                                                                                ^
[1msrc/VTableLookup.cpp:448:81: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( iter_iLT_Data = fTableData.begin(); iter_iLT_Data != fTableData.end(); iter_iLT_Data++ )
                                                                                ^
[1msrc/VTableLookup.cpp:1431:81: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( iter_iLT_Data = fTableData.begin(); iter_iLT_Data != fTableData.end(); iter_iLT_Data++ )
                                                                                ^
[1msrc/VTableLookup.cpp:1482:85: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
        for( iter_iLT_Data = fTableData.begin(); iter_iLT_Data != fTableData.end(); iter_iLT_Data++ )
                                                                                    ^
[1msrc/VTableLookupDataHandler.cpp:1619:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( !fShortTree )
            ^
[1msrc/VTableLookupDataHandler.cpp:1615:13: [2mnote:[0m First condition
        if( !fShortTree )
            ^
[1msrc/VTableLookupDataHandler.cpp:1619:13: [2mnote:[0m Second condition
        if( !fShortTree )
            ^
[1msrc/VTableLookupDataHandler.cpp:1623:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( !fShortTree )
            ^
[1msrc/VTableLookupDataHandler.cpp:1619:13: [2mnote:[0m First condition
        if( !fShortTree )
            ^
[1msrc/VTableLookupDataHandler.cpp:1623:13: [2mnote:[0m Second condition
        if( !fShortTree )
            ^
[1msrc/VTableLookupDataHandler.cpp:1627:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( !fShortTree )
            ^
[1msrc/VTableLookupDataHandler.cpp:1623:13: [2mnote:[0m First condition
        if( !fShortTree )
            ^
[1msrc/VTableLookupDataHandler.cpp:1627:13: [2mnote:[0m Second condition
        if( !fShortTree )
            ^
[1msrc/VTableLookupDataHandler.cpp:1656:9: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( !fShortTree )
        ^
[1msrc/VTableLookupDataHandler.cpp:1652:9: [2mnote:[0m First condition
    if( !fShortTree )
        ^
[1msrc/VTableLookupDataHandler.cpp:1656:9: [2mnote:[0m Second condition
    if( !fShortTree )
        ^
[1msrc/VTableLookupDataHandler.cpp:1669:9: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( !fShortTree )
        ^
[1msrc/VTableLookupDataHandler.cpp:1665:9: [2mnote:[0m First condition
    if( !fShortTree )
        ^
[1msrc/VTableLookupDataHandler.cpp:1669:9: [2mnote:[0m Second condition
    if( !fShortTree )
        ^
[1msrc/VTableLookupDataHandler.cpp:1679:9: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( !fShortTree )
        ^
[1msrc/VTableLookupDataHandler.cpp:1675:9: [2mnote:[0m First condition
    if( !fShortTree )
        ^
[1msrc/VTableLookupDataHandler.cpp:1679:9: [2mnote:[0m Second condition
    if( !fShortTree )
        ^
[1msrc/VTableLookupDataHandler.cpp:619:30: [31mstyle:[39m The scope of the variable 'i_pix_id' can be reduced. [variableScope][0m
                unsigned int i_pix_id = 0;
                             ^
[1msrc/VTableLookupDataHandler.cpp:2296:43: [31mstyle:[39m The scope of the variable 'iMC_his' can be reduced. [variableScope][0m
    VEffectiveAreaCalculatorMCHistograms* iMC_his = 0;
                                          ^
[1msrc/VTableLookupRunParameter.cpp:130:18: [31mstyle:[39m Variable 'i' is assigned a value that is never used. [unreadVariable][0m
                i++;
                 ^
[1msrc/VTableLookupRunParameter.cpp:729:15: [31mstyle:[39m Variable 'iW' is assigned a value that is never used. [unreadVariable][0m
    double iW = 1;
              ^
[1msrc/VTimeMask.cpp:654:9: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( set_success )
        ^
[1msrc/VTimeMask.cpp:650:9: [2mnote:[0m First condition
    if( set_success )
        ^
[1msrc/VTimeMask.cpp:654:9: [2mnote:[0m Second condition
    if( set_success )
        ^
[1msrc/VTimeMask.cpp:666:13: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
        if( set_success )
            ^
[1msrc/VTimeMask.cpp:662:13: [2mnote:[0m First condition
        if( set_success )
            ^
[1msrc/VTimeMask.cpp:666:13: [2mnote:[0m Second condition
        if( set_success )
            ^
[1msrc/VTimeMask.cpp:831:12: [31mstyle:[39m The scope of the variable 'currMJD' can be reduced. [variableScope][0m
    double currMJD = 0.0 ;
           ^
[1msrc/VTimeMask.cpp:831:20: [31mstyle:[39m Variable 'currMJD' is assigned a value that is never used. [unreadVariable][0m
    double currMJD = 0.0 ;
                   ^
[1msrc/VTraceHandler.cpp:361:31: [31mstyle:[39m Local variable 'm_pos' shadows outer variable [shadowVariable][0m
            for( unsigned int m_pos = fpulsetiming_maxPV + 1; m_pos < fpulsetiminglevels_size; m_pos++ )
                              ^
[1msrc/VTraceHandler.cpp:299:18: [2mnote:[0m Shadowed declaration
    unsigned int m_pos = 0;
                 ^
[1msrc/VTraceHandler.cpp:361:31: [2mnote:[0m Shadow variable
            for( unsigned int m_pos = fpulsetiming_maxPV + 1; m_pos < fpulsetiminglevels_size; m_pos++ )
                              ^
[1msrc/VTraceHandler.cpp:299:24: [31mstyle:[39m Variable 'm_pos' is assigned a value that is never used. [unreadVariable][0m
    unsigned int m_pos = 0;
                       ^
[1msrc/VTraceHandler.cpp:302:20: [31mstyle:[39m Variable 'i_trace' is assigned a value that is never used. [unreadVariable][0m
    double i_trace = 0.;
                   ^
[1msrc/VTraceHandler.cpp:628:17: [31mstyle:[39m Variable 'ampl' is assigned a value that is never used. [unreadVariable][0m
    double ampl = 0.;
                ^
[1msrc/VTraceHandler.cpp:656:20: [31mstyle:[39m Variable 'charge' is assigned a value that is never used. [unreadVariable][0m
            charge += ( float )fpTrace.at( n - 1 - i );
                   ^
[1msrc/VTraceHandler.cpp:708:10: [31mstyle:[39m Variable 'ampl' is assigned a value that is never used. [unreadVariable][0m
    ampl -= fPed;
         ^
[1msrc/VTraceHandler.cpp:721:13: [31mstyle:[39m Variable 'max' is assigned a value that is never used. [unreadVariable][0m
    int max = 0;
            ^
[1msrc/VTraceHandler.cpp:735:42: [31mstyle:[39m Variable 'ampl' is assigned a value that is never used. [unreadVariable][0m
    double charge = 0, charge2 = 0, ampl = 0.;
                                         ^
[1msrc/VTraceHandler.cpp:856:18: [31mstyle:[39m Variable 'arrtime2' is assigned a value that is never used. [unreadVariable][0m
        arrtime2 = ( ( int )SearchEnd + ( int )window - 1 );
                 ^
[1msrc/VTraceHandler.cpp:858:10: [31mstyle:[39m Variable 'ampl' is assigned a value that is never used. [unreadVariable][0m
    ampl -= fPed;
         ^
[1msrc/VTraceHandler.cpp:865:25: [31mstyle:[39m Variable 'chargeAutoWin' is assigned a value that is never used. [unreadVariable][0m
    float chargeAutoWin = 0.;
                        ^
[1msrc/VTraceHandler.cpp:894:23: [31mstyle:[39m Variable 'chargeAutoWin' is assigned a value that is never used. [unreadVariable][0m
        chargeAutoWin += FADC[k];
                      ^
[1msrc/VUtilities.cpp:99:27: [31mstyle:[39m Variable 'pos' is assigned a value that is never used. [unreadVariable][0m
    string::size_type pos = 0;
                          ^
[1msrc/VUtilities.cpp:125:27: [31mstyle:[39m Variable 'pos' is assigned a value that is never used. [unreadVariable][0m
    string::size_type pos = 0;
                          ^
[1msrc/VUtilities.cpp:43:39: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
    for( i = c.begin(); i != c.end(); i++ )
                                      ^
[1msrc/VWPPhysSensitivityFile.cpp:139:24: [31mstyle:[39m The if condition is the same as the previous if condition [duplicateCondition][0m
    if( fOffsetCounter == 9999 )
                       ^
[1msrc/VWPPhysSensitivityFile.cpp:133:24: [2mnote:[0m First condition
    if( fOffsetCounter == 9999 )
                       ^
[1msrc/VWPPhysSensitivityFile.cpp:139:24: [2mnote:[0m Second condition
    if( fOffsetCounter == 9999 )
                       ^
[1msrc/VWPPhysSensitivityFile.cpp:522:17: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                sprintf( hname, "_%d", j );
                ^
[1msrc/VZDCF.cpp:178:10: [31mstyle:[39m The scope of the variable 'hname' can be reduced. [variableScope][0m
    char hname[800];
         ^
[1msrc/VZDCF.cpp:179:10: [31mstyle:[39m The scope of the variable 'htitle' can be reduced. [variableScope][0m
    char htitle[800];
         ^
[1msrc/binaryVisibility.cpp:490:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            sprintf( hname, "hObs_%d", i );
            ^
[1msrc/binaryVisibility.cpp:224:12: [31mstyle:[39m The scope of the variable 'iMoonE' can be reduced. [variableScope][0m
    double iMoonE = 0.;
           ^
[1msrc/binaryVisibility.cpp:225:12: [31mstyle:[39m The scope of the variable 'iSunE' can be reduced. [variableScope][0m
    double iSunE = 0.;
           ^
[1msrc/binaryVisibility.cpp:226:12: [31mstyle:[39m The scope of the variable 'iObjE' can be reduced. [variableScope][0m
    double iObjE = 0.;
           ^
[1msrc/binaryVisibility.cpp:227:12: [31mstyle:[39m The scope of the variable 'iMoonF' can be reduced. [variableScope][0m
    double iMoonF = 0.;
           ^
[1msrc/binaryVisibility.cpp:210:24: [31mstyle:[39m Variable 'fNObj' is assigned a value that is never used. [unreadVariable][0m
    vector< int > fNObj( fMoonFrac_min.size(), 0 );
                       ^
[1msrc/binaryVisibility.cpp:224:19: [31mstyle:[39m Variable 'iMoonE' is assigned a value that is never used. [unreadVariable][0m
    double iMoonE = 0.;
                  ^
[1msrc/binaryVisibility.cpp:225:18: [31mstyle:[39m Variable 'iSunE' is assigned a value that is never used. [unreadVariable][0m
    double iSunE = 0.;
                 ^
[1msrc/binaryVisibility.cpp:226:18: [31mstyle:[39m Variable 'iObjE' is assigned a value that is never used. [unreadVariable][0m
    double iObjE = 0.;
                 ^
[1msrc/binaryVisibility.cpp:227:19: [31mstyle:[39m Variable 'iMoonF' is assigned a value that is never used. [unreadVariable][0m
    double iMoonF = 0.;
                  ^
[1msrc/binaryVisibility.cpp:236:19: [31mstyle:[39m Variable 'fPhase' is assigned a value that is never used. [unreadVariable][0m
    double fPhase = 0.;
                  ^
[1msrc/binaryVisibility.cpp:368:14: [31mstyle:[39m Variable 'i_oldMJD' is assigned a value that is never used. [unreadVariable][0m
    i_oldMJD = 0;
             ^
[1msrc/binaryVisibility.cpp:369:14: [31mstyle:[39m Variable 'i_newMJD' is assigned a value that is never used. [unreadVariable][0m
    i_newMJD = 0;
             ^
[1msrc/binaryVisibility.cpp:396:22: [31mstyle:[39m Variable 'i_oldMJD' is assigned a value that is never used. [unreadVariable][0m
            i_oldMJD = i_newMJD;
                     ^
[1msrc/combineDISPTables.cpp:22:27: [31mstyle:[39m Parameter 'argv' can be declared with const [constParameter][0m
int main( int argc, char* argv[] )
                          ^
[1msrc/combineLookupTables.cpp:241:12: [31mstyle:[39m The scope of the variable 'fIn' can be reduced. [variableScope][0m
    TFile* fIn = 0;
           ^
[1msrc/combineLookupTables.cpp:241:16: [31mstyle:[39m Variable 'fIn' is assigned a value that is never used. [unreadVariable][0m
    TFile* fIn = 0;
               ^
[1msrc/fillDL2Trees.cpp:38:27: [31mstyle:[39m Parameter 'argv' can be declared with const [constParameter][0m
int main( int argc, char* argv[] )
                          ^
[1msrc/logFile.cpp:40:27: [31mstyle:[39m Parameter 'argv' can be declared with const [constParameter][0m
int main( int argc, char* argv[] )
                          ^
[1msrc/makeDISPTables.cpp:72:12: [31mstyle:[39m Unused variable: temp2 [unusedVariable][0m
    string temp2;
           ^
[1msrc/makeEffectiveArea.cpp:150:12: [31mstyle:[39m The scope of the variable 'fMC_histoFile' can be reduced. [variableScope][0m
    TFile* fMC_histoFile = 0;
           ^
[1msrc/makeEffectiveArea.cpp:416:26: [31mstyle:[39m Local variable 'c' shadows outer variable [shadowVariable][0m
       for( unsigned int c = 0; c < fCuts.size(); c++ )
                         ^
[1msrc/makeEffectiveArea.cpp:212:13: [2mnote:[0m Shadowed declaration
    TChain* c = new TChain( "data" );
            ^
[1msrc/makeEffectiveArea.cpp:416:26: [2mnote:[0m Shadow variable
       for( unsigned int c = 0; c < fCuts.size(); c++ )
                         ^
[1msrc/makeEffectiveArea.cpp:150:26: [31mstyle:[39m Variable 'fMC_histoFile' is assigned a value that is never used. [unreadVariable][0m
    TFile* fMC_histoFile = 0;
                         ^
[1msrc/makeRadialAcceptance.cpp:448:30: [31mwarning:[39m Identical inner 'if' condition is always true. [identicalInnerCondition][0m
                  if( facc_az[a] )
                             ^
[1msrc/makeRadialAcceptance.cpp:446:25: [2mnote:[0m outer condition: facc_az[a]
             if( facc_az[a] )
                        ^
[1msrc/makeRadialAcceptance.cpp:448:30: [2mnote:[0m identical inner condition: facc_az[a]
                  if( facc_az[a] )
                             ^
[1msrc/makeRadialAcceptance.cpp:390:16: [31mstyle:[39m The scope of the variable 'x_rotJ2000' can be reduced. [variableScope][0m
        double x_rotJ2000 = 0.;
               ^
[1msrc/makeRadialAcceptance.cpp:391:16: [31mstyle:[39m The scope of the variable 'y_rotJ2000' can be reduced. [variableScope][0m
        double y_rotJ2000 = 0.;
               ^
[1msrc/makeRadialAcceptance.cpp:298:31: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
            for( unsigned int i = 0; i < iParV2->fTelToAnalyze.size(); i++ )
                              ^
[1msrc/makeRadialAcceptance.cpp:265:23: [2mnote:[0m Shadowed declaration
    for( unsigned int i = 0; i < fRunPara->fRunList.size(); i++ )
                      ^
[1msrc/makeRadialAcceptance.cpp:298:31: [2mnote:[0m Shadow variable
            for( unsigned int i = 0; i < iParV2->fTelToAnalyze.size(); i++ )
                              ^
[1msrc/printRunParameter.cpp:622:27: [31mstyle:[39m The scope of the variable 'fMC' can be reduced. [variableScope][0m
    VMonteCarloRunHeader* fMC = 0;
                          ^
[1msrc/printRunParameter.cpp:287:46: [31mperformance:[39m Function parameter 'iPara' should be passed by const reference. [passedByValue][0m
bool readNTelescopeTypes( TFile* fIn, string iPara )
                                             ^
[1msrc/printRunParameter.cpp:331:43: [31mperformance:[39m Function parameter 'iPara' should be passed by const reference. [passedByValue][0m
bool readRunParameter( TFile* fIn, string iPara )
                                          ^
[1msrc/printRunParameter.cpp:415:42: [31mperformance:[39m Function parameter 'iPara' should be passed by const reference. [passedByValue][0m
bool readMCParameter( TFile* fIn, string iPara )
                                         ^
[1msrc/printRunParameter.cpp:244:17: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
                fList_of_Tel_type_iterator++ )
                ^
[1msrc/printRunParameter.cpp:261:21: [31mperformance:[39m Prefer prefix ++/-- operators for non-primitive types. [postfixOperator][0m
                    fList_of_Tel_type_iterator++ )
                    ^
[1msrc/smoothLookupTables.cpp:151:27: [31mstyle:[39m Parameter 'argv' can be declared with const [constParameter][0m
int main( int argc, char* argv[] )
                          ^
[1msrc/splitVBF.cpp:155:16: [31mstyle:[39m Condition 'writePacket' is always true [knownConditionTrueFalse][0m
            if(writePacket){
               ^
[1msrc/splitVBF.cpp:121:27: [2mnote:[0m Assignment 'writePacket=true', assigned value is 1
            writePacket = true;
                          ^
[1msrc/splitVBF.cpp:155:16: [2mnote:[0m Condition 'writePacket' is always true
            if(writePacket){
               ^
[1msrc/testEvndispOutput.cpp:37:27: [31mperformance:[39m Function parameter 'rootfile' should be passed by const reference. [passedByValue][0m
                   string rootfile,
                          ^
[1msrc/testEvndispOutput.cpp:54:27: [31mstyle:[39m Parameter 'argv' can be declared with const [constParameter][0m
int main( int argc, char* argv[] )
                          ^
[1msrc/trainTMVAforAngularReconstruction.cpp:318:31: [31mperformance:[39m Function parameter 'iTargetML' should be passed by const reference. [passedByValue][0m
bool readTrainingFile( string iTargetML, ULong64_t iTelType, string iDataDirectory )
                              ^
[1msrc/trainTMVAforAngularReconstruction.cpp:318:69: [31mperformance:[39m Function parameter 'iDataDirectory' should be passed by const reference. [passedByValue][0m
bool readTrainingFile( string iTargetML, ULong64_t iTelType, string iDataDirectory )
                                                                    ^
[1msrc/trainTMVAforAngularReconstruction.cpp:404:38: [31mperformance:[39m Function parameter 'iInputFile' should be passed by const reference. [passedByValue][0m
bool writeTrainingFile( const string iInputFile, ULong64_t iTelType,
                                     ^
[1msrc/trainTMVAforAngularReconstruction.cpp:405:53: [31mperformance:[39m Function parameter 'iArrayList' should be passed by const reference. [passedByValue][0m
                        unsigned int iRecID, string iArrayList,
                                                    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:473:38: [31mstyle:[39m Expression is always true because 'else if' condition is opposite to previous condition at line 450. [multiCondition][0m
        else if( iRun->fMVAMethod[i] == "BOXCUTS" )
                                     ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:450:33: [2mnote:[0m first condition
        if( iRun->fMVAMethod[i] != "BOXCUTS" )
                                ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:473:38: [2mnote:[0m else if condition is opposite to first condition
        else if( iRun->fMVAMethod[i] == "BOXCUTS" )
                                     ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:108:5: [31mwarning:[39m Either the condition '!iDataTree_reduced' is redundant or there is possible null pointer dereference: iDataTree_reduced. [nullPointerRedundantCheck][0m
    iDataTree_reduced->Branch( "MSCW", &MSCW, "MSCW/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:135:18: [2mnote:[0m Assuming that condition '!iDataTree_reduced' is not redundant
             if( !iDataTree_reduced )
                 ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:108:5: [2mnote:[0m Null pointer dereference
    iDataTree_reduced->Branch( "MSCW", &MSCW, "MSCW/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:109:5: [31mwarning:[39m Either the condition '!iDataTree_reduced' is redundant or there is possible null pointer dereference: iDataTree_reduced. [nullPointerRedundantCheck][0m
    iDataTree_reduced->Branch( "MSCL", &MSCL, "MSCL/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:135:18: [2mnote:[0m Assuming that condition '!iDataTree_reduced' is not redundant
             if( !iDataTree_reduced )
                 ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:109:5: [2mnote:[0m Null pointer dereference
    iDataTree_reduced->Branch( "MSCL", &MSCL, "MSCL/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:110:5: [31mwarning:[39m Either the condition '!iDataTree_reduced' is redundant or there is possible null pointer dereference: iDataTree_reduced. [nullPointerRedundantCheck][0m
    iDataTree_reduced->Branch( "ErecS", &ErecS, "ErecS/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:135:18: [2mnote:[0m Assuming that condition '!iDataTree_reduced' is not redundant
             if( !iDataTree_reduced )
                 ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:110:5: [2mnote:[0m Null pointer dereference
    iDataTree_reduced->Branch( "ErecS", &ErecS, "ErecS/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:111:5: [31mwarning:[39m Either the condition '!iDataTree_reduced' is redundant or there is possible null pointer dereference: iDataTree_reduced. [nullPointerRedundantCheck][0m
    iDataTree_reduced->Branch( "EChi2S", &EChi2S, "EChi2S/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:135:18: [2mnote:[0m Assuming that condition '!iDataTree_reduced' is not redundant
             if( !iDataTree_reduced )
                 ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:111:5: [2mnote:[0m Null pointer dereference
    iDataTree_reduced->Branch( "EChi2S", &EChi2S, "EChi2S/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:112:5: [31mwarning:[39m Either the condition '!iDataTree_reduced' is redundant or there is possible null pointer dereference: iDataTree_reduced. [nullPointerRedundantCheck][0m
    iDataTree_reduced->Branch( "NImages_Ttype", NImages_Ttype, "NImages_Ttype[20]/i" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:135:18: [2mnote:[0m Assuming that condition '!iDataTree_reduced' is not redundant
             if( !iDataTree_reduced )
                 ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:112:5: [2mnote:[0m Null pointer dereference
    iDataTree_reduced->Branch( "NImages_Ttype", NImages_Ttype, "NImages_Ttype[20]/i" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:113:5: [31mwarning:[39m Either the condition '!iDataTree_reduced' is redundant or there is possible null pointer dereference: iDataTree_reduced. [nullPointerRedundantCheck][0m
    iDataTree_reduced->Branch( "EmissionHeight", &EmissionHeight, "EmissionHeight/F" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:135:18: [2mnote:[0m Assuming that condition '!iDataTree_reduced' is not redundant
             if( !iDataTree_reduced )
                 ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:113:5: [2mnote:[0m Null pointer dereference
    iDataTree_reduced->Branch( "EmissionHeight", &EmissionHeight, "EmissionHeight/F" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:114:5: [31mwarning:[39m Either the condition '!iDataTree_reduced' is redundant or there is possible null pointer dereference: iDataTree_reduced. [nullPointerRedundantCheck][0m
    iDataTree_reduced->Branch( "EmissionHeightChi2", &EmissionHeightChi2, "EmissionHeightChi2/F" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:135:18: [2mnote:[0m Assuming that condition '!iDataTree_reduced' is not redundant
             if( !iDataTree_reduced )
                 ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:114:5: [2mnote:[0m Null pointer dereference
    iDataTree_reduced->Branch( "EmissionHeightChi2", &EmissionHeightChi2, "EmissionHeightChi2/F" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:115:5: [31mwarning:[39m Either the condition '!iDataTree_reduced' is redundant or there is possible null pointer dereference: iDataTree_reduced. [nullPointerRedundantCheck][0m
    iDataTree_reduced->Branch( "SizeSecondMax", &SizeSecondMax, "SizeSecondMax/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:135:18: [2mnote:[0m Assuming that condition '!iDataTree_reduced' is not redundant
             if( !iDataTree_reduced )
                 ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:115:5: [2mnote:[0m Null pointer dereference
    iDataTree_reduced->Branch( "SizeSecondMax", &SizeSecondMax, "SizeSecondMax/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:116:5: [31mwarning:[39m Either the condition '!iDataTree_reduced' is redundant or there is possible null pointer dereference: iDataTree_reduced. [nullPointerRedundantCheck][0m
    iDataTree_reduced->Branch( "DispDiff", &DispDiff, "DispDiff/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:135:18: [2mnote:[0m Assuming that condition '!iDataTree_reduced' is not redundant
             if( !iDataTree_reduced )
                 ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:116:5: [2mnote:[0m Null pointer dereference
    iDataTree_reduced->Branch( "DispDiff", &DispDiff, "DispDiff/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:117:5: [31mwarning:[39m Either the condition '!iDataTree_reduced' is redundant or there is possible null pointer dereference: iDataTree_reduced. [nullPointerRedundantCheck][0m
    iDataTree_reduced->Branch( "MCe0", &MCe0, "MCe0/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:135:18: [2mnote:[0m Assuming that condition '!iDataTree_reduced' is not redundant
             if( !iDataTree_reduced )
                 ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:117:5: [2mnote:[0m Null pointer dereference
    iDataTree_reduced->Branch( "MCe0", &MCe0, "MCe0/D" );
    ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:477:31: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
            for( unsigned int i = 0; i < iRun->fTrainingVariable_CutRangeMin.size(); i++ )
                              ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:436:23: [2mnote:[0m Shadowed declaration
    for( unsigned int i = 0; i < iRun->fMVAMethod.size(); i++ )
                      ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:477:31: [2mnote:[0m Shadow variable
            for( unsigned int i = 0; i < iRun->fTrainingVariable_CutRangeMin.size(); i++ )
                              ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:481:31: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
            for( unsigned int i = 0; i < iRun->fTrainingVariable_CutRangeMax.size(); i++ )
                              ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:436:23: [2mnote:[0m Shadowed declaration
    for( unsigned int i = 0; i < iRun->fMVAMethod.size(); i++ )
                      ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:481:31: [2mnote:[0m Shadow variable
            for( unsigned int i = 0; i < iRun->fTrainingVariable_CutRangeMax.size(); i++ )
                              ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:485:31: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
            for( unsigned int i = 0; i < iRun->fTrainingVariable_VarProp.size(); i++ )
                              ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:436:23: [2mnote:[0m Shadowed declaration
    for( unsigned int i = 0; i < iRun->fMVAMethod.size(); i++ )
                      ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:485:31: [2mnote:[0m Shadow variable
            for( unsigned int i = 0; i < iRun->fTrainingVariable_VarProp.size(); i++ )
                              ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:43:44: [31mperformance:[39m Function parameter 'a' should be passed by const reference. [passedByValue][0m
string resetNumberOfTrainingEvents( string a, Long64_t n, bool iSignal, unsigned int iRequiredEvents )
                                           ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:226:41: [31mperformance:[39m Function parameter 'fRunOption' should be passed by const reference. [passedByValue][0m
                                 string fRunOption )
                                        ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:233:41: [31mperformance:[39m Function parameter 'fRunOption' should be passed by const reference. [passedByValue][0m
                                 string fRunOption )
                                        ^
[1msrc/trainTMVAforGammaHadronSeparation.cpp:242:20: [31mperformance:[39m Function parameter 'fRunOption' should be passed by const reference. [passedByValue][0m
            string fRunOption )
                   ^
[1msrc/trainTMVAforGammaHadronSeparation_TrainingFile.cpp:153:16: [31mstyle:[39m The scope of the variable 'i_theta' can be reduced. [variableScope][0m
        double i_theta = 0.;
               ^
[1msrc/trainTMVAforGammaHadronSeparation_TrainingFile.cpp:154:16: [31mstyle:[39m The scope of the variable 'i_r' can be reduced. [variableScope][0m
        double i_r = 0.;
               ^
[1msrc/updateDBlaserRUN.cpp:734:42: [31mstyle:[39m Condition 'list_of_valid_tel.size()>0' is always true [knownConditionTrueFalse][0m
            if( list_of_valid_tel.size() > 0 )
                                         ^
[1msrc/updateDBlaserRUN.cpp:685:38: [2mnote:[0m Assuming that condition 'list_of_valid_tel.size()>0' is not redundant
        if( list_of_valid_tel.size() > 0 )
                                     ^
[1msrc/updateDBlaserRUN.cpp:734:42: [2mnote:[0m Condition 'list_of_valid_tel.size()>0' is always true
            if( list_of_valid_tel.size() > 0 )
                                         ^
[1msrc/updateDBlaserRUN.cpp:745:50: [31mstyle:[39m Condition 'list_tel_missing.size()>counter' is always true [knownConditionTrueFalse][0m
                else if( list_tel_missing.size() > counter )
                                                 ^
[1msrc/updateDBlaserRUN.cpp:741:50: [2mnote:[0m Assuming that condition 'list_tel_missing.size()==counter' is not redundant
                else if( list_tel_missing.size() == counter )
                                                 ^
[1msrc/updateDBlaserRUN.cpp:745:50: [2mnote:[0m Condition 'list_tel_missing.size()>counter' is always true
                else if( list_tel_missing.size() > counter )
                                                 ^
[1msrc/updateDBlaserRUN.cpp:352:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            printf( "** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:352:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            printf( "** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:352:13: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            printf( "** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:352:13: [31mwarning:[39m %d in format string (no. 5) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            printf( "** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:359:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            printf( "*** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:359:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            printf( "*** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:359:13: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            printf( "*** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:359:13: [31mwarning:[39m %d in format string (no. 5) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            printf( "*** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:360:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            fprintf( NEW_laser_list_File, "%d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:360:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            fprintf( NEW_laser_list_File, "%d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:360:13: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            fprintf( NEW_laser_list_File, "%d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:360:13: [31mwarning:[39m %d in format string (no. 5) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            fprintf( NEW_laser_list_File, "%d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], mask_missing_tel, VERITAS_DB_LaserDate[i_run] );
            ^
[1msrc/updateDBlaserRUN.cpp:364:17: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                fprintf( NEW_laser_list_File_for_download, "%d %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserDate[i_run] );
                ^
[1msrc/updateDBlaserRUN.cpp:364:17: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
                fprintf( NEW_laser_list_File_for_download, "%d %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserDate[i_run] );
                ^
[1msrc/updateDBlaserRUN.cpp:394:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        fprintf( All_laser_VERITAS_DB_File, "%d %2d %2d %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], VERITAS_DB_LaserDate[i_run] );
        ^
[1msrc/updateDBlaserRUN.cpp:394:9: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        fprintf( All_laser_VERITAS_DB_File, "%d %2d %2d %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], VERITAS_DB_LaserDate[i_run] );
        ^
[1msrc/updateDBlaserRUN.cpp:394:9: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        fprintf( All_laser_VERITAS_DB_File, "%d %2d %2d %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], VERITAS_DB_LaserDate[i_run] );
        ^
[1msrc/updateDBlaserRUN.cpp:394:9: [31mwarning:[39m %d in format string (no. 4) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        fprintf( All_laser_VERITAS_DB_File, "%d %2d %2d %d \n", VERITAS_DB_LaserRunNumber[i_run], VERITAS_DB_LaserConfigMask[i_run], VERITAS_DB_LaserExclTel[i_run], VERITAS_DB_LaserDate[i_run] );
        ^
[1msrc/updateDBlaserRUN.cpp:424:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            fprintf( All_laser_VOFFLINE_DB_File, "%d %s %s\n", VOFFLINE_DB_LaserRunNumber_Tel[i_tel][i_run_voff], VOFFLINE_DB_Laserdate_Tel[i_tel][i_run_voff].c_str(), VOFFLINE_DB_Laserversion_Tel[i_tel][i_run_voff].c_str() );
            ^
[1msrc/updateDBlaserRUN.cpp:534:13: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            fprintf( NEW_laser_list_File_EVNDISP_analyse_laser_DONE, "%d %2d %2d %2u %d \n", VERITAS_DB_LaserRunNumber[j], VERITAS_DB_LaserConfigMask[j], VERITAS_DB_LaserExclTel[j], VERITAS_DB_LaserMiss[j], VERITAS_DB_LaserDate[j] );
            ^
[1msrc/updateDBlaserRUN.cpp:534:13: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            fprintf( NEW_laser_list_File_EVNDISP_analyse_laser_DONE, "%d %2d %2d %2u %d \n", VERITAS_DB_LaserRunNumber[j], VERITAS_DB_LaserConfigMask[j], VERITAS_DB_LaserExclTel[j], VERITAS_DB_LaserMiss[j], VERITAS_DB_LaserDate[j] );
            ^
[1msrc/updateDBlaserRUN.cpp:534:13: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            fprintf( NEW_laser_list_File_EVNDISP_analyse_laser_DONE, "%d %2d %2d %2u %d \n", VERITAS_DB_LaserRunNumber[j], VERITAS_DB_LaserConfigMask[j], VERITAS_DB_LaserExclTel[j], VERITAS_DB_LaserMiss[j], VERITAS_DB_LaserDate[j] );
            ^
[1msrc/updateDBlaserRUN.cpp:534:13: [31mwarning:[39m %d in format string (no. 5) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
            fprintf( NEW_laser_list_File_EVNDISP_analyse_laser_DONE, "%d %2d %2d %2u %d \n", VERITAS_DB_LaserRunNumber[j], VERITAS_DB_LaserConfigMask[j], VERITAS_DB_LaserExclTel[j], VERITAS_DB_LaserMiss[j], VERITAS_DB_LaserDate[j] );
            ^
[1msrc/updateDBlaserRUN.cpp:813:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        printf( "d%8d %d %4s %4s %4s %4s %4s \n", VERITAS_DB_LaserDate[i], VERITAS_DB_LaserRunNumber[i], calib_status.Data(), writing_status.Data(), Stellist.Data(), Scalibstatus.Data(), Swritingstatus.Data() );
        ^
[1msrc/updateDBlaserRUN.cpp:813:9: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        printf( "d%8d %d %4s %4s %4s %4s %4s \n", VERITAS_DB_LaserDate[i], VERITAS_DB_LaserRunNumber[i], calib_status.Data(), writing_status.Data(), Stellist.Data(), Scalibstatus.Data(), Swritingstatus.Data() );
        ^
[1msrc/updateDBlaserRUN.cpp:814:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        fprintf( pbFile, "d%8d %d %4s %4s %4s %4s %4s \n", VERITAS_DB_LaserDate[i], VERITAS_DB_LaserRunNumber[i], calib_status.Data(), writing_status.Data(), Stellist.Data(), Scalibstatus.Data(), Swritingstatus.Data() );
        ^
[1msrc/updateDBlaserRUN.cpp:814:9: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        fprintf( pbFile, "d%8d %d %4s %4s %4s %4s %4s \n", VERITAS_DB_LaserDate[i], VERITAS_DB_LaserRunNumber[i], calib_status.Data(), writing_status.Data(), Stellist.Data(), Scalibstatus.Data(), Swritingstatus.Data() );
        ^
[1msrc/updateDBlaserRUN.cpp:1568:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        fprintf( NEW_laser_list_File_for_download, "%d %d \n", VERITAS_DB_LaserRunNumber[i], VERITAS_DB_LaserDate[i] );
        ^
[1msrc/updateDBlaserRUN.cpp:1568:9: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        fprintf( NEW_laser_list_File_for_download, "%d %d \n", VERITAS_DB_LaserRunNumber[i], VERITAS_DB_LaserDate[i] );
        ^
[1msrc/updateDBlaserRUN.cpp:1947:5: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
    sprintf( filename, "%s/data/d%d/%d.cvbf", ENVIR_VAR, Date, RunNumber );
    ^
[1msrc/updateDBlaserRUN.cpp:1947:5: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
    sprintf( filename, "%s/data/d%d/%d.cvbf", ENVIR_VAR, Date, RunNumber );
    ^
[1msrc/updateDBlaserRUN.cpp:684:22: [31mstyle:[39m The scope of the variable 'counter' can be reduced. [variableScope][0m
        unsigned int counter = 0; // for summary
                     ^
[1msrc/updateDBlaserRUN.cpp:691:31: [31mstyle:[39m Local variable 'i' shadows outer variable [shadowVariable][0m
            for( unsigned int i = 0; i < list_of_valid_tel.size() ; i++ )
                              ^
[1msrc/updateDBlaserRUN.cpp:636:23: [2mnote:[0m Shadowed declaration
    for( unsigned int i = 0 ; i < VERITAS_DB_LaserRunNumber.size(); i++ )
                      ^
[1msrc/updateDBlaserRUN.cpp:691:31: [2mnote:[0m Shadow variable
            for( unsigned int i = 0; i < list_of_valid_tel.size() ; i++ )
                              ^
[1msrc/updateDBlaserRUN.cpp:1037:18: [31mstyle:[39m Variable 'want' is assigned a value that is never used. [unreadVariable][0m
    TString want = "";
                 ^
[1msrc/updateDBlaserRUN.cpp:1040:23: [31mstyle:[39m Variable 'histo_bin' is assigned a value that is never used. [unreadVariable][0m
    TString histo_bin = "";
                      ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:350:5: [31mwarning:[39m Class 'VWPPhysFile' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor][0m
    fHistos = new VWPPhysHistograms();
    ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:350:5: [31mwarning:[39m Class 'VWPPhysFile' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq][0m
    fHistos = new VWPPhysHistograms();
    ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:347:34: [31mperformance:[39m Function parameter 'iNameBegin' should be passed by const reference. [passedByValue][0m
VWPPhysFile::VWPPhysFile( string iNameBegin, string iNameMultiplicity,
                                 ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:347:53: [31mperformance:[39m Function parameter 'iNameMultiplicity' should be passed by const reference. [passedByValue][0m
VWPPhysFile::VWPPhysFile( string iNameBegin, string iNameMultiplicity,
                                                    ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:371:32: [31mperformance:[39m Function parameter 'iDatadirectory' should be passed by const reference. [passedByValue][0m
bool VWPPhysFile::open( string iDatadirectory, string iSite, string iSubArray, int iObsTime, int iAnaID, string iPointingDirection )
                               ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:371:55: [31mperformance:[39m Function parameter 'iSite' should be passed by const reference. [passedByValue][0m
bool VWPPhysFile::open( string iDatadirectory, string iSite, string iSubArray, int iObsTime, int iAnaID, string iPointingDirection )
                                                      ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:371:69: [31mperformance:[39m Function parameter 'iSubArray' should be passed by const reference. [passedByValue][0m
bool VWPPhysFile::open( string iDatadirectory, string iSite, string iSubArray, int iObsTime, int iAnaID, string iPointingDirection )
                                                                    ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:371:113: [31mperformance:[39m Function parameter 'iPointingDirection' should be passed by const reference. [passedByValue][0m
bool VWPPhysFile::open( string iDatadirectory, string iSite, string iSubArray, int iObsTime, int iAnaID, string iPointingDirection )
                                                                                                                ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:451:50: [31mperformance:[39m Function parameter 'iOutFileName' should be passed by const reference. [passedByValue][0m
VCombineWPPhysFiles::VCombineWPPhysFiles( string iOutFileName )
                                                 ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:589:27: [31mstyle:[39m Parameter 'argv' can be declared with const [constParameter][0m
int main( int argc, char* argv[] )
                          ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:553:25: [31merror:[39m Out of bounds access in expression 'i_Sens.begin()' because 'i_Sens' is empty. [containerOutOfBounds][0m
        if( i_Sens.begin()->second < fPhysFile.size() )
                        ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:541:36: [2mnote:[0m Assuming condition is false
        for( unsigned int i = 0; i < fPhysFile.size(); i++ )
                                   ^
[1msrc/writeCTAWPPhysSensitivityOptimisedAndSmoothedFiles.cpp:553:25: [2mnote:[0m Access out of bounds
        if( i_Sens.begin()->second < fPhysFile.size() )
                        ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:39:5: [31mperformance:[39m Variable 'fTelType' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList][0m
    fTelType = 0;
    ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:40:5: [31mperformance:[39m Variable 'fTelTypeName' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList][0m
    fTelTypeName = "";
    ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:137:5: [31mperformance:[39m Variable 'fPointingDirection' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList][0m
    fPointingDirection = "_0deg";
    ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:593:23: [31mstyle:[39m Local variable 'h2' shadows outer variable [shadowVariable][0m
                TH3F *h2 = ( TH3F* )iP.Get( iHName.c_str() );
                      ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:568:11: [2mnote:[0m Shadowed declaration
    TH2F* h2 = ( TH2F* )iP.Get( "DiffSens_offaxis" );
          ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:593:23: [2mnote:[0m Shadow variable
                TH3F *h2 = ( TH3F* )iP.Get( iHName.c_str() );
                      ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:116:44: [31mperformance:[39m Function parameter 'iPointingDirection' should be passed by const reference. [passedByValue][0m
        void setFileNameParameters( string iPointingDirection, int iAnalysisID )
                                           ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:237:42: [31mperformance:[39m Function parameter 'iSite' should be passed by const reference. [passedByValue][0m
bool VSensitivityTree::fillEvent( string iSite,
                                         ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:245:42: [31mperformance:[39m Function parameter 'iWPPhysDirectory' should be passed by const reference. [passedByValue][0m
                                  string iWPPhysDirectory,
                                         ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:246:42: [31mperformance:[39m Function parameter 'iMSTDateID' should be passed by const reference. [passedByValue][0m
                                  string iMSTDateID )
                                         ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:396:31: [31mwarning:[39m Either the condition 'fTelescopeData.size()>1' is redundant or fTelescopeData size can be 2. Expression 'fTelescopeData[2]' cause access out of bounds. [containerOutOfBounds][0m
                fTelescopeData[2].push_back( new VTelescopeData() );
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:394:39: [2mnote:[0m Assuming that condition 'fTelescopeData.size()>1' is not redundant
            if( fTelescopeData.size() > 1 )
                                      ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:396:31: [2mnote:[0m Access out of bounds
                fTelescopeData[2].push_back( new VTelescopeData() );
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:397:31: [31mwarning:[39m Either the condition 'fTelescopeData.size()>1' is redundant or fTelescopeData size can be 2. Expression 'fTelescopeData[2]' cause access out of bounds. [containerOutOfBounds][0m
                fTelescopeData[2].back()->fTelTypeName = "NectarCam-MST";
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:394:39: [2mnote:[0m Assuming that condition 'fTelescopeData.size()>1' is not redundant
            if( fTelescopeData.size() > 1 )
                                      ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:397:31: [2mnote:[0m Access out of bounds
                fTelescopeData[2].back()->fTelTypeName = "NectarCam-MST";
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:398:31: [31mwarning:[39m Either the condition 'fTelescopeData.size()>1' is redundant or fTelescopeData size can be 2. Expression 'fTelescopeData[2]' cause access out of bounds. [containerOutOfBounds][0m
                fTelescopeData[2].back()->fTel_x = iTelX;
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:394:39: [2mnote:[0m Assuming that condition 'fTelescopeData.size()>1' is not redundant
            if( fTelescopeData.size() > 1 )
                                      ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:398:31: [2mnote:[0m Access out of bounds
                fTelescopeData[2].back()->fTel_x = iTelX;
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:399:31: [31mwarning:[39m Either the condition 'fTelescopeData.size()>1' is redundant or fTelescopeData size can be 2. Expression 'fTelescopeData[2]' cause access out of bounds. [containerOutOfBounds][0m
                fTelescopeData[2].back()->fTel_y = iTelY;
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:394:39: [2mnote:[0m Assuming that condition 'fTelescopeData.size()>1' is not redundant
            if( fTelescopeData.size() > 1 )
                                      ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:399:31: [2mnote:[0m Access out of bounds
                fTelescopeData[2].back()->fTel_y = iTelY;
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:408:31: [31mwarning:[39m Either the condition 'fTelescopeData.size()>2' is redundant or fTelescopeData size can be 3. Expression 'fTelescopeData[3]' cause access out of bounds. [containerOutOfBounds][0m
                fTelescopeData[3].push_back( new VTelescopeData() );
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:406:39: [2mnote:[0m Assuming that condition 'fTelescopeData.size()>2' is not redundant
            if( fTelescopeData.size() > 2 )
                                      ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:408:31: [2mnote:[0m Access out of bounds
                fTelescopeData[3].push_back( new VTelescopeData() );
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:409:31: [31mwarning:[39m Either the condition 'fTelescopeData.size()>2' is redundant or fTelescopeData size can be 3. Expression 'fTelescopeData[3]' cause access out of bounds. [containerOutOfBounds][0m
                fTelescopeData[3].back()->fTelTypeName = "SST";
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:406:39: [2mnote:[0m Assuming that condition 'fTelescopeData.size()>2' is not redundant
            if( fTelescopeData.size() > 2 )
                                      ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:409:31: [2mnote:[0m Access out of bounds
                fTelescopeData[3].back()->fTelTypeName = "SST";
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:410:31: [31mwarning:[39m Either the condition 'fTelescopeData.size()>2' is redundant or fTelescopeData size can be 3. Expression 'fTelescopeData[3]' cause access out of bounds. [containerOutOfBounds][0m
                fTelescopeData[3].back()->fTel_x = iTelX;
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:406:39: [2mnote:[0m Assuming that condition 'fTelescopeData.size()>2' is not redundant
            if( fTelescopeData.size() > 2 )
                                      ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:410:31: [2mnote:[0m Access out of bounds
                fTelescopeData[3].back()->fTel_x = iTelX;
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:411:31: [31mwarning:[39m Either the condition 'fTelescopeData.size()>2' is redundant or fTelescopeData size can be 3. Expression 'fTelescopeData[3]' cause access out of bounds. [containerOutOfBounds][0m
                fTelescopeData[3].back()->fTel_y = iTelY;
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:406:39: [2mnote:[0m Assuming that condition 'fTelescopeData.size()>2' is not redundant
            if( fTelescopeData.size() > 2 )
                                      ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:411:31: [2mnote:[0m Access out of bounds
                fTelescopeData[3].back()->fTel_y = iTelY;
                              ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:301:12: [31mstyle:[39m Unused variable: iEffDate [unusedVariable][0m
    string iEffDate;
           ^
[1msrc/writeCTAWPPhysSensitivityTree.cpp:302:12: [31mstyle:[39m Unused variable: iMSCWDate [unusedVariable][0m
    string iMSCWDate;
           ^
[1msrc/writeEventListTMVA.cpp:28:27: [31mstyle:[39m Parameter 'argv' can be declared with const [constParameter][0m
int main( int argc, char* argv[] )
                          ^
[1msrc/writeParticleRateFilesForTMVA.cpp:183:12: [31mstyle:[39m The scope of the variable 'iZenithperrun' can be reduced. [variableScope][0m
    double iZenithperrun = 0.;
           ^
[1msrc/writeParticleRateFilesForTMVA.cpp:184:12: [31mstyle:[39m The scope of the variable 'iSecantperrrun' can be reduced. [variableScope][0m
    double iSecantperrrun = 0.;
           ^
[1msrc/writeParticleRateFilesForTMVA.cpp:44:56: [31mperformance:[39m Function parameter 'iEffAreaDirectory' should be passed by const reference. [passedByValue][0m
void readRateGraphsFromEffectiveAreaFile( const string iEffAreaDirectory,
                                                       ^
[1msrc/writeParticleRateFilesForTMVA.cpp:45:22: [31mperformance:[39m Function parameter 'iEffAreaFile' should be passed by const reference. [passedByValue][0m
        const string iEffAreaFile,
                     ^
[1msrc/writeParticleRateFilesForTMVA.cpp:183:26: [31mstyle:[39m Variable 'iZenithperrun' is assigned a value that is never used. [unreadVariable][0m
    double iZenithperrun = 0.;
                         ^
[1msrc/writeParticleRateFilesForTMVA.cpp:184:27: [31mstyle:[39m Variable 'iSecantperrrun' is assigned a value that is never used. [unreadVariable][0m
    double iSecantperrrun = 0.;
                          ^
[1msrc/writeParticleRateFilesFromEffectiveAreas.cpp:197:35: [31mstyle:[39m Condition 'iMC_Gamma_onSource.size()>0' is always true [knownConditionTrueFalse][0m
    if( iMC_Gamma_onSource.size() > 0 )
                                  ^
[1msrc/writeParticleRateFilesFromEffectiveAreas.cpp:202:42: [31mstyle:[39m Condition 'iMC_Electron_onSource.size()>0' is always true [knownConditionTrueFalse][0m
        if( iMC_Electron_onSource.size() > 0 )
                                         ^
[1msrc/writeParticleRateFilesFromEffectiveAreas.cpp:227:33: [31mstyle:[39m Condition 'iMC_Electron.size()>0' is always true [knownConditionTrueFalse][0m
        if( iMC_Electron.size() > 0 )
                                ^
[1msrc/writeParticleRateFilesFromEffectiveAreas.cpp:76:38: [31mperformance:[39m Function parameter 'iObservatory' should be passed by const reference. [passedByValue][0m
                              string iObservatory = "CTA" )
                                     ^
[1msrc/writelaserinDB.cpp:438:38: [31mstyle:[39m Condition 'list_of_valid_tel.size()>0' is always true [knownConditionTrueFalse][0m
        if( list_of_valid_tel.size() > 0 )
                                     ^
[1msrc/writelaserinDB.cpp:395:34: [2mnote:[0m Assuming that condition 'list_of_valid_tel.size()>0' is not redundant
    if( list_of_valid_tel.size() > 0 )
                                 ^
[1msrc/writelaserinDB.cpp:438:38: [2mnote:[0m Condition 'list_of_valid_tel.size()>0' is always true
        if( list_of_valid_tel.size() > 0 )
                                     ^
[1msrc/writelaserinDB.cpp:449:46: [31mstyle:[39m Condition 'list_tel_missing.size()>counter' is always true [knownConditionTrueFalse][0m
            else if( list_tel_missing.size() > counter )
                                             ^
[1msrc/writelaserinDB.cpp:445:46: [2mnote:[0m Assuming that condition 'list_tel_missing.size()==counter' is not redundant
            else if( list_tel_missing.size() == counter )
                                             ^
[1msrc/writelaserinDB.cpp:449:46: [2mnote:[0m Condition 'list_tel_missing.size()>counter' is always true
            else if( list_tel_missing.size() > counter )
                                             ^
[1msrc/writelaserinDB.cpp:880:13: [31mstyle:[39m Condition '!run_in_voff_db' is always true [knownConditionTrueFalse][0m
        if( !run_in_voff_db )
            ^
[1msrc/writelaserinDB.cpp:871:31: [2mnote:[0m Assignment 'run_in_voff_db=false', assigned value is 0
        bool run_in_voff_db = false;
                              ^
[1msrc/writelaserinDB.cpp:872:45: [2mnote:[0m Assuming condition is false
        if( VERITAS_DB_LaserRunNumber_i_run == VOFFLINE_DB_LaserRunNumber_Tel[tel_indice] )
                                            ^
[1msrc/writelaserinDB.cpp:880:13: [2mnote:[0m Condition '!run_in_voff_db' is always true
        if( !run_in_voff_db )
            ^
[1msrc/writelaserinDB.cpp:289:9: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        printf( "*** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber, VERITAS_DB_LaserConfigMask, VERITAS_DB_LaserExclTel, mask_missing_tel, VERITAS_DB_LaserDate );
        ^
[1msrc/writelaserinDB.cpp:289:9: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        printf( "*** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber, VERITAS_DB_LaserConfigMask, VERITAS_DB_LaserExclTel, mask_missing_tel, VERITAS_DB_LaserDate );
        ^
[1msrc/writelaserinDB.cpp:289:9: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        printf( "*** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber, VERITAS_DB_LaserConfigMask, VERITAS_DB_LaserExclTel, mask_missing_tel, VERITAS_DB_LaserDate );
        ^
[1msrc/writelaserinDB.cpp:289:9: [31mwarning:[39m %d in format string (no. 5) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
        printf( "*** %d %2d %2d %2lu %d \n", VERITAS_DB_LaserRunNumber, VERITAS_DB_LaserConfigMask, VERITAS_DB_LaserExclTel, mask_missing_tel, VERITAS_DB_LaserDate );
        ^
[1msrc/writelaserinDB.cpp:496:5: [31mwarning:[39m %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
    printf( "d%8d %d %4s %4s %4s %4s %4s \n", VERITAS_DB_LaserDate, VERITAS_DB_LaserRunNumber, calib_status.Data(), writing_status.Data(), Stellist.Data(), Scalibstatus.Data(), Swritingstatus.Data() );
    ^
[1msrc/writelaserinDB.cpp:496:5: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
    printf( "d%8d %d %4s %4s %4s %4s %4s \n", VERITAS_DB_LaserDate, VERITAS_DB_LaserRunNumber, calib_status.Data(), writing_status.Data(), Stellist.Data(), Scalibstatus.Data(), Swritingstatus.Data() );
    ^
[1msrc/writelaserinDB.cpp:1535:5: [31mwarning:[39m %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
    sprintf( filename, "%s/data/d%d/%d.cvbf", ENVIR_VAR, Date, RunNumber );
    ^
[1msrc/writelaserinDB.cpp:1535:5: [31mwarning:[39m %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint][0m
    sprintf( filename, "%s/data/d%d/%d.cvbf", ENVIR_VAR, Date, RunNumber );
    ^
[1msrc/writelaserinDB.cpp:394:18: [31mstyle:[39m The scope of the variable 'counter' can be reduced. [variableScope][0m
    unsigned int counter = 0; // for summary
                 ^
[1msrc/writelaserinDB.cpp:326:29: [31mstyle:[39m Variable 'pbRunFile_name' is assigned a value that is never used. [unreadVariable][0m
    TString  pbRunFile_name = "pb_file";
                            ^
[1msrc/writelaserinDB.cpp:684:18: [31mstyle:[39m Variable 'want' is assigned a value that is never used. [unreadVariable][0m
    TString want = "";
                 ^
[1msrc/writelaserinDB.cpp:687:23: [31mstyle:[39m Variable 'histo_bin' is assigned a value that is never used. [unreadVariable][0m
    TString histo_bin = "";
                      ^
[1msrc/writelaserinDB.cpp:875:28: [31mstyle:[39m Variable 'run_in_voff_db' is assigned a value that is never used. [unreadVariable][0m
            run_in_voff_db = true;
                           ^
[1minc/CData.h:1191:0: [31mstyle:[39m The function 'Cut' is never used. [unusedFunction][0m

^
[1minc/VSourceGeometryFitter.h:129:0: [31mstyle:[39m The function 'DoEval' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:263:0: [31mstyle:[39m The function 'Flux_goal50_CU_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:236:0: [31mstyle:[39m The function 'Flux_goal50_CU_south' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:259:0: [31mstyle:[39m The function 'Flux_goal50_E2erg_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:232:0: [31mstyle:[39m The function 'Flux_goal50_E2erg_south' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:255:0: [31mstyle:[39m The function 'Flux_goal50_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:228:0: [31mstyle:[39m The function 'Flux_goal50_south' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:207:0: [31mstyle:[39m The function 'Flux_req05_CU_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:180:0: [31mstyle:[39m The function 'Flux_req05_CU_south' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:203:0: [31mstyle:[39m The function 'Flux_req05_E2erg_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:175:0: [31mstyle:[39m The function 'Flux_req05_E2erg_south' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:199:0: [31mstyle:[39m The function 'Flux_req05_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:171:0: [31mstyle:[39m The function 'Flux_req05_south' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:98:0: [31mstyle:[39m The function 'Flux_req50_CU_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:71:0: [31mstyle:[39m The function 'Flux_req50_CU_south' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:94:0: [31mstyle:[39m The function 'Flux_req50_E2erg_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:67:0: [31mstyle:[39m The function 'Flux_req50_E2erg_south' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:90:0: [31mstyle:[39m The function 'Flux_req50_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:63:0: [31mstyle:[39m The function 'Flux_req50_south' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:152:0: [31mstyle:[39m The function 'Flux_req5_CU_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:125:0: [31mstyle:[39m The function 'Flux_req5_CU_south' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:148:0: [31mstyle:[39m The function 'Flux_req5_E2erg_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:121:0: [31mstyle:[39m The function 'Flux_req5_E2erg_south' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:144:0: [31mstyle:[39m The function 'Flux_req5_north' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:117:0: [31mstyle:[39m The function 'Flux_req5_south' is never used. [unusedFunction][0m

^
[1minc/VDB_Connection.h:62:0: [31mstyle:[39m The function 'Get_Query_Status' is never used. [unusedFunction][0m

^
[1minc/VSourceGeometryFitter.h:208:0: [31mstyle:[39m The function 'NDim' is never used. [unusedFunction][0m

^
[1minc/VLowGainCalibrator.h:173:0: [31mstyle:[39m The function 'addDebugChannel' is never used. [unusedFunction][0m

^
[1minc/VCTASensitivityRequirements.h:44:0: [31mstyle:[39m The function 'ergs' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:188:0: [31mstyle:[39m The function 'excludeRun' is never used. [unusedFunction][0m

^
[1minc/VPlotRadialAcceptance.h:62:0: [31mstyle:[39m The function 'getAcceptanceFunction' is never used. [unusedFunction][0m

^
[1minc/VPlotRadialAcceptance.h:66:0: [31mstyle:[39m The function 'getAcceptanceHisto' is never used. [unusedFunction][0m

^
[1minc/VWPPhysSensitivityPlotsMaker.h:85:0: [31mstyle:[39m The function 'getAllinOneCanvas' is never used. [unusedFunction][0m

^
[1minc/VGammaHadronCuts.h:273:0: [31mstyle:[39m The function 'getAngularResolutionAbsoluteMinimum' is never used. [unusedFunction][0m

^
[1minc/VGammaHadronCuts.h:269:0: [31mstyle:[39m The function 'getAngularResolutionFunction' is never used. [unusedFunction][0m

^
[1minc/VGammaHadronCuts.h:281:0: [31mstyle:[39m The function 'getAngularResolutionScaleFactor' is never used. [unusedFunction][0m

^
[1minc/VDSTTree.h:141:0: [31mstyle:[39m The function 'getArrayConfig' is never used. [unusedFunction][0m

^
[1minc/VTableLookupDataHandler.h:396:0: [31mstyle:[39m The function 'getArrayReconstructionMethod' is never used. [unusedFunction][0m

^
[1minc/VAtmosphereSoundings.h:293:0: [31mstyle:[39m The function 'getAverageProfile' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:980:0: [31mstyle:[39m The function 'getAverageTZerosvars' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:459:0: [31mstyle:[39m The function 'getBorderBorderNeighbour' is never used. [unusedFunction][0m

^
[1minc/VCameraRead.h:131:0: [31mstyle:[39m The function 'getCameraName' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1477:0: [31mstyle:[39m The function 'getClusterSize' is never used. [unusedFunction][0m

^
[1minc/VAtmosphereSoundingData.h:167:0: [31mstyle:[39m The function 'getColor' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:178:0: [31mstyle:[39m The function 'getConfidinceInterval' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:121:0: [31mstyle:[39m The function 'getCountingHistogramOff' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:116:0: [31mstyle:[39m The function 'getCountingHistogramOn' is never used. [unusedFunction][0m

^
[1minc/VDB_PixelDataReader.h:83:0: [31mstyle:[39m The function 'getCurrents_DeadChannelList' is never used. [unusedFunction][0m

^
[1minc/VEventLoop.h:101:0: [31mstyle:[39m The function 'getCutNTrigger' is never used. [unusedFunction][0m

^
[1minc/VDSTTree.h:231:0: [31mstyle:[39m The function 'getDSTNumTelescopes' is never used. [unusedFunction][0m

^
[1minc/VAtmosphereSoundings.h:281:0: [31mstyle:[39m The function 'getDataInterpol' is never used. [unusedFunction][0m

^
[1minc/VDBRunInfo.h:91:0: [31mstyle:[39m The function 'getDataStartTimeHMS' is never used. [unusedFunction][0m

^
[1minc/VDBRunInfo.h:95:0: [31mstyle:[39m The function 'getDataStoppTimeHMS' is never used. [unusedFunction][0m

^
[1minc/VAtmosphereSoundings.h:289:0: [31mstyle:[39m The function 'getDataUserProfile' is never used. [unusedFunction][0m

^
[1minc/VDeadTime.h:82:0: [31mstyle:[39m The function 'getDeadTimeFraction_status' is never used. [unusedFunction][0m

^
[1minc/VDeadTime.h:75:0: [31mstyle:[39m The function 'getDeadTimeMS' is never used. [unusedFunction][0m

^
[1minc/VSensitivityCalculator.h:250:0: [31mstyle:[39m The function 'getDebug' is never used. [unusedFunction][0m

^
[1minc/VGammaHadronCuts.h:297:0: [31mstyle:[39m The function 'getDirectionCutFixedAboveEnergy_TeV' is never used. [unusedFunction][0m

^
[1minc/VDispAnalyzer.h:145:0: [31mstyle:[39m The function 'getDisp' is never used. [unusedFunction][0m

^
[1minc/VDispTableAnalyzer.h:73:0: [31mstyle:[39m The function 'getDispMiss' is never used. [unusedFunction][0m

^
[1minc/VDispTableAnalyzer.h:65:0: [31mstyle:[39m The function 'getDispPhi' is never used. [unusedFunction][0m

^
[1minc/VDispTableAnalyzer.h:69:0: [31mstyle:[39m The function 'getDispPhiE' is never used. [unusedFunction][0m

^
[1minc/VEffectiveAreaCalculatorMCHistograms.h:67:0: [31mstyle:[39m The function 'getEnergyAxisMax_log10' is never used. [unusedFunction][0m

^
[1minc/VEffectiveAreaCalculatorMCHistograms.h:63:0: [31mstyle:[39m The function 'getEnergyAxisMin_log10' is never used. [unusedFunction][0m

^
[1minc/VEnergySpectrum.h:162:0: [31mstyle:[39m The function 'getEnergyCountingOnHistogram' is never used. [unusedFunction][0m

^
[1minc/CData.h:445:0: [31mstyle:[39m The function 'getEnergy_per_telescope' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:336:0: [31mstyle:[39m The function 'getEventMJDVector' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:352:0: [31mstyle:[39m The function 'getEventTimeVector' is never used. [unusedFunction][0m

^
[1minc/VDB_PixelDataReader.h:127:0: [31mstyle:[39m The function 'getFADC_channels' is never used. [unusedFunction][0m

^
[1minc/VDB_PixelDataReader.h:123:0: [31mstyle:[39m The function 'getFADC_modules' is never used. [unusedFunction][0m

^
[1minc/VExposure.h:177:0: [31mstyle:[39m The function 'getGalacticMap' is never used. [unusedFunction][0m

^
[1minc/VExposure.h:181:0: [31mstyle:[39m The function 'getGalacticMapAcceptanceCorrected' is never used. [unusedFunction][0m

^
[1minc/VExposure.h:189:0: [31mstyle:[39m The function 'getGalacticMapAcceptanceCorrectedAitoff' is never used. [unusedFunction][0m

^
[1minc/VExposure.h:185:0: [31mstyle:[39m The function 'getGalacticMapAitoff' is never used. [unusedFunction][0m

^
[1minc/VAtmosphereSoundings.h:259:0: [31mstyle:[39m The function 'getHeights' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:446:0: [31mstyle:[39m The function 'getHistograms' is never used. [unusedFunction][0m

^
[1minc/CData.h:428:0: [31mstyle:[39m The function 'getImgSel_list' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:196:0: [31mstyle:[39m The function 'getIndexScan' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:200:0: [31mstyle:[39m The function 'getIndexScanLikelihood' is never used. [unusedFunction][0m

^
[1minc/VStarCatalogue.h:92:0: [31mstyle:[39m The function 'getListOfStars' is never used. [unusedFunction][0m

^
[1minc/VInstrumentResponseFunctionData.h:89:0: [31mstyle:[39m The function 'getListofHistograms' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:602:0: [31mstyle:[39m The function 'getMC_FADC_TraceStart' is never used. [unusedFunction][0m

^
[1minc/VTableLookupDataHandler.h:489:0: [31mstyle:[39m The function 'getMSCLtel' is never used. [unusedFunction][0m

^
[1minc/VTableLookupDataHandler.h:485:0: [31mstyle:[39m The function 'getMSCWtel' is never used. [unusedFunction][0m

^
[1minc/VTimeMask.h:130:0: [31mstyle:[39m The function 'getMaskStartUTC' is never used. [unusedFunction][0m

^
[1minc/VTimeMask.h:114:0: [31mstyle:[39m The function 'getMaskStatus' is never used. [unusedFunction][0m

^
[1minc/VTimeMask.h:170:0: [31mstyle:[39m The function 'getMeanUTC_Accepted' is never used. [unusedFunction][0m

^
[1minc/VTimeMask.h:166:0: [31mstyle:[39m The function 'getMeanUTC_Events' is never used. [unusedFunction][0m

^
[1minc/VTimeMask.h:158:0: [31mstyle:[39m The function 'getMeanUTC_Run' is never used. [unusedFunction][0m

^
[1minc/VStatistics.h:424:0: [31mstyle:[39m The function 'getMedianAbsoluteDeviation' is never used. [unusedFunction][0m

^
[1minc/VAtmosphereSoundings.h:255:0: [31mstyle:[39m The function 'getModtranHeights' is never used. [unusedFunction][0m

^
[1minc/VShowerParameters.h:163:0: [31mstyle:[39m The function 'getNArrayMaxReconstructionMethods' is never used. [unusedFunction][0m

^
[1minc/VShowerParameters.h:159:0: [31mstyle:[39m The function 'getNArrayReconstructionMethods' is never used. [unusedFunction][0m

^
[1minc/VTableLookupDataHandler.h:513:0: [31mstyle:[39m The function 'getNEvents' is never used. [unusedFunction][0m

^
[1minc/VCameraRead.h:204:0: [31mstyle:[39m The function 'getNPatches' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1511:0: [31mstyle:[39m The function 'getNcluster_cleaned' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1519:0: [31mstyle:[39m The function 'getNcluster_uncleaned' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:206:0: [31mstyle:[39m The function 'getNormScan' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:210:0: [31mstyle:[39m The function 'getNormScanLikelihood' is never used. [unusedFunction][0m

^
[1minc/VPlotInstrumentResponseFunction.h:84:0: [31mstyle:[39m The function 'getNumberOfDataSets' is never used. [unusedFunction][0m

^
[1minc/VRadialAcceptance.h:153:0: [31mstyle:[39m The function 'getNumberofRawFiles' is never used. [unusedFunction][0m

^
[1minc/VDBRunInfo.h:135:0: [31mstyle:[39m The function 'getObservingMode' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:136:0: [31mstyle:[39m The function 'getOffCounts' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:131:0: [31mstyle:[39m The function 'getOnCounts' is never used. [unusedFunction][0m

^
[1minc/VCameraRead.h:208:0: [31mstyle:[39m The function 'getPatch' is never used. [unusedFunction][0m

^
[1minc/VPedestalCalculator.h:74:0: [31mstyle:[39m The function 'getPedestalTree' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:693:0: [31mstyle:[39m The function 'getPedsFromPLine' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:764:0: [31mstyle:[39m The function 'getPedsLowGainrms' is never used. [unusedFunction][0m

^
[1minc/VCameraRead.h:240:0: [31mstyle:[39m The function 'getPixelType' is never used. [unusedFunction][0m

^
[1minc/VEnergySpectrum.h:276:0: [31mstyle:[39m The function 'getPlottingCanvas' is never used. [unusedFunction][0m

^
[1minc/VPlotUtilities.h:95:0: [31mstyle:[39m The function 'getPlottingColor' is never used. [unusedFunction][0m

^
[1minc/VPlotUtilities.h:115:0: [31mstyle:[39m The function 'getPlottingFillStyle' is never used. [unusedFunction][0m

^
[1minc/VPlotUtilities.h:107:0: [31mstyle:[39m The function 'getPlottingLineStyle' is never used. [unusedFunction][0m

^
[1minc/VPlotUtilities.h:111:0: [31mstyle:[39m The function 'getPlottingLineWidth' is never used. [unusedFunction][0m

^
[1minc/VPlotUtilities.h:103:0: [31mstyle:[39m The function 'getPlottingMarkerSize' is never used. [unusedFunction][0m

^
[1minc/VPlotUtilities.h:99:0: [31mstyle:[39m The function 'getPlottingMarkerStyle' is never used. [unusedFunction][0m

^
[1minc/VPointing.h:66:0: [31mstyle:[39m The function 'getPointingType' is never used. [unusedFunction][0m

^
[1minc/VVirtualDataReader.h:187:0: [31mstyle:[39m The function 'getPrevEvent' is never used. [unusedFunction][0m

^
[1minc/VWPPhysSensitivityPlotsMaker.h:89:0: [31mstyle:[39m The function 'getProjectedSensitivityCanvas' is never used. [unusedFunction][0m

^
[1minc/VTraceHandler.h:95:0: [31mstyle:[39m The function 'getPulseTimingStatus' is never used. [unusedFunction][0m

^
[1minc/VEnergySpectrumfromLiterature.h:91:0: [31mstyle:[39m The function 'getRandomErrorHistograms' is never used. [unusedFunction][0m

^
[1minc/VFluxCalculation.h:133:0: [31mstyle:[39m The function 'getRequestedPhaseBins_start' is never used. [unusedFunction][0m

^
[1minc/VFluxCalculation.h:137:0: [31mstyle:[39m The function 'getRequestedPhaseBins_stopp' is never used. [unusedFunction][0m

^
[1minc/VFluxCalculation.h:125:0: [31mstyle:[39m The function 'getRequestedTimeBins_MJD_start' is never used. [unusedFunction][0m

^
[1minc/VFluxCalculation.h:129:0: [31mstyle:[39m The function 'getRequestedTimeBins_MJD_stopp' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:126:0: [31mstyle:[39m The function 'getResponseMatrix' is never used. [unusedFunction][0m

^
[1minc/VTimeMask.h:118:0: [31mstyle:[39m The function 'getRunID' is never used. [unusedFunction][0m

^
[1minc/VAnalysisUtilities.h:97:0: [31mstyle:[39m The function 'getRunListCut_MJD_maxVector' is never used. [unusedFunction][0m

^
[1minc/VAnalysisUtilities.h:93:0: [31mstyle:[39m The function 'getRunListCut_MJD_minVector' is never used. [unusedFunction][0m

^
[1minc/VAnalysisUtilities.h:89:0: [31mstyle:[39m The function 'getRunList_MJD_max' is never used. [unusedFunction][0m

^
[1minc/VAnalysisUtilities.h:85:0: [31mstyle:[39m The function 'getRunList_MJD_min' is never used. [unusedFunction][0m

^
[1minc/VStereoAnalysis.h:88:0: [31mstyle:[39m The function 'getRunMJD' is never used. [unusedFunction][0m

^
[1minc/VDBRunInfo.h:143:0: [31mstyle:[39m The function 'getRunStatus' is never used. [unusedFunction][0m

^
[1minc/VSimulationDataReader.h:60:0: [31mstyle:[39m The function 'getSLocalTrigger' is never used. [unusedFunction][0m

^
[1minc/VSimulationDataReader.h:68:0: [31mstyle:[39m The function 'getSMC_runNumber' is never used. [unusedFunction][0m

^
[1minc/VDeadTime.h:71:0: [31mstyle:[39m The function 'getScalarDeadTimeFraction' is never used. [unusedFunction][0m

^
[1minc/VPlotWPPhysSensitivity.h:137:0: [31mstyle:[39m The function 'getSensitivityFOM' is never used. [unusedFunction][0m

^
[1minc/VPlotWPPhysSensitivity.h:141:0: [31mstyle:[39m The function 'getSensitivityFOM_error' is never used. [unusedFunction][0m

^
[1minc/VSourceGeometryFitter.h:78:0: [31mstyle:[39m The function 'getSkyMap' is never used. [unusedFunction][0m

^
[1minc/VBaseRawDataReader.h:82:0: [31mstyle:[39m The function 'getSourceFileName' is never used. [unusedFunction][0m

^
[1minc/VPointingDB.h:114:0: [31mstyle:[39m The function 'getSourceNameDB' is never used. [unusedFunction][0m

^
[1minc/VStarCatalogue.h:71:0: [31mstyle:[39m The function 'getStarCatalogueName' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:898:0: [31mstyle:[39m The function 'getSumWindowMaxTimedifferenceToDoublePassPosition' is never used. [unusedFunction][0m

^
[1minc/VTMVAEvaluator.h:253:0: [31mstyle:[39m The function 'getTMVAThetaCutVariable' is never used. [unusedFunction][0m

^
[1minc/VPointingDB.h:118:0: [31mstyle:[39m The function 'getTargetDecDB' is never used. [unusedFunction][0m

^
[1minc/VPointingDB.h:122:0: [31mstyle:[39m The function 'getTargetRADB' is never used. [unusedFunction][0m

^
[1minc/VPointingDB.h:126:0: [31mstyle:[39m The function 'getTelExpectedAzimuthDB' is never used. [unusedFunction][0m

^
[1minc/VPointingDB.h:130:0: [31mstyle:[39m The function 'getTelExpectedElevationDB' is never used. [unusedFunction][0m

^
[1minc/VSkyCoordinates.h:108:0: [31mstyle:[39m The function 'getTelLatitude' is never used. [unusedFunction][0m

^
[1minc/VSkyCoordinates.h:112:0: [31mstyle:[39m The function 'getTelLongitude' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:811:0: [31mstyle:[39m The function 'getTemplateMu' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:819:0: [31mstyle:[39m The function 'getTemplateMuMax' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:815:0: [31mstyle:[39m The function 'getTemplateMuMin' is never used. [unusedFunction][0m

^
[1minc/VSkyCoordinates.h:132:0: [31mstyle:[39m The function 'getTime' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:949:0: [31mstyle:[39m The function 'getTimeSinceRunStart' is never used. [unusedFunction][0m

^
[1minc/VTraceHandler.h:69:0: [31mstyle:[39m The function 'getTraceLength' is never used. [unusedFunction][0m

^
[1minc/VStereoAnalysis.h:106:0: [31mstyle:[39m The function 'getTreeWithSelectedEvents' is never used. [unusedFunction][0m

^
[1minc/VDBRunInfo.h:147:0: [31mstyle:[39m The function 'getWeather' is never used. [unusedFunction][0m

^
[1minc/VStatistics.h:384:0: [31mstyle:[39m The function 'getWeightedMean' is never used. [unusedFunction][0m

^
[1minc/VPointingDB.h:147:0: [31mstyle:[39m The function 'getWobbleEastDB' is never used. [unusedFunction][0m

^
[1minc/VPointingDB.h:143:0: [31mstyle:[39m The function 'getWobbleNorthDB' is never used. [unusedFunction][0m

^
[1minc/VTraceHandler.h:108:0: [31mstyle:[39m The function 'getifIPRmeasure' is never used. [unusedFunction][0m

^
[1minc/VBFDataReader.h:43:0: [31mstyle:[39m The function 'hasAT' is never used. [unusedFunction][0m

^
[1minc/VEvndispReconstructionParameter.h:47:0: [31mstyle:[39m The function 'isCutSet' is never used. [unusedFunction][0m

^
[1minc/VEffectiveAreaCalculatorMCHistograms.h:78:0: [31mstyle:[39m The function 'isMCCuts' is never used. [unusedFunction][0m

^
[1minc/VVirtualDataReader.h:234:0: [31mstyle:[39m The function 'isPEFormat' is never used. [unusedFunction][0m

^
[1minc/Cshowerpars.h:206:0: [31mstyle:[39m The function 'isShort' is never used. [unusedFunction][0m

^
[1minc/VVirtualDataReader.h:245:0: [31mstyle:[39m The function 'isVBFMC' is never used. [unusedFunction][0m

^
[1minc/VVirtualDataReader.h:331:0: [31mstyle:[39m The function 'isZeroSuppressed' is never used. [unusedFunction][0m

^
[1minc/VEffectiveAreaCalculatorMCHistograms.h:82:0: [31mstyle:[39m The function 'listEntries' is never used. [unusedFunction][0m

^
[1msrc/VImageParameterFitter.cpp:1245:0: [31mstyle:[39m The function 'normal2DRotated' is never used. [unusedFunction][0m

^
[1minc/VAtmosphereSoundings.h:145:0: [31mstyle:[39m The function 'plotCORSIKA_IndexofRefraction_vs_Height' is never used. [unusedFunction][0m

^
[1minc/VAtmosphereSoundings.h:149:0: [31mstyle:[39m The function 'plotCORSIKA_Ozone_vs_Height' is never used. [unusedFunction][0m

^
[1minc/VPlotInstrumentResponseFunction.h:116:0: [31mstyle:[39m The function 'plotMigrationMatrix' is never used. [unusedFunction][0m

^
[1minc/VAtmosphereSoundings.h:178:0: [31mstyle:[39m The function 'plotUserAtmosphere_IndexofRefraction_vs_Height' is never used. [unusedFunction][0m

^
[1minc/VAtmosphereSoundings.h:182:0: [31mstyle:[39m The function 'plotUserAtmosphere_Ozone_vs_Height' is never used. [unusedFunction][0m

^
[1minc/VTimeMask.h:146:0: [31mstyle:[39m The function 'resetEventTotals' is never used. [unusedFunction][0m

^
[1minc/VLowGainCalibrator.h:177:0: [31mstyle:[39m The function 'setAllDebugChannels' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1178:0: [31mstyle:[39m The function 'setBorderThresh' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1185:0: [31mstyle:[39m The function 'setBrightNonImageThresh' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1192:0: [31mstyle:[39m The function 'setCalData' is never used. [unusedFunction][0m

^
[1minc/VLowGainCalibrator.h:190:0: [31mstyle:[39m The function 'setDSTEventLimits' is never used. [unusedFunction][0m

^
[1minc/VLowGainCalibrator.h:169:0: [31mstyle:[39m The function 'setDebugChannels' is never used. [unusedFunction][0m

^
[1minc/VPlotAnasumHistograms.h:143:0: [31mstyle:[39m The function 'setDebugInfo' is never used. [unusedFunction][0m

^
[1minc/VTraceHandler.h:118:0: [31mstyle:[39m The function 'setDynamicRange' is never used. [unusedFunction][0m

^
[1minc/VEffectiveAreaCalculator.h:363:0: [31mstyle:[39m The function 'setEffectiveArea' is never used. [unusedFunction][0m

^
[1minc/VGammaHadronCuts.h:401:0: [31mstyle:[39m The function 'setEnergyCuts' is never used. [unusedFunction][0m

^
[1minc/VSpectralWeight.h:44:0: [31mstyle:[39m The function 'setEnergySpectrum' is never used. [unusedFunction][0m

^
[1minc/VEnergySpectrum.h:232:0: [31mstyle:[39m The function 'setEnergyThreshold' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1255:0: [31mstyle:[39m The function 'setFADCtoPhe' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1340:0: [31mstyle:[39m The function 'setHistoFilling' is never used. [unusedFunction][0m

^
[1minc/VGrIsuReader.h:309:0: [31mstyle:[39m The function 'setIgnoreCFGVersions' is never used. [unusedFunction][0m

^
[1minc/VLightCurvePlotter.h:98:0: [31mstyle:[39m The function 'setIgnoreUpperLimits' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1360:0: [31mstyle:[39m The function 'setImageThresh' is never used. [unusedFunction][0m

^
[1minc/VLikelihoodFitter.h:98:0: [31mstyle:[39m The function 'setMJDMinMax' is never used. [unusedFunction][0m

^
[1minc/VTableCalculator.h:68:0: [31mstyle:[39m The function 'setOutputDirectory' is never used. [unusedFunction][0m

^
[1minc/VSourceGeometryFitter.h:91:0: [31mstyle:[39m The function 'setPSF' is never used. [unusedFunction][0m

^
[1minc/VSensitivityCalculator.h:306:0: [31mstyle:[39m The function 'setPlotCrabFluxLineValues' is never used. [unusedFunction][0m

^
[1minc/VSensitivityCalculator.h:310:0: [31mstyle:[39m The function 'setPlotDebug' is never used. [unusedFunction][0m

^
[1minc/VExposure.h:207:0: [31mstyle:[39m The function 'setPlotExtendedSourcesFromCataloge' is never used. [unusedFunction][0m

^
[1minc/VPlotVERITASPerformance.h:86:0: [31mstyle:[39m The function 'setPlotOtherInstrumentColor' is never used. [unusedFunction][0m

^
[1minc/VExposure.h:211:0: [31mstyle:[39m The function 'setPlotSourceNames' is never used. [unusedFunction][0m

^
[1minc/VExposure.h:244:0: [31mstyle:[39m The function 'setPlotVTSObjects' is never used. [unusedFunction][0m

^
[1minc/VAtmosphereSoundings.h:225:0: [31mstyle:[39m The function 'setPlottingRangeHeight' is never used. [unusedFunction][0m

^
[1minc/VEnergySpectrum.h:225:0: [31mstyle:[39m The function 'setReBinningGroupings' is never used. [unusedFunction][0m

^
[1minc/VRunStats.h:273:0: [31mstyle:[39m The function 'setReadFullHVEvndispData' is never used. [unusedFunction][0m

^
[1minc/VEnergySpectrum.h:269:0: [31mstyle:[39m The function 'setSpectralFitRangeLog' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1545:0: [31mstyle:[39m The function 'setSumFirst' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1570:0: [31mstyle:[39m The function 'setTemplateMu' is never used. [unusedFunction][0m

^
[1minc/VEvndispData.h:1724:0: [31mstyle:[39m The function 'setTraceWidth' is never used. [unusedFunction][0m

^
[1minc/VPlotWPPhysSensitivity.h:204:0: [31mstyle:[39m The function 'setUseIntegratedSensitivityForOffAxisPlots' is never used. [unusedFunction][0m

^
[1mnofile:0:0: [31minformation:[39m Cppcheck cannot find all the include files (use --check-config for details) [missingInclude][0m

